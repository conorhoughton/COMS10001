%!PS-Adobe-2.0
%%Creator: dvips(k) 5.98 Copyright 2009 Radical Eye Software
%%Title: 1_introduction.dvi
%%CreationDate: Thu Jan 26 15:40:02 2017
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMSL10 CMSSBX10 CMR10 CMTI10 CMBX10 CMTT10 CMMI10 CMMI8
%%+ CMSY10 CMR8 CMEX10 CMSY8
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips 1_introduction -o
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.01.26:1539
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 90 2009-01-30 10:58:51Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.06, 2009/01/30
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionaray
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
/Rand { rand 4294967295 div } def		% a real random number
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/PenroseFill {%	 on stack: scaling factor
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
  pop pop 
} def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
%/NArray { 
%   aload length 2 div dup dup cvi eq not { exch pop } if /n exch
%   cvi def 
%} def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  showpoints { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED /c ED /n ED 
  cvi dup 1 lt { pop 1 } if 
  /s ED 
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if
  /dx ED dy div round dy mul 
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput { 
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
} def
%
/BeginOL { 
  dup (all) eq exch TheOL eq or 
    { IfVisible not { Visible /IfVisible true def } if } 
    { IfVisible { Invisible /IfVisible false def } if } ifelse 
} def
%
/InitOL { 
  /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
  /Visible { CP OLUnit idtransform T moveto } def 
  /Invisible { CP OLUnit neg exch neg exch idtransform T moveto } def 
  /BOL { BeginOL } def
  /IfVisible true def 
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 26 2008-06-14 11:50:02Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.01, 2008/01/01
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.12
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower IsEndingFactor { pop exit } if} loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
end

% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 26 2008-06-14 11:50:02Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2008/04/18
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def

end
/PSTricksDotFont exch definefont pop

%% end

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMSY8
%!PS-AdobeFont-1.0: CMSY8 003.002
%%Title: CMSY8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY8 known{/CMSY8 findfont dup/UniqueID known{dup
/UniqueID get 5096649 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY8 def
/FontBBox {-30 -955 1185 779 }readonly def
/UniqueID 5096649 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY8.) readonly def
/FullName (CMSY8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 33 /arrowright put
dup 49 /infinity put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D80B73E7B6CB7548
0E1D77FFC695988391DC44AEED8CC947B3D7E198B9620E2238DB3A2819182F03
14498B8CDFBA48926DA721920B221FB33BC21A8456AF10891403501D0F6415F0
7E041AFFE109F640E54FC1A365674711EFF94E752652A4C8DA62CDB1149DB899
2C4A4BD77A06E81E93C5698C05DD02F74A0756082738BDB53003B483752AE498
DD718AEA8F3FB5A6B7E2D2AE8F309065F3D556F9A34AB90C88833A54295E0982
209C466A301BA3372AABEE20D862C6DC6B6FAC1463C8CBA8AD766ED1B4C9D712
2BECB4E6ABF558D8AB5281C35726BB8D046982C0DDAE17BFFC9394125E4E84C0
B283977D31460B8EED4346CCB09F64DA0ACB640C6DBF32F2DC30D54668C1CC12
24C7280593088E9958C047125C323E9C842801346A9CE5F50413D69F6DE99471
65D2E387765E92EA4C43F17B467DF6E266D92551009C0E52E7219AE9F5E2E8D2
88852086FF3600BFB50AF3EAF8C009D8D5F084B510F792385F328F7EFA8C38AD
CDAB2EEDFBC6AA45F6DD7364C2F02DD2BE6C79C8361E83D4267CEC2407689864
B57B5D967FC80AB3BE8CA43955FB0FD3081D438437559AD24A7ADD484C1E4A77
B00BDCB0D1B121FEE983412E1EA5489BDCE5DCB4A7310135956B230C0DE7BBED
516369A92BC41FAC8D73490984942D930DC193BF0C774C1AEF627B969EE4B001
11381AC57815D7581E2372A1DB740B09F4A7FB4318B765DA4E7B44E8805CEF85
44EC3B10613FE7B397BF91B69A5CB2E9086D1E7A1FAE0A9ABF2A237A2D29ABFF
E392A18AEACBF28274E775D3FBAED4F46B982B9DA4602E24094EDCCBC9D6FC0F
67C60376879245606C0B9C9A678E8917516BE1CF097B1C75C9F0DDAD6899F08F
81FB7A198D45FE060CD2A550D9B8D58B882B969D7BC3EC018A1FE92BDB262835
26516FF97AC387EA525FF987E5EB1EAAE4EA5866C9CC043D183763C530F7D7A1
2070E4044507C4E5611FCC117FBE4396E0B24F672CD53D5FDFA56D561FB86D40
90A52A7C7F29A119DFFB694A8C445367746A49CA5FA83163BE448EB19625DF26
609A8C8672631A10411036CAA3D6C2F822A4B2505DCBE8E1CE6916AE515E78CE
E8C894B134BF811671D17C19248853131DFFAEDB24B15FF17EAC194662460642
48D23515AD434C68DF56753806FE96DB3A29F9D4980E0B6EAED7383F9FAD2584
8F85679D6D1933677ADF5D31FE6E43DABF137E834A1DEA632D36EA5728625159
8F33348893C9D1C510501628E4A9A80587DF6E179FAF68B158406A3EBCD726E2
AC17F2DF8B3607072824D2E5A6479F7BADE32E603E54E7A83BB2DFDEDB0D80CD
1F1BDD4F6C9025CC3A8A3685DF10A8183FA80CE0F0FE2BFF2500F76B1037AE41
56D2D7FB468C3CA7549E3599A2AACF66302572F1B35BC8EF7C23F6FC4B720228
1D673D903111CE378AAE83480B4DEB7EA84BB35F4F7BE997DD4FFF5A9B5E7650
3C7365BA0965B242DC369D03215651184024A08EC284F1798B0726152884B4D8
46411B3BC8F5CB53A70AD53BD7B1AF23528849B56CF2F75609FE715878CF6448
38579380688B47AE3D374B0DB6ECA5B8284414090123D47F3F9DF389E023F431
6B4C0DDEE4190DEEF4CA772742012754DA9A44A8F550FADA6D8FB0C512D5BA2C
BB7DF71B1DA41FB6936BA71B710CC6A80751E43436F0F5888F51AB370DD4A088
40F402661E08732C960705C7E0D29B8DA1A8A3E119409E51EE575E9655F47568
023977917C8EC610BEBDB9C1F4EBC192084D63EAA00EC87B53E86620BB5AE51A
579B0F8E1972CE1DA02832FC75184F45409DD9D413402C2FA27BCB0AE6DB4CE1
5AFB114E23232DE07C4674969A1FC94D152C6D3A611F029ACF4D949A2C0755D0
31C7DACDBB4DFCFAF7E87295CCF5D4AE28D87ABC3533D87EEF1507B9FF9063F7
F007DF03734A20BC3A198B049000C92D2849C62DDAA719FC28EB372793E20128
D786670E08948808BA45C4F6AA0DD8A8357CCC47228A760C5C7864853BD9C9A4
285E446CB72C5C9D3F03FAB000810DC5674061FA116153040743E846506CFA67
FA8770E785D7DBC7293F37389A0859CC22275B23C44B57B92A033A7BD194340A
D6BAC6E103402F8396A5394C617CB2A27D9500921D5DA06115EC81715EA8E360
4A95DCE8689CBE268B8E6C8B806CFB0ECBF634250243C9E1AFFACAD65311FA4C
1DB0988203537E5EF12B86FB454D06CF05E4F4FC4143D62920E99304245B6ABC
82E21192BE94F5E980DB21E07FEDF0EB0CAF4ABDFC20EF08A2A44A7940E2862E
08FABA516152DBA899D6CA561EB08C7C8298DD511084E5230CEBF28AB1D84C85
B5BAF4616C28FE05AFA4BABB3BA03F8CEEF3F3EB0D3034BD3D8D06629B8E9EBD
72484057E71C9EB4DFC7C2CE7749271AC926C2419D618FB0B60FD6F81F0F2C04
E529CC74DCC9E4AF32D935D7CA65FBD0842A7BAF162D08F782E65DF3AD9EFE69
198AFA9208B22BC21BC4ECABB9BFFBA84C8421B74748E1EAAACEB59E566838F2
C439579D6C75074F94493F7D5C8942D881AAE6302C37A61003AF77684EE99AD7
EB5EEEF050C52E75E4E842F8174470FA60CB213BB6F257EEB26CC55D1202931B
B981DE2535A87CF37BFF912220C117EE166CCAE58BBF624170FFBC0716726B36
304D698F2CA131675F7B1199E6581B8C812C4FAF75814282477BE2B7EBCBA7C2
FA6356B2876F89698C6C2493989E9EB252DE03BB374622A7C88B8EE9FEB4851E
02F85CF70CDCA7BED5EC94E81170FB557C3BFC6F32CD70B506E56A2CC5451592
130C6F570C679577C44D60A811DCEFB3535D855259B1021AC168DB76DD38B459
F1813E3DB20AD9275D58880CE94058490ABBBB0D8DD16D4A65F680B30057F15D
07FF54D779CC978E90A850A2D8D79961EE276BB26B594C16F56557435671A3D8
ADD3DD0BC4BC73B0652B9DA8462FE614A14A11ADB2214EC4910823FB4CEC8938
24354C5C62547EE5710FB5ECD93AA45DEA7411F6CA8D5B5FA222685E622AD73C
1BD5DFD1C8F253352D6C7D14FF2FACF07CA5EB11392C6A33E9CABFD99F743BED
55E8DEF49E07B9444171D1780C698E5B65B540F41F845AC188DC7C0C8B5BA5F3
546BEAAA4F29F0DF30D5AC12A60862742623100074457BF2D820DCAAB340C1DF
22FF26992DC02F276B40A7C528C84B72CD189A4088C90070486C49A1014FDDA3
5093FC12DAF309FBC063653E6A33E14EB51B081126AB5BCB8016E975060B796D
6CBFDFE6CB9E191F12E309254BDD6660E3227012F5DADE246B02B6D8127F1EE2
248F48DC5ABBD229748444420C868450602120664984FE3A8B2373232CE5CA15
E67172CAF7EA99F73A66AE33B1EDE5E8351DB02497CE3338930147873D4E46B5
E918F5592A21789FA9F46232BE693DFC33240E2649D6AC1940B101D806089436
F0CE230BF6D0363510378822891DBD3EEF3365430E74FB6C994BB40C8EEDA593
CEDAFEBC3B87C7C04F52FBD7D557A77B44855CDBEC8A8D26F44D66446B5662AD
15B6B79D13BD262D79BF51C09F8F690A61C7F11EC2E05F6BEDA273648E9E1EBC
3D5F1D6ED486797F753064ADDA8494405556D43D395B1487EDE877CCC1EAE954
1AEE2513DDA94897B733609E8179DFE1975590568202EF20D58A89B34874CC3A
A5579473AC65E0EE61545AEF578ADE10BE3FB3E2CDC96678F613E4DEF7BC1B38
8A551C93438A0540E292F65F1FA73D9AB30A5F545284085E4930A570C1807995
7108AA8194607304488616DD4AB189F8EDC5F4507AEFD7847817A8ECFFDD2DD5
DE95E04EAF2774F8AF661827229F01E769A32734097C457EB6FF056D90C46C5E
9F936AA6BF2EE8244BBEDB8862E56423F5845BB10C8809730B011D650EA18945
83C320A3F4ED095A5EF91929FC877ECC28A1C2CE74A53245E629BF46C6534983
307B1C94EB35CECDEE86551F0C308F66690E591C5D9D8FE14F534CF3F5DB6D32
39D7C799F392C4E65759B7BF61F4D8312E3B26C31466206A367A0DD7A90D25E2
805D36ED5CE0A4BEBCAC0A348FADD2D2AAD670E28BE6E33F627B4A9F35078B1D
6688084C4C18840673EF9B3526172EE14EF64E97C8B006C27DF6EF73BA6E6459
3608F10EB1EC4B824DD5360B42AFF2084788B165747AABFB2C9C0EBBA9C6246C
08F28143809315D6268E386F09BBAC54C34213438B56C386B34AA457D149CC39
A3C163F56E3C2E637C63A79CF7F2DE969EF3AAFF75F3F20499A9ACA61279D545
866FFE57D25998244F448AAB042B141952BD653007A889B1A716A4042CBBB827
C1ED5E3C616C22D5FCB39D3B3539F9B71D50D25ECD2E5D953C7A5194C867DDB1
75CE10B2C3A20E8CDE15AAE9F549D034838DC066CA649C31EE365D46450AF18B
893748D055DD88C72391FD92DDF0AA1A1316051BC756F87BC9A425019B2FA7BD
CA9F35E89E2229B3021DD24C9DF0DC3217F44DCF510116DDC9E92EFDA3E0A892
491C8961CA484BA29B8CACD2FED2E246FA7414F892AF7B9F08698FDEC82D2E4D
8C6ED1FD9E0BA2645663E7E97B0F780033D025F2EF3B364574C03F04FFC4E09A
3D4182BBFCCCD8CA54A92434E2208803ED36F931D31C7498B7FCEE4B78AECF11
B27123A10F031F9CBA36066680E4748E346D18FD0EFA395D1A9227530618ADD9
64D96C50A0172F712CB427E8F7170F8A1691FB95B247A271499F0E63676BD64B
167438333A3BD9CD9641AC637E0ADB17F1E394DF34AF5A2BD02030DD087BBA02
E1209338B74075744A9A9966039AB6D223F385E06FF359257913E6C01BF32F5B
A3640C7CA41A6C51F296E50DC1CD1D68491CE5D75E0ABDD4C5C4A97C8BE2BA35
D91AF9F8F38E7AB8C1778B06A212D0416E6137087329AAA2679C51D014CC4DEF
0F1543E2FD97621E552E19B29AA1368CB5046C188BA59B1E1875B25FB269DD2D
C0678A42CD310702465694F2BF302AEBC43F714F7C657505132DDA71CD23D17D
628BF3400EB5DDFCE2850F31B40C5913394649AA4241CF646F3939916C2077AD
C11F8C3E478586AA7931E327333FCD8A2EB31DF4B47AA2F31B999556602DD998
5848143C0CBD0B5187DF08E675550F2384D48C2954EA7D16AD2B94DF97C194D2
302CC47BF968CB1F6C9641A87525D5C6972ACCA1D4A4B4DA8EC54BEA6E7312B3
2737754A9FCBED3BA5F8220B751506BB0A5BB5CF706AFCC04BFD713A3BE3C842
9FFDBAA0CA5691D0FCE76134841A169970903843163DE68FF09649E99945DB64
491FD6D8B2DF237DBAF550D1B74263B3BF1EF6211F40D4DF2DEC46E4DE557088
5D458A7CDC6F34B8C3F5C76582C8B7D24A333AAE0B43CA67436F8ECAD7C50B12
35BAAD521033D8024E4DFCF01580AEC63BD5F8ADB778F822AC4FF0DA608EB7CC
1A52A51B9F38FFADC0D2F4D8394C5D598123B483AE5AC1215F24F2492EBAA134
3C58AD4E3B493AABDF753EBF1F04058C6981C353D6788C2D3294165B667D3765
7883A8493F5D772F789F73979B254BB9397FDE4F8B76CA6FFF312F4B012949F4
3EDCF1AC60FFF2681549DFF430B498405E79CB407DADFCEDCAB1E2FAD3B0F4C7
B575A33EAFF9F67D37F50BB06D06834EA683862991C5BE340D4A7F8D131E733D
289F72977870F9958102F5D835739F0F5A642E7194E8AF7FDA2937E5C0712CE4
EE15CB475725030CE0F238C32775D3EC95CE3D0886046E3EEAE322F59D423E83
DE88DDAB5CE0F70537487EBA5A16A9306BA7DDCA14A85A9F83B3BC3600DC9421
BDADA2704A5A24F7174A3A486ACE68739EC5960038CB44D969A594E97AE1F42C
42C1B7E3A456B3CDFC7683537B337AA8777F18CA45B22C8BEB18877DC624496B
9E8EF9F386B7FE4D94ABD5CE3B5786E76FE04A35909C472C04654A4405932EE6
A4A3E0F6DB088603FDD82F0EFCB85A962002A662D1AD0647A2F484B59075A1FA
9F4327D542ED7962620B998ECC3A95CE736089593461CED9B5AAAB05C2DA3820
5AF29B32904E1EEC357C8E282189C6D8F562DB11291091E6897E24CD8F8E2A34
67F35D261E01336152E69831B0CC6B03FF1AC7EA22B745F513A25FE10F70E74A
3FD71FE1EC9999BEDE7CFA6A97EA2DF621711BE950FF8960965685BAAEA71FA6
36F165573A0A6A92DAEE41A9B0C97BF03419FF6BA1F44524D00FD671EACC4233
9A857680DFD27B9F1E7A760058C8277B3761DB9969241D1824A7DADF70BBFC38
89C6DB9091E3BFCB36851CB9662B365A4B7384BDBA1D385902D1E5DABA72A159
63790096B927EA49299AE03E41C7F593F3B995D1155E91C62D5F68845ED3C797
7798B56858F96C2FE2E37D812873B7801767082A6D6B60602CEB94B7F6D7A142
72814734DC584A18D1FFEA7333D4C7E2DFE5B91E9AD92EB52533CA52FA888980
C79FEEDF0FAFB3B20B497F9AB668BDAFA364B405916526D5C48E57DC30BC35B9
BF684FDFAD199D9A28541327F3899AD505FBBBBB22F419E22E0149EE5FDD2B43
AF442E2724EC16934C307FA731F90AD1C76B74569B78CDEA7C19808233C6364B
D049F3F50A68D3EC5F29F2B96BC58C44AF90FE13F244B7129F14B5DAC3F3F310
B330E67CA4EB76F895DAC8025F11EC7630EEB4826B5721348FA38F28B2AEEB1C
5F7CA413C486C94B1DD96988F07F7A08D3635E28624878E55D4FFBEB5E183CB5
93014D8A272EBCF3A09133603CFFEF43A6FF059BCE525706D3795884FB495748
C8AFB50DB464459A5C36D7CD087631BC09C693A11BDF1C6011D9864FE66EE8C0
4824A42E97D16E017C0BB73732D4537E2A5BB283B3568950E5681364DBC1D6DA
058A122862A44ED85029A7B39F2FA7C362D859D0B429E056891339626AE6091D
74F6110CA32F8F3E9507216997E6AD1A2F1FFBE8B407C9880DE230E234F6FD41
A291851178BEAE5DB9DEB22E3443807E2BCEF12A4AE8C490AA9E3D2918329F47
42314CD258A0760DE5FDAC4AF7209CEB530B8508B278952A3638CA8491C3B493
516F461610DBAF32E923ACB834B15E2D169A10F2609EC0ACDF7BDBC777DD2C19
2DB330FD557D3B06B78824D6AB237D8F2D57A7ED35F02CFA9290ED6893B41657
A2485524A3F1642FF5808FDB77015D9467EDAC4A6BBE8A175833B1225A5554F7
2C60207F7A2632A4023255E8EF1F38C1B8216C9B03319B60BEC9799E5378683F
46E698FA75F2DFD40F17C603F3335F1EC70DBA1449C7A33EDDD46CC3DE4A6557
EE67BF349AA8680FDBF415DC527129288B5879500180F75DF80394EC7CF11BC8
9EE9A4ABD64DE3076A2963F83FA333F19FF74F79ECF36A87A31D6F125FD2415B
3F6A6FC33C179F54CA164835F3C3DB62AF444BDF27AFF23098C7212477F688B8
6F48D9AD080D544D57FEDD33D3D9AED9346CBB644C97C951D4AEEB2BF6F0CB18
E2517BA7ADCFD00FE44E290E731D53E5C0D762FCBA08004562DCE6A5EF2FBB74
B3053CBED3B6E896B1C3356DD9E8FCB69691AAF6BEBA0424D62B9F266D560B40
89E20A9F35AD4A7F65A7183761ABBEE0F7EF26ED3565A25516A3A5A57143979A
1EEED8CD52A69E4E1AE4795F3EE0CA21B9F4D166783A9AF54B08B6C56703932A
310197E328C6E6A6BADAA11D66A952964F31FD690082FA02D1E2A4512A9F2742
33B203FB770A3A1C7490ED630D0FAEB3066429D0237E18818EC368D0DA72EB08
1951C70139EB0DD59EB53AF5039A7618C77F6CED9F0A066FED6FEE0C0E328351
BA39746C1224A29D191D8B86491E0A306ABA070CAA2756C3A33990EB6DDF34E8
06EAAFF94AE6686EEB06A17D6D020D1F4E59428D533DB0EDA6434E6E1A478D5C
2A0D08CB39DA7D5F5200199FFFE3F41729478D4F63AE01FC0BF3B378FF6402D1
CCF7554B0EFE63453745582F9AA32CD5AA939031EE54F8B3DCDF3F22764A2BDA
0F6C1B24C24D386507EA0A0F893D86EA4957593B1EEC56F0BC4307C6A4AA4B99
8B51C1860703100A1DDBCED18D96E7862F1A39AA382ECC9D344D5EBE14B8BCEE
2DBC9264AB4A2C6A4423F3843EAB3B99FAC77F0E8F3DB19BBE13EAB2321F0A36
B1B1C0244C992D5831BE8B6561F62F753BA67B31355BD0FACDD723A5DEF94FBD
F722BF73BF84E91EA3D4EF2F391625EDD614AC1AC3C3EB461FD209C2BCC41167
39CB4D7B33C4966FC590814856A63E744AFC7F8B64CFCBA06A003811A7D9A913
FDCB5CADFE1F416EC484010956D954F5000CFD370DE6E592C318DB8C335E0331
E93361339DF67B5AFE235515DF5AE0BDD7D9952D471FBADFFE866098024ACA66
3239658AD1D40234E8B420456AC5A873A1A4DF972DF749203F1376E98EB69208
E2FA0FAEC62823CB2511E71B328C237607D9B436A114601A4819C7A9E2167019
654B5E27AD4A17AC50C3623283A50B8203BE242A6594CDF0B73D3074B041E690
13719E66858723B4994516215DE5B762C16EAE53731E306F427C9A93A357085F
BF2EBF71FE884778076CC7A50E06DF206DFDD7D83FE220ED3DE0AFC9DC43994E
3D0C8F8214518D49507DB8895EB46973054A8B4757EF4A2FA7AEC6534342E6A5
C45E9CD4660A32484B66A8D88535E61C89E4A33D5D7834F74DADCDCEFE9D92CC
1A962D38213F538BA42DE774DAAF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMEX10
%!PS-AdobeFont-1.0: CMEX10 003.002
%%Title: CMEX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMEX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMEX10 known{/CMEX10 findfont dup/UniqueID known{dup
/UniqueID get 5092766 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMEX10 def
/FontBBox {-24 -2960 1454 772 }readonly def
/UniqueID 5092766 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMEX10.) readonly def
/FullName (CMEX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 88 /summationdisplay put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23E7BC2A6E71BCF95FF3DA948
1A27320759222BD7BC7C1A533E90058824F06942F0234C68671083E0E4708398
D246C94F9C16DAB6563651BA33D86273FD2DB3C50C106F3CA95B1C79778D0BEB
B99D9CFB38E41BDCB4261A86A23E2CDEE4837D9B6F0E85ACEAA984C344A63709
EA35B61F08821338D363D172BD185A3658F43052AE1E61D879C99DED7F6D726E
FAFEBD881BDDEA91FB09DB75675FC74AA2BEA8771027C7A51BF849F8E765B870
8F7CC0871F301ADEF9B71EC3C607B2F51325AA5B3DD74A2C5426E7B329FAE84E
94A159C8C9C35E27A0FC93FB98A4D616750DAD50068A5F0EB96B8228946E5CC6
B69E93D262C92E3BC7161313156E380A2ABE27BE400A23DF95E65A4F76B3FFE4
CF3CD141B006C487EBC73A5A101466D4388FB2CF1D9439D0714720BB58537B7D
B3EE1F04AE117222CA5F0E5942F7A875D55D91D63958B1A02405D9DE08109B8C
7104F2D109EF7074852DFD74CBE02E0F3704F2BACA14E05EB1D0D9021EFAC23F
76C2389F8EA237D2E2AB6AFA83A725E16AECCAF025E05F1B1B5699D761F62A46
EC6F31B0FE4769BD0D66821592ADBAEFA9EB454CF1402FE870F5F96D09980C1B
8B6D2FE88BE56032C1959E6C3DC319B6A7353F3AC629CE5BCB947B4B235426E9
4769302817AEC1ADF50E50265AB488017634AF824D44D3C8423FC7CAD97F6D6E
6B34313637687FBDE3BDF6FC951CB41277D8EF49D14767B59656D214C9724DC4
0523EF896F4E48434FCC5D8423F07194C54D48C62AC29001B10C9C8B514B24C5
CEB60FF68D36749711E108DBB52738760FCF6571D5B04E58F24CC0247834B412
D0F6F8D7F1573F23E3E399D5A3A3A37FCFFEAFA044A5694D2458EFF2BC1F7650
8FB0A27C505A20C16776EDF94BEF9DF702F3C64DBC1939BEC0399B6AB283F832
DD8FB358F701CC075C596FA7B0ED7A9304DC73274C8169337D55124CB748CE26
A635B2704D8F65E23CC0FDA3C57ED451F8FDE7B6FBFCE2746F5AEA11B065A6DC
C3D200D962A034DD6757991BA62D8DC0408F49083D48799B6097B61343365A5B
30FB02E9CDFB5104FB751BE8A268EE55C1208DD8B29D5635014EDE9D0D94BB64
ED5643B3049027925BF2FD7EFCB631E01269B731AE12AA6226B2656F035C7E92
959C4A21BE40D7C138C8FF28C9FD4B768CF25F08859AE84FEE6EA18C033B3659
D9EE250BA5FF2568E8BF7684A93BED7852251D1ADE5DB815AF3AAC36D1A500C9
41D1BF3A1926828CD1F9E501ABE441A07B1B96612CF0728AD5FECF7480421F46
0B18E06D2FF1A5B1183459C59517976474698BCE18A728515CD489A83C001AFA
47BDA929F60D0FABCD8786AE16EE18615C37D18703571936A365D334BACA9BA3
08E2523132887B5EE95ABCE8581C78C3E858DBF35ADD56A1F6C2489AFA73D1B2
379C5064DAFD30FDA84581FDE268B470636EE35F21648955513714F6EAA08AF0
249C937721DB0E93D95C4DDDFB0948051953F39C6D2D811D3FFDC25F786E072B
2A8A1F4830F9CFC34666A1D3F13268980E9A26682CAB64817318A1E266F3D2D2
DE4EBB3EDAF0E7B526C838CBD7F37E74A35B1C3EB96DA4099DE689A53970D4CB
9AB355E93EB294B07DD09356C338BB4A61C147BEDC152E58DC92FA69846E4829
551A5330006793CD88523F7B3AF7B4475C531C67A4B66A603597EE72C4ADA491
BF13706F341125CABF37FADA554FDA0BA5534C7AC35F1829E250C885D9A9983C
5D1FE8CE24458A8B13E5C7EA22BF1608AFA96B83C700889A2A6C9C4052DCB892
6CAEEAA9E7D7F3E215019719B36A5DAFCCF2396FA0C04AD99A7C23772A7BAA64
D1FABE8E476EAE9FC1A3E08CD6D1DDC6E087934E676BDFD1528652B6B9A50A35
2029466364300AF4CA3C5883F6293A7104617D0858B3E43D43752F814654A938
A44C33410BA0E5EA7BF55D4F1D57E27921DB05C059DE29BAC1BFC9B607D2C5CB
1DDC47793984FBB18BD99E1DF7776B563A55E15DF024D6D8E6ADF62F16F602A6
7DDE1C68637672AA9C7A1250161502ADDDC1B4F6011A9BD5605B73AEDC37CE4E
4467C838B7692C4D541EF87DB41123F9DCCFFA971553A5D9B0E7EC539A28750C
8554383585CD8B93DF731A301D85BA9ADC95B4A3A237794C30230A82300B6756
AE5A46A090958109C5565EF60B0B16D6C0A16A56644B05D3371DABBB67ED9BB8
9BD3983575D371419C7568B2556649402AFB9843106729E4EA87B3F9038218A1
F820B098A1271E330708432567297CCDA332B555A40C62BAEB16330175D28AA6
13AE6939CEFA2334E3E890B66A73277F0B63B1FA59F856ABECC5FC0A50571F5B
0747FA554F5FC72A51E215304B2E44701A13E41D91397B204C66AAB3D101004C
7FEF2D87DA558EA057BD492CD6EF93601CB63F78426B502CDC5C8E9EF4FF3692
376601B1FAADD801602668370B5ACEFFDBACA8F8B3F4E850D07A20F6F47440FC
FD39504F0FDFCA35AF2ED0DA8BAB63AD42EA8CDA912CE17F5E62192DDD912333
3E9FA0884117F07221642490044A72E359D5F25D9591A8FAD568A3DEE435C354
11995C0EFCFEA21735DF44A30F79F747510E28767A4266461D1394F81344F6DB
1FA8D0B0D9E5F52FBB663C8F1E91192E5608FFEAA178B93F8298F70510A65BEE
12ECB5D675311B5B3B19205476512D92B1D16262720484049370A76F78D9BDC3
02EB96AC1E5B3CB078D2F219988FD0F36B043ABBF347B22D36CF541A8F80F791
8E4F92D900B7E7B64DFD500882EFBBF23565FA470103B2E0D2D14E3E4D7827D1
BAA0F84713A8CDE5904FFF2794850871DEADDDC53B77A502F5CA98B0744BB656
2FC40ED2AEBCC5CACE2301E983E6C18CF16AFB9FD8CA49DE51B22F4259D43076
DDC1BD4974CDF2E733EAB6334B1D5614288CC81FDCC722CEE193635D1088FB29
F80AD5CB96394AE89D920DF8E1F271585AF019190F17DB51FEC9064B54C3A53E
3FD33C3B553FC79F743BEC9674743BF0A821051261DE4527A2BEF4A04E293E97
02B181EC5F5EED3E26060F2C9EF6852B7433CA1BC1690C30424B03C522A087EE
92016EBDAC4B787133B4A22BFEF0B6CA564C6EB910E1DBF983CB4CFC3A1F8A26
45329CED7F5A8704ACE9D4233583365A5A97342A053EF403F0567E9D0A62EBCD
84B5D7145BBB11D31046BC2CF5B450CC68B85DA0E78EF8902F8D37DAAA9D4242
455288C0D73748F9BFEB1B1769D6FB84B94993D5F7C2B9CBDF75AEF2C930F277
210B3CCB8A0299F50AFE2548A4B8DF5ABB52F098ECDD56FCB8D3A406EFD95088
92D7EC39FDC7EB1824ECA24D0CBC6EC6F4C6A7F9590D593B269D2CC0BFBD961C
AA8BB4296B4E4411B54367A341A5EDA97288DAC370A015FDE6D7FB0A4CECEFBD
1A67DF3A3703E922BEF2C414FDDA42482EB35D5DBB206B44C76C412A435A0842
6845EAD204BDF87065CE2C99B05D2D4080D5D11CFC3316967472C7DA44CC1F9D
51B83B4BE9B882D6E9ECB482F9855D024ABFBA502CCD624E0F88164A6F13CED4
85F20DC01BB15C7D78B1C79FD9FF71F4B043F59DB5C297768115542BC7C8A99E
ACE39A268D32122541FB441FF1364FCBA2B7627F12C49ED038BC044B6D9D533B
A72D35317A5AB8D91A9AC56CA90D1DAE9F967605C63BC9F406FB3D5BAEB4B38F
4934EE3D2F5FE434B45CF5C2D0E5E417EC279DCEC4F16504EE40E837B11620B7
7526AFF23381ED3E9A92DA4DBF4EA2BE4FE444B9A74AB60EFC818E20DD8B852B
DF8CB659C0A3956D0DA61F49A9DD467726E57E9B32EFF540D551A67213D40273
AEAA6E319D92B4B406377D36DAB85662C755D76ADF5795C52D54ECCF0DE81E30
B84F951233A0A400CB063911837F0AACF44AD2441A7CE08818D64705E1ACF7E0
F59AEFC5DD812981C5508385274817056B2CDCCA4C9F3103C92838917EBFEC94
21D5737AC634B23B6F7F63B166D60C6BAA8F33AF44379C5A7337E737190EB3EE
14272B905D08C01EA118964D3444A03676FF3B62E7626168FA1DC6220699780A
0BD5776DDFA26BF0BB335B3C978CDD5CF1A419D4B5C562B3974FECFCF0118199
E547EB287CD92E32E881F344420FA3CD97333BFEF5D7E1BA31FD20622E5B4F95
692DD0ACAF01D413B21C8608FA87B470191C3CC5AD333263C955B4ADF4370FCE
D6667FC93495003F4B6AEE4F83603D55F19EFBF56F955FC9CC01E494804952CD
D426FE706C13D41F87C5C668D8B6BE50AE0370E07F52AC0534ECAB1C19851099
FC0BB1EC2A649795A62299F73CA606EDFB1D28183DC63ADF67294553115E8C57
7CB603CC491A6065802B925E6DFBF42917EE6E44C714228AE452851D61BF70AC
844B5D800EF029357FD659B8A648445CED0ECAE1474E443124F4B3644F54C556
A330D92EABEC7F607C6B13FACF69CA928F835056BD1A8ADA20EFE6BD5CF4A1A0
8B9E415E4A5FC6F209EF05ABF2E0C55F6E3060D1C72967E1E68791499F303C8B
3960C5A1F2DF6306710DFA98C8D0815A06B5590374554DCCDBDC4C295B3BA6B8
8BE3200CD4421A521C06BE39D4CA495BC63F3F982CAE3C82AD38DCB537E617D3
34BD96EFDA7C6A0F6D97A6BC9F084645390E194E7A11399FCE4EEB9A965909BA
6EC69D34DBA081BB3F18BD1ADB1AE1B7FBF96E4C546498667690857EB6931841
46C427A5B7C7D99FF889582C4AD11A7D267B301C5A5AAD9DA99D5BFD438238DA
62DEB899FF0F7B7997F781315B2CC328BE3572A3903A33EC901AC6BCC7F152A9
8A6865C6CB17189A4EEB699006A5F9D4482D53A76E88438E444F9302C79F0DC4
B3033D29D303B38F5959F020337EE6619DC8A8C3912101B02CF8AD113BF4BC29
8C6B9D25AF6B6A787F222C05964475B49B6751E3A3A6EBBEA03677D5B136B9DC
6D9AC20193BFB0759E89831C9E2AF68BD45ECC81175DFE80DC0879069ADFA8E5
24CF3C84121CD9739A28BACB9891945FA4E72EC07136682E18FCA81938FA6A3B
8CEFBAED60121530E33C1C0E698B5923D6AFC4E907A99B1367C3D435CAEDEF5F
878237453B8DB2FE53073CF3319FD096343F42D68F097759D051AEE17E4FCFC9
86E17099799DE82A38F22D870BF7AB90890E3B5264976700BAE594C8563A218C
C985D9A5A7D7BD959F7E4E66286833C86E89203ECECD6FC4C6FE1F04010218FA
A5714881C4C846E85F13BD68AC250CD0E488DBF60BB10B2CD7AE2E30F9C21DFA
0E84F76B4E996AA1C5C056E64BAC85622C160B56DEFD4DEF86887C1201F7C20C
076D4A27BA69572BE9C89FF3A9D3BAA5CAE0A6F2187AD01ED497798A305E3BD8
422DBFBF45E3F4AD35240B07285128B59FA9E83D9F6A2E620CAF6DB05129D930
44CB241CFF84E776315114C3AB61FBC0A8368D9154CC5066E2B162E89DA51165
F9CC075F2524F9A8624D2B56ABE64AF93B9F0407CC770C1F2C76CCDC06345D03
7B173C2FAA201D8E1F6C0315987A7A13902F4AA5ADF081C2B0A01C77E4F7A3E7
6A4AAEDDC577E855D69D38AF6A1D271B02AB496D94D81996FB078FBED17F833D
C6C0BCE141BCDE277D530951DD6574B9CB3CF0370D74211E9AC00C7CD3A67842
0B4B72ED517E4906409DEA7993D0B8E92D418139960EBC86BE63A1B1D417C451
8BA13C230DAE1EC4E466F23351D410D9FC4A7BBD477D5FA07659B71CE9921B1B
6755C67AB3D4988064004CF75948879D16174E8097C91F7544352474C2D9A1F8
A1813BC6F4BA13E952678F5707F19B4799ADB3BD186DF650821DF58CF3C78D67
84E4E1DF8DACEC50D15647C3DBBC3C4355E602D3A03171FE1CB36FEB940211EE
0A5300841DD7B7CF91C02B3FC5D89C691156BFF8A38C6C72789DF260B868AAA1
895046E405661D97FA9A0048AF114A89E3ADAEBCE541753E4FFCD902391B5372
6A97E32F0257FA9FA1DC15BD3140EC7F0CA5A68AABCEDBE73C38B35FDF195F96
0F9DB0F592C188D72D73512F4DD92D2371D1A59254BC477CA084E68184AEAB6C
266BB21DC3AAF874DE999AD2A17C79621AE322612EE4B6D5BDAC511418EDE90A
AE75066AF19662C4AD855E4200A5D67BEE4ADA9A399192C74D35E59B15FB61E7
BB167282D32D538029ED22CC5C9860C1F6B7BA7F33D5CF108D4BEEFAE7B37E67
39391F9934DE17956303532ABB011540645DB8420749C9B9A019C3CE86ACD566
1EE8D8D5E0D8D0DEAB33B5413EF10D4EE650F82417002E436E0B3B628A657F84
074098C2E9F897D9AB692E0FB9F268E6728F94A79CF4D6B0A07C8DFDC1D67FD5
EDD5863EA8949D180B1596D0009D662FC429449D76BF13D83F0D0CF165982443
E9CC288CF7C5F2E17EB7F3736D1FB814196CCEAB8C833720E3733BF594E1B536
BC0063080BC751F9DA1741522B2967D07DDDA169E7D3417B4A39EFAC15EA5E8E
DE3473CC9DF991FAD2A971F44B09635085DB02D692F149F144F3DCDB69B72C53
A2AF34C65DF0D5F35E82102E67B733750646EC03A4FF47138F7998607BD93AB2
B63A0B82E8E225FFAD5DC468077FBE8C8C8E5B4BB10A8FE836B07367D742BD6B
D36DF5304B9DF363120504C279453452EB177FBCDAA6F6FB78A24848F4A1D94D
1E49F6C46CB36796F3F4C9739346381F28AF085C5EBDB2A02DC0570C7A21E097
77522D4947B51182431BCBF3E55CCDDE93A916AA40CEB577277FA512380816DF
9111C56F36341381D62368E70462577D0C135BB3CB4462B269AA8E0F03245BFA
D01DB8E23F2DFD5DAA88FCAFDD51D48E562EC649DB1FFDA0FD8CC8C48E6A9207
260ABE35733D75630053CC74A07E5AF6FE87BD5FEA69CB6AA20122276AD92853
6B225BC9E3350D1B1362E04C7795D473F1266852B02C83D02D938C55D8F0C671
7A9205F8CD058304DFA034D99A6BC16C582F02484A089602D42DF30D7A5716C1
D42A4CE56C19E40C01DC7DED931FA13679CFD2700B3826A1E6539AAC12293DA8
664DE251C5D1761BB45FE364CE3F7F7E9B67F86EB31D9626CCACE4DCE03EF3C1
0D2FD1B12B5774510D46C5C5CBF0A34847418B9A1DF0C67789422D0EC2D49576
9DDE72D63A4A98613461A6F730A05336C691583F96C3CAD2AF7C4BFD3AEB3814
D909858B6598FE19397006C8C4D549AA1635968F47144E7861A2BCE8AB4CA7F0
4D253949AA0127559FAE3161C810A8CE22A3079602E747C9398F9C8B2A868F23
D77D7AD6B980FEB038E0557E58E1D7AE471036CBB96B83595D9C96A4895971CD
C2A810651A045F876A1F5AE470BEF39F856808B1F8D736030A722E1576BDB3B4
4DF06F73D38D313C8A0D3504EFBC774750C9F6E687ABCB1927FA1BB3882AABC1
2306A030CEBB259AECAA646C6497712F6C1E9DB7E1365A60EEC5AEDD5147A77B
1E3A10D73C477876D54FEE853D953EE75F7EDFB287550B93CFA8250D1FE2FE7D
D34441F1224F3DB1D355188819EBB98A94DB193B9CA23803869DD10776647BF5
5BB42031AC44A7339DC036AD0292AB9B732E6FB79BEE852A103C3788BB0F4B72
EF37BB62356F9B2DF7F5899A26F1FE0A3D6469C1034B8AB14F52555EBF6DC592
3F24D6DB395A3A182ED4B8ECEE8254661C19CC942F236CA40BAABE818EC312D8
7F5762C210FCE8A3CB9A23A24D0A751A09F4FCFB72DD0FB3AAE0575CF97D126E
1669203BE1C8F8FF626F49E8AFA7B29EF26618C6D8336D4471314D5D009BEC8C
D914E74D0BE7D7C3A2511C0DDEB6FE04360D54FB3283AD67D9DCDE211FAFD19C
449E201F2913232DDAFB2043F674EA73C9F043EB73CC9A96289B3CF819DB3E56
5FE403D8C387C99979ED9F8EB2F5B970958CA554D9DB879786C39AAC8139A032
6651A999D3927BB2A16D73BEA8CD512765A19BB5F5051B531D31853E3F220715
5AC7861BD476BB73026B6C8D8038704C3D384379D3418F38FED8E0B60296BB2F
66998152768774CBC123E11C77031666B6C7F3C70C485C7796D970D89F9AE5C3
6D1BA1368417A8371AE7DB018B8BC7BF0B53F2253D95ED49173FE2A97C622504
1849241C8A6C51AE6837A8ED53802427ACBDF2B3152398CAE59B9723037A1E52
0DF420E1F7259EA21EAEE9711255BF2E8CFA5E8EE72F43A78CCBECAAB4FC31A4
7951CB5F7CF8DE8EA4F88D0ED95546F4E67EDE5F7C60B60E6BD2F9D944F9D02E
DBF6F2B19CD9F95086E4402FA5FCB079493B78F026A55D5AA1A27EDAD00C1299
34184212316708F9936BC0290C8C83926C907A9243DE68EC1A0365C4622F2DD5
A89941F3DAA38F9AB017B77CE9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/UniqueID 5000791 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 61 /equal put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2FC33D0D499DBE56C6668E137715D435D6B683E0113647B2765AB0F3D98AC717
5B33C3EDDE18506E73B4E392B022F30480BD30F59B2E3A59D93017296C3156B4
B5722E1955777716388AA987B2665669716F866FE6BDAD5E74A523CC03915F26
9B7B231F5D9B1F61DF7CB01ED3F27070E36547B263855DF5B2E3ABD2ACC440B9
0826E1DCCCB7FAE00B34A69A2915283A20419A6E43312838AD38DD6699244418
176A2720844B186AB30298E743AD42856C3DAE629C66F7E56718DC9B42E3255D
9FE42BC8C10700719F05E30F120C277B47D9F8D22EEC18F33B0F1A865F55501E
254D9D90AA508F2EC9F45E911EB5F3C5F0AC6667AE823F31DA2E3BF74D0B1637
A4B39B142AF8637B75385223DA0F53CC248DC1523BC2185A06073C07E01D01B6
19A59912AA98FE55129CDB2EAF83666FA20EA0677A85769E039860292433EFF5
E219502ACF02F20AFC510CB3C8DBBD97E8B59729024D5960EFBAF010FDE3CDE5
0F7693D5A436A43E27E2ACC5A9514CE8A5A9A5A245BFFC5C2EEA9B759843BF67
4B847EB96935E94350853E9F55011469EC21C9B8204E71EDD0124BC340F11D1B
F41E18F659E5FAB01429C529693066F631F906F68006CF4537F231862ED9589A
57D24800A63C2F7B5C7D7FD874E9FF9B6D65FF3EE402A17686DE108B5E4D38EC
62591634E789A5C10BC1229553A1A9BC1F7CAA6FB93696C226C3792746BC6B2E
690F4F661BE2D02D53C347D4FC7B54A0D59D084B96643EC36A837BAB2E3EF277
8D18CB2F1B0B91AE8232674F034B523B559D5A98B13155EFE023400C75C5690E
8A2E332DA1F0D0D520DC886077300754EB3C0E09F0D94A9C54E80C32ADAC65EC
1912BD4516D7B74872DE0CE31788B091E03DB55BA1635E4F7F64567C9D80D182
9DDD96F19CC495FA54458DF0220C8D96B0031B1ECAC88E56A8EA7712C0ED4820
39400DEA8B33722BCD9BB029FCDF825E94D239BD6A394E82BDF5CFEA7202E5B0
3ADC6254B279EBE36C13651E50B6FFA119A527DEC67FEAAE373D093565EA0288
20E3EA9023963EF4BA7AD39718733430B672A0176E66A876352F08DE1D2692A6
0521BC3A32C341BA3F67C34E54F44A2C58B2C2005DDD22E1056A72457E1E3649
20A84C9323AB67824D0C277EFC4E9B386B92994B68A31497D763CD12A9959727
3F849E13267D7CB8E573A8FB920607B3E9418409EDE9E7AF9140075CA41D4527
7B44D9BAD83941BFED7A3C152CC1DAB6DFAD3ED09A322C96EBB7EDC8DC23B97A
29BE23ED13A99B06F046DA660555C69E8C009FDF0FDBA3D70869435188141680
EA78C4B9DFFDB5AE94266742322F04B4CCB749F5978AD0D00BCF5AB130C0AA55
20DDBDC3E582C6D3B17F768AA2F3F6D0D575B92BF8910190DEF8D26742F2213C
29E7E137CCA98636673A031C4EB077942C65BB4C4D995E5B704E613CB23E833B
DED12FD5F296982FB6ABC37BE3A47397A2F0DA37E591431D38306146947D6B0D
FAA2ECDD67BEB97128F102E756A5FD4F15CDEF846AFCCF55E616389B218977E1
14F2E51BD4EDFD26CD9768B136A7D46BD5FEE1AD9AAA0DF47967455A9C5202E0
72F567674D4D48207D8277B4CDFE22BAEFDDF5D35C6B0E294648A35C96882666
293596482F4684872F66F6EA230013E9636A2CA676D3612F82454D00F08EABA5
42E6189AE42F7411845142660F556F695D5BE9CE6F541480E9C64DD594033030
9E8D793842853DD367CFFA33B9CAC49C7CA3CEBF89AEFEA475F0B5114FBA9774
DF1E5C37BC6FC617331BBA43BF82375CB17E27B909B9C07C59246016E8F8A063
FBF8749984C4629F7436ECA356A3A39DB424D700802934DD21817403B5C7982E
C3BB7EC5979F1BAA076C2BDC4FCD983D5BA6719D4C3B80CF2C495190265A5AB3
BD74960C3822F5F85240FA4E23B77761C216E70229DF2B0C4B9E12F547B315C3
5D96661F0634552051DF97DE26B8F4B50947F5349B5AB69F016537BFC268A67F
257B99F0F0285BAD8AC0DA2C1EB188866D325A608AF7562FE498DE166765116E
5FC46720E573DB8D1C9936F9F2C6EFE09EC77884E1E8C6009E2C2FC722A9CC39
FCBE7C5807CB878CA84580324935AC520411582851F5ACCC8D57CE0199AAF80A
3B750DB063E9AFAD5A6A5A428CC85881EFA0CC99FFD1073BF9A5FF0EC6040010
CBF968B0C0B6D548DB18DDC974555CA55A277C86C20EE62CAFBDA18B7387EDFF
542178734C78054EE6D960C96A0A15CE5833098F1B65AE0ABB41A105117E7FCC
D342C607DC416AF692D4F1F3BA1B9A97FEFC55366AC572086659949CB21E63FA
69B23008956AAA7FD0F0EADCEAC0AF29DDD8CE25857E66912BDB0EE9FDE682C9
E90B9C062A37142C843915473CEE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.0: CMSY10 003.002
%%Title: CMSY10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY10 known{/CMSY10 findfont dup/UniqueID known{dup
/UniqueID get 5096651 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY10 def
/FontBBox {-29 -960 1116 775 }readonly def
/UniqueID 5096651 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY10.) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 20 /lessequal put
dup 21 /greaterequal put
dup 40 /arrowdblleft put
dup 41 /arrowdblright put
dup 49 /infinity put
dup 50 /element put
dup 54 /negationslash put
dup 56 /universal put
dup 57 /existential put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A581BE543D73F1FED4
3D08C53693138003C01E1D216B185179E1856E2A05AA6C66AABB68B7E4409021
91AA9D8E4C5FBBDA55F1BB6BC679EABA06BE9795DB920A6343CE934B04D75DF2
E0C30B8FD2E475FE0D66D4AA65821864C7DD6AC9939A04094EEA832EAD33DB7A
11EE8D595FB0E543D0E80D31D584B97879B3C7B4A85CC6358A41342D70AD0B97
C14123421FE8A7D131FB0D03900B392FDA0ABAFC25E946D2251F150EC595E857
D17AE424DB76B431366086F377B2A0EEFD3909E3FA35E51886FC318989C1EF20
B6F5990F1D39C22127F0A47BC8461F3AFDF87D9BDA4B6C1D1CFD7513F1E3C3D3
93BEF764AA832316343F9FE869A720E4AA87AE76FA87A833BBC5892DE05B867F
10FA225E233BCFA9BB51F46A6DF22ADCEACC01C3CD1F54C9AEFA25E92EFAC00D
7E2BA427C25483BA42A199F4D2E43DFCE79A7156F7417ACF78E41FCA91E6C9EF
B933450D851B73A6AB6AEA7EE4C710CB5C14270D1674FA334686653793FCB31B
491E870D3C2BC654D2C1DE463EC9BA29D7371AA1078800EF93D3F66263A2EBBB
F5723697BF7448BD0D2E301544BECF497FD475B85DFEF52AF4F8F8BE445CABE6
019318806D10C5952157FF8F8286C1EE701545C8F60EFA854EAE66835A2046A6
915D395F1E0366EFE0C0391583FE001FF16D82A2E2DA5F57754A2C6F69306E36
356ECF8EFC3F1188AD6FCD2427E0580C97A5B69B4E0E09B85EEDE142F5ADD2F0
5DE51D6DB72B127412A0D57106C19CA493048A4F815129ABE767D51715B1515D
9C21067CB5BC88741B7298C83EAE36A866DFA87D8981F179B1C31292F56BBB64
3C430779468AAF07C8A8B4934E1E775FE3F35186BD1FA6EE3689C1C750678AF1
FBF9B23195A124C5C991FE670AC0C86FD39D2B07B9A319E74EFD498B45820252
720ECDF7294F7B0B137CEB86D33BFCEB8606985A3260FD669E461C8BE94216C5
D434FD8854F44EE66E5A289A9F9E32BC36AF645D53F96652602BAED418C8D726
BD04A1B4617551FE4DEF54083D414F7DCE004E6BB2DC9C2EF7CE232B254BA2C5
7DCBD36C2072ED46FF711F121A701E2284BF1B718B3164382B8F453D68FA0377
DFE106503B8401D4DB87F5402A3AC9A442FA060B0610A9524D530C7157C26B56
AC970FCC1D5655FFFFA39246E6420CF97D08ADFB7B05822679BD40C638DDF0E7
A97BFE8918B611A145AC965C203F1428812F9D340AF499B3A915B22BE798594E
0F520109FC81E452180AE45B170FF999C5FC2761C6CECD8742A5A6FC97F16743
AD4EFCC6572A6D3F3E4E330C5CB2FF6FEA48A5B64DD3DBE943BD9918D4A18E18
CBCF598AEFBB6AB3CD2CBC9BFD6099272F6543F3E532E0E21E614BD2880B1023
0AC234CB705827BF016DB84E00E8C255FDEFA0101A842929540B7B4AA8A089BD
5EFF05B72356B6BC3727817823B5CDBB1B963103000D7F2A4E2A1472FC3E614B
5CBCB6D6D784023173DEFEBFA8F9ED87EC1A0A9EE98CA59CFC964CF943DC683F
E9E00DA718C4425A705A69D99988EC6F152525C790912C2E46A2381A569424AB
54DF4798BC2D7E7A361E7991641D4B756CE2A7FF4A2848927092C59C2C4B8809
E13AB84FB6B111E680D7FB9F2FFC2C5C66B0B501E4447C2E46C10E2F6124476F
A140C404CFE2DC9E0199BF61E035CEB481D438139A9630934E541D261FFD2906
4CAD99E20655FA746AFB81EDBB5601F5FD6B1D6832A01D585E2C55053F6A7378
4DAACCAC7608DBDADAAE732D66B3E7F87E79756337C1A961E53A4651BE7C77F4
038B89C87F650C54A2A90EB7F1D525BB353F33318551EE8D84A6A83C718EA5A4
B2AC0F7306B1E095819B87015A90CA3ED739B09061782C28CDB36BA4BD5E5308
5CBB70414E4112193DAC4A1FA30996327230D1E021F3CD8115E12D239D93FFDC
B645910EB29E40D830E7BAF2DB255FD7C4E776557BB38157917D993EAC245837
A3B515147043574157B8342D829C7228CCEA843ABC89D1785A9672A5923FC4CD
2F3FF27E6FCACF84E2D3136CA2C0FD3EF1EE7354CD04C38B5FB874553646ED2D
CEDF7E362EADD04B18051F20A8FB0DE18E152385B9D05F98A3A7EF177824E246
455ABE69E2F700EB78185CCFC07E3B4C6FA301112528D977367D30D0D5D59EDE
FAEB706DDC970A9E296236C725B2B55B09B9C336B8E23CBA5FB8692D56F33B03
16294E5FC7FAA42E96395A57CE51CA8DDD77442F142E2E576B778373FB31C81C
16840BB422CA827E30A81829648BDF1CA36700EA32AD888D097C1FE0A05B2D9F
483AEE40269DF09AF0D1AD3DF80C45DDC59C2A03FBB661C79B87853737C6D352
67626B657321B16198DBD6DB98A092F17878AE4698121E1006E53D6F9B0A3BE2
3FB68828EF854A0CDBAA68B37ABCA6AD4A3D809AAF0BAB1697A81FE59C98C472
1E33CD70A75A22C249DD11D76C2575ED3370A25892A16D2FD569CDA70C130770
93F493C7D47D6F9A5424A7A542BAD726BFC3AB225DCEBBE6AC4BE006F8C7C0EA
051424B08305BF2D951AB2986AAFEA04E078CA79B399585BFF0F1ADCED02E15B
8765EB6BF6A8E4D0901EFF2C3AA104924EAD9637A35D877E0C51A3C37DA78CD4
8643C8CE6DCDDE3F116A6C2390F948E5371BEB5AD2E87B41C5F01FB5C196C436
6E256A88D082E3F46E4EFFBF605B2EFF1E9D9AD5EE4DDC323A137CD9451EDEE0
06F7D82898D71FAF2362C0FCF1F726F97F820305B7CE20728CA08C63575083A7
84BA28B7DE2B916432475510E274C12FFD1660A717F51DACFDF0A102D85224E0
D6DB607BB72569ABB8A7BC6A10354CBBC01732EFE35B72062DF269CB25EA3DE6
DC603B04C90C5912D2C38D7A5ACDCDD3F6F116D884F0D8C528F69D5D47BA20DB
0A9E585C7D8CC3C324FE8A1DF150279F7E8FB43BDB720E624E5E9918032C02CD
8020636AE5C38DA2484B7F4B34163E0D0A561B43B80E97746DC05C871AB620EC
C5D47101ECED4A7E25F291184BEF8B80024AA7BB456C1B83A907652B331DEA34
754226C39C6889EBEEFDAD081E01EF8FE47751987667836FDE4C8BB8A3FD4406
1E643B4EA37BD370734D1A2DB17C2F4B74B4ED75098B433601F75A88C9A37A05
CCB157EF6E32023BFA33973F3E655A4D58289136996FCFA61EEABD70791B6523
1FF5DE71AB8A17038923118A5EED8D59C4C58D246FFA9BB26472346B40C8741F
153D19CAFF20DD2A86C6DB89154A630FB1761929FC3F0448EE2F089C1C953E02
905BA8DE75D101A982A611056C4B237596C10951DD98BAB838B742D3CF7DE718
617DB72E5268583223E37E029D1C8FD3F1D21690151F76B76C52C725CA135CA2
8666553E863CE188BFC9B99AF56AC2DB5BFEBEB12FB563D00244EB89E478657A
98AF2E1223C1ABC25A4500E8119B86EB3C26B8A2F3505A3E5610F89B7C34E278
53FA0A54A7F46D84A35EFEC36AE660A9E3C37EE3864106702DE5AF6C45ABF64B
888A4A51323138CE77DB935576FE6B4824B6942DF80625098CE1B5B32B234F1D
052A9D6039697118A9D793793775D8729D8574A2E74D7109C7B7E23BC5E2E87A
CA8E019203952A4892544E1AD3D4EDD22971611358AB230E9A2ABDF00A288501
A01B67C42B33F6B78C39562DB50F4663B922D9BE0D8A150311AE44B83C1F129F
07337323E9A23211EE58E16043E127C6F9574019179F5635648A011266677B56
B5D0201A4E1470B952A1579B57AB2329CD4C615395023C653F784D36B5EE3672
10D191F29EA508CE84763CA4CE7C2C5229E38E241255A5CABCD6C7CBAED901A2
CA53B5E24111921CDDF83578D33D463D70EDACA0E470D8F592303FB6BFD68B4D
3F3BE2D7C5EC8BBF10C90111A33E205F2649B56E8443F6FAA6C721C66575AE12
D4C40F1F46CF9E9DA675AB5D5840D938780CD9E4AD6736ECBEB6A4397613586F
849B51048AC5F9405E03E14540A5E5582F61CDCDB57EDDF95A8C6705F433EE16
648F098C03DED8A2AD94AE3DE202D629B9422ABB031318D48F2C85F9DBFA17BE
84708AA3B6C9F81F4508F7A5CB7B6646AB8722ECF817877B77D473F577556DAA
2BA0ABACFCF5DEA7498C47328E873019A956FBB250FD9D8885D21D368FA70CBD
2709D2DA44EE7A9869963EAB48789541906DE49FAE785ECE1F18A22C7E7ED204
9768896B78E9EB7A2BD6EEC1B26083940656ECD689D92942CC8AF05CBF82AED0
B45A7DF4DD7AA6526FB597322560B9ED3087A65B5EEF1371C328A021411BFE3B
D9B5088B2F1AAE381FFED52D2D1E02CD0DA78683E3B06171CBE94BE9760005D7
135893D7CC2DB097F6AC664D9594CF1C650F84DA80D2EDE04802DBA33CE3DAFE
EB7A37E8AEFA4FDA6252FF21E8673DD98E67124D5DBC7BACF361E57077B71939
C1D1FB923E4E35C075CD1BCBE0E80DAEA1320D55B43EAB45D9B26C366B278782
7519FDC482D98839BF0DF2E7C3A56A1C1A3FC0E57A75CA414F6536C1FE8EB7A0
4ADFEE3BEDA0F53BE8CF5F64230784A797133E8CD46BCCB3BF38BCE38A73CCE2
9E073ADE792F7128231DDD1F63E6156ADB2609C200837C2E8A2D93D2A7BC9171
050C709A71E44E32B1B03C92EB5CF1D3BAB1C38E027DC4ED9AED633D98CD7486
3F773ACF8AE332631CF2ABE6D606607593FE862ADE31803964E3F4DC3CE3A271
C76BDD95C87CDB3B87BC26FC7A16D567EEC62E6FF0D471B4853DB8A94D4CACF8
843824F818083F10E88D52FC4253E8203292CB40F1414AE7E51DD7347007C342
CD70E8E9F2D2A13D71213B841DDEAAB208AD9EA644591C15DEB084165F9DF24B
B91D3BBEEC2E34E38EF16A0C3F00700A7BDCBBFED2EC0D09601AD6538288DB50
3478B051B5E16B604A0341FE621A58718D960D699D3FAD284310DCF54EB13175
19A75A539EE98E804AEA24689D3540F0F12951A3C01FACCE9A7BAF4D0DAFA946
FF65A4D2A4C39969607272C6886F44E90ABE27CA3A1F12A29D9B32E60E8E34F0
17C5FE43D0E69A99A922D98909B2BBCD145E59A5E7F5426B3988F73B09A525F6
8BD4915663C1301323180E760BE81CB874B020FDA3AE63340E4261E4F3E4949B
CC0966BDC4426190BE9F5D77F76A72AD925662E5FE1CEF9CCAB68F0BD33DA003
F11EB91AC4502FBD6AE48DA0F9D07C35B96B103E379B8A83A05FE728F1716194
1F650F75BEBADB2E3810388F3E2DC7B19F1BA9E32925F2FD9F19F4E8701F3E4E
4069125D7C401144740691E7A460021A47B1E27997FC1DDABEC5BD0EE0B20194
2D579C7D6727AA124083242BDA46D8E116E2751C5F298851A62B60AEBE82A929
9B9F2492BA35690D1EFD16215B8EF14E7A3803B93C28FA41D971B05B6AF3B593
E74AD1E68A5FCE12A86E63B78BFEA87D3949FD164F12277A4688BE96356791CB
8671C49365608F3EDECC109321AF92B4C29CAF073DA3A7D73E913D0D83FAC5EB
BD884D4C686056404DAAAD6F82F94F803FA1FB0DD8908D1DF08FB87A8BB83027
04DE0CBB1C6FEB6B517FBD7CF065120079E608CE41893C2BC96A347826CCDFD5
C69E161217F2127A59F1A6F22037641613F191F22D5B4CDCBCC2EE5615623404
ABA7BE6C5FE475481615B2AC1A2412E54688DD21E44CC9AF5F16E634AFCA389C
4D740B7B51BB141BFAD1080E7C726C1606A28ED492E6BDE9F800EFACD1513909
84E98CEB6A0B7A2A6F3E1D1DCC3B2552795E0932673E59ECC56DDD37A1D52BA6
C3F0E905978AB568941A163F4CE3AAB5C5B16F86016EC47BA6F3F7AAAA77C3B6
09C8C3ABDB6D514A76ECD37C37AA88B5860630B3406B494F7725975596F84777
D9CF48686EC9C5DBCC1D78513F591C7C10AB9D153B3D41426B7BF668B0D04503
56BCB686258462C1DC61095724B9F3312316262FD7C1AEC6E54DE7E5A7BD8EFF
035299B8FD8A4A7B0F51404F4A760F4D8B4C0FB7A32FA4B2383AB6E9C78FDEDB
FE6A5788D38A6701B123630C2A6D820A684166FBBC83DB17069494FBD411B333
CB37E2491C5BD035A33867A6D3A3D420CC31ACF43AA07182CAAE67E40EC63663
B678F71D4C6E0EC3A0AAF904CD3AA66E0DE5E3CDE049E94249B39A1C06E3CE9A
F974B2484BB2CDA14282B9511E505B3C89F9C802218AE40D1A7541335C5736DD
CD565D4B9F4CC78F3A393737EDB4FBD0DA299E21CCFEBA5478EEF013F0552A8B
0BB11FF46CCDB784E8BDCF730A16363E66572049E42C695886EAB42A9AD9094C
B635DF4B5B9BD9B9AE8455DFA3EEFC77653190F9A8B1E93B7281C2A21EA7DDA9
33484745BDF7E3DD63C7AC66C286C9A5A698A5E4D7A91710B7FF943FB23609B6
4B442F83CB795788FAB5E9CF3F75D5487DA26170E4561C7941C910B088C3B86D
F844B0F340CF82786A3FCF347048463EBD2006281A816627065DDA6CD4D3AC5E
2024BC96C7D896381BBB567951E7A1F29D4E95351298B000D29E5F3D0448CB5A
CFDAE1BADE9403B90371C3A07D208948AFA022A69C519434B6813086ADF518D5
88E0B92072A44BA1B3EBB630A13B7AB90992E85B6D67361C8D96F3E0D826FF37
17B67E4B1EB7BADFD98D7F4FD17BECE740ADF13C141EBF0A91CB105DABB32FE0
55086D56A0D358841D15FD349E6B95512E4EDF4C430216FF85C2ABE995E4B40A
A6044CC8820AD885C07E052B3F91C2E9A1D163BFFD210F7BE95B923E2500DB50
2075106DB541C267BD450B25B670CE80BCD068D4DBFF2D82634175B61FBD3BC3
406131F44C7D6F18D375D1F2270829DDF29DC14DBB58A30AC193245D18DE91F8
AB88AB548D8138605BB5A50073295534E314366E26665AE70482B890E4101D6B
60E4F3B37ABCA1346DAAE8FDB8DD9C832EFF3E73BA470E2BACE7B8515CB43388
C27AF99FF9322175CF8D4947E6B3846AFF5163E972156847F58A66660EC8A3A6
5FB47C9F637B4CBB4C73B6A080B0CF6FD1E9665E92032540570FFCC747C67C50
822811AADC404BC7ECD1673E8AA6C3A2F1D82F39430B58C29145E2F1B679C46E
94EDC711883F1E4EA84117A54757E8895A40401A26E1437B39A2F65CAADD6E02
D71FA8AF7453668DC613F326A3344F74AD7AC67569AF399385500ABDA5EDD3BA
343CC5EDD4B558467626850E752B9959FEF1454E53E7A3DCBC2255AD8F6AB4FE
894455118A61C58840CB68A925ACCAD75CEACE863D806916228F0614191A1CD5
DC9BAE256018615AA3725834519449B0A88B4F396654E74099C007930ADB1327
DD119BF799FE3B0B223E1EDA04FE2DA7A1C879143E1C33B6C6344F4BA033AD6F
8E88C33DEF1977796B454BAB2494C930F492A518E8198C708A75FFEF8C49C324
A718AB59B889DED521229E741FFE53F98EBE88B0405AD523254FD3FA4BBE96DA
DA1C27C1C979A0DD4E61C3B1F4C4DE01E42F1C4435EECFC02D97994BC8AF5270
E7CB1458D76ED0229C5FFB4A23B8716018F9050970895D51722CDE8F2EA3D947
DFF374D84915D5C5D16463A6FFCD079D1ED416C4347BF831FF0C4ADFB61295DC
4D5785BB0852BF472CFC97EC174491CAF961AB90629F055E75DAA6D9898E8653
5BCF379816CAE46FEA62E7BE8E9B953466E51828172C4DBD0E1BBAD1CE28B5B1
02B3E36403BE80B49A47446A6677FCED438F01D60EB10F478C89528FA337D0D8
88D3FC123C076507ACDAF783A9A6E24ED73BF24B6E0F11C13E532DE5F70B1491
307A6D9A2F2BA5099C8A07762E70BDAA74BA5E2BAB260C1352107EB8A96523D9
4BA3082B99772D585329AB8645C3BBD11D72BA01F95CCF11C6DEBFDAAF7F5C4D
795F99DAE6A8D59462D759001BBEBB59AB0C322EFE02904D82B424649C2FA593
0E23281DECC5AA908E54244566055D418602EEDBE78843300158908F77C0AC75
9562065826D34C38C598D8626BFED7CB672F132E065E2C27932F709935988376
94901EBAEAEC410E2B36575A71EBB8954C3A90EEC264E6115950FC91D0D54999
323D8B4FF8129A8EEC3900A00CCB026E6943BE1728BCD3F6C1BFD503D55A6A7A
6376AF4D646B2F31B1AF935446DCC68233C72AC164BB393DA250B0B423D32887
C680509C862B6F49EAEC995036CF797BC11DD87159241A7503B1FC87023766D2
E1CA46A71DA0AC40CBF5E3C5F1B8186AEF2574FDB290350BA113FC6EFCC91AE9
BA0E8326CA737FA1492D6F882F0B5BEA6AB574925D34E2EA2508261FDD92FD47
81BDCC4EDE8B82DDAB1C80AD70D3577D3D48BE2C06B4D7BC403171488A96F233
C2589A2FC82120770A6A01C4F441FF72CBA44E58C4830A9F7D039BABF90C2A17
34B4AEB6B72F304680B08BBA33C70C3F2F7AF2F6B0E8FF41AB6FF60E19ECE9C0
A7A28182138765B04881355D2BE5108A297516D7DC283655D0DEDA9A2AB8A274
467B46D4DECB80901B17D48631A8821178955D39169F94872C2A79DD5403B169
47747996A8EDBFB62DF98F4DFE5B5A7E45CCCBA984E90F0FCA7E17F3A6EBE305
EAB19DF5739B4A104248624C4F4836854933E0A75EA38E73731879BF863A1880
593914E26738A99296613BA5E7E743ECA1A7AD3A3DF3933D3F12D948293201EA
883D1B41C8FC9277C83A411AE85E38314A580CBDD823CCDDED1346554D3443A9
7D1D6A0B8105FA5A8BBA1524DF248B1250794B63A2BA61FB863E238C4FF94F1B
4AD3DFDD65AC866E4EA2BF20DE9DF15301E6E04649162E0BD0F1CB826E86ED8E
5F311022D5AF0AAD8F119C86F19C3FE51E10CF4ABAE94A069F87C449D1C122F1
65A8F49FBE5A9111299A5E907BA33FE4C088E2E09E1DDE20E6B341C428636FA4
F4734FADCF2D40D628A1B4CB67A51FA0FB99E6163AC3265EF5F4DB257A97DE82
5BD55B3C2CDD986FA03844FDCC8A3A8A3A8225BC29AB7E2EE650BA05793B4065
FC77562FA27134E73BD6C5FD9FD44D9B85609C4B30EF2905C3961F5ABC150DB4
6653ACE8DA16B49AFBBD4737ADE7CC6AF68E0EC26B5C63BD89A7AAAB80F7C429
A1EA6183D4E652BD06FDC43F0E2FDCB93B84A37F2AE45A1F737FD65AC7343990
91C5659F84F5BB9A026D49BC0E7410DA363C86E799DFDEAD4C762EA727A001FF
B32392DA7C2D15D9F1CCD72F18C96A6F3DD3E5E8E2A31C67EB2BA665FA396BC0
5596036644836E5F51899297CBC7F0E2C683903DE954EA71D6409BD21E123D45
B05A09215A84F7D88D8EB5C46936B979A3C1B854F87BEEB4988C01C9DAF746BF
8B72CF46952D6DC0F0BD25FA578356547CC0085BD83534C37B27F5227D3713EF
17C3CE5B51FAA84CDDBF6B7C0B0A32530E6CEC91FAF8420CA8515181E63285D7
938FC20590B4B26E0796613FFF8A285F88E80156C7E86D9DE78B53F213F07C0B
69CD18DA2274FDF32FE6679CF4FE811681A5DE222BF0E8CD92424F29667CB87B
76738D79F1F2E90A91A1845CF53FF2C6D946D90A9FC4EFC2FB72895467C670D4
606CA9ACFF44BA0A7D50BB0F465444FC1404E626868CFCC802951323898BDB20
04DB343215CD91C8F1323F95C721484F58B023A5B6C14ABA51AD636CCD968165
429EEA8ACCC96B85C9AAC5C3DFA20519B89FA560EC4F0B4DB450085445C316AA
386D1F12531BCEA013BCB20443790A032C7B797E4B0215EA9D41AF66BBFDC883
B10ACDBE6AB60D0D0120FA8DF2E9866E2967FB885B0D657ACAF4CFF53D13289D
B062EFE91A375A2D10724D33B958818D065BC4AC005F032888FB5C3D65BFAA41
8FD4643FC82F2328424438682EAAEDF1EFA23D9C17709E6D32D825AAD25E1852
2F1066003DA425BA22B9B6EB4CAC2099E7CB2A1A9E59D7FA20533FB7D592E28A
C4808FF874D41B65F3C9A9031809A6D5ED7E69E1532E60B01D5183EDD01FF441
17A186C4A4086554394F1B95BE19EB97E65300A8C6CCF36D4FEC1DF0E20537DE
C10D91F74B68832C7664AB45CE6D25426A1FB49E5F5C62BBA9A174FCCFF5561A
2D3853BBFA7FF5DBF54FE755EA6711BDD51BB13ACF3AEAA0B374FB3201A82E3A
37FED454E63148E15BBBEACF9138A8956C9ACFBE0E6469AD8A4CB54BCC23ED53
D20E9EF2520090AAE1CE2730C9907C3BCD117B4FBB50F843C062DDB1B9098380
3F22B08166CCCBA9EB88DF89405070B0AA778C3F949D2A924E6EE0ACD8ADE21B
AD1CC58265C8D571C655B9E6842B1103142C91F6378D4F950896214B1A680544
417C63A733E6317C33644E00551EC92B645E5C2064B5871A51921DF75F714A65
114F9A7C2FA9DCC4110CFB596D949E9D4AB9B093ABE9516F196A9808FA582C1D
10A599087D6FCF3E11E776F12D821CC7ACAF0182E797F69D1896B5C8738E811D
ACAD68FF9F0BBC8B6FEDAB979452F6A0EBF83533D2DF13BC75EEB50966644A50
4350B7D289DDD1E40461C629B544A77477812CEAF95C59A4DAB88609346E6221
413B53C48C07AB1D75FC43280146C115559237B069607E2DF3CBEFEA2562807F
04BA7D012CF623D367DDFD245954793A73856805ECF3CB89C12ABA122FFDEFB3
6F129110B455DFABF3B474BF4CF4D8B491C49E72336F2F7D39877FAC224AEDFA
4C4D6D02EBFD2EFE0E6949A16DD16AF06F02925019752DF83180FC90E24D868D
7D7D3917FDA28CA958E7E98BA01EB3D946C9EA2D8DF72CCF9EDF8030F2E4C6A8
D5F6149B880EF444ABF461D98A16D778AE07F63CDEFA337A0487944B798877E8
A93F3DEAA01635D56C4860B2F386127BBDB53D251A89E83696E4BC6B01C60E84
89214CA61FBB026CACD1922C3FB2319F3D82A5D68C5FD4759CFF4F3AC87DCE6E
50CB6AE38F261817EDBDED5DEF044B78475B384E3E11595FD4B84B2EE4A8954F
C5E2519C2FE8E9B5452F8FE7720C6DCE04EEE810A84A3D237CC937DF901535DA
728789F72235332E8DD8701786FCC3EA00331F8068894C0942B6F53B9D41
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI8
%!PS-AdobeFont-1.0: CMMI8 003.002
%%Title: CMMI8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI8 known{/CMMI8 findfont dup/UniqueID known{dup
/UniqueID get 5087383 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI8 def
/FontBBox {-24 -250 1110 750 }readonly def
/UniqueID 5087383 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI8.) readonly def
/FullName (CMMI8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 105 /i put
dup 110 /n put
dup 114 /r put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBA9B440A6DD72BF8
97084C906B05FAD969086ED21AF0AA1471613182B26117D7494DD9F9270EF3ED
8DA4D957225F75D060237B6DAAD5A0AE3E702B3D1C437835B93B8AF1F9E7D966
E739CF3AD5E256F90286A34069E5BB4122F94F18F3485658D0D25B938522A879
8215A417CA2CBD20F71C5C5FCDE21EEA7BB27876D93BA667868A419287FE59BC
F538980597DBBA743DBBDBEBC61E3286DA7977833DC8BFC5E52FF5DF5EFD9A92
D070EB769E31E760A50FDE012DC0057835E8B9B046FCC83F1A0C40326AFB4E3A
0CC3BFA35FCC64E32854F32EB7DF10A19F95830136BBB8139DE1663B7FD790CE
464EA431AC109FCA0E03F3E0D355FAE20AC8774D6B1CE233C27680C77DDA7356
560A27C75993E8C980CD1E3B0683F7E8A05119B3AD567DAB4851B66E418687B7
F9B21B3BEF607918D5973421B68E65DFD8B6C8DFDCF1CAFE2637D365148EBCE3
FA4CC00052A2A522205EA3AE3461CEE02042E1A3F11467CB6C8C849B200CCE3D
0BC188EC7B934CBBC0AE2BF5DEA228181DBF0F774119F313516E7D97FF532621
9278F856C166CA6547504F34991D588A0631A5CD06363F3FEE9FA0772C783447
ECD0A200929CB58EBFB6B72008E4082B5D14AA560C24915B9463A92F38237886
C35CBB2D4DD6D0CA8C1D4EC46093041C6181C2F6586EE3E7D4E647A107B6DB23
DAD9AB5A0C2905455FE58075EFF6B48597078BFCCDD84812B98986F34987CE49
7EFB19814F2A58B0233A59331F6F8EB66401F04EE7B1ECAD9BC90A2BCEBE213D
DDDB1F75C83609ED6A669A0CED58B2E269E76ECF73616D94F13CF827C9BF354A
E82202988DCFE856786B8AE569AFF3105B55C72C58D310FFC0E10B2ABAC8DB06
40D5F72E54770E9DED1AF4616008595B8481E3D9AF4191CC9A5BFD9DDD01C9F1
FE7165D21E488DB40879E863D470CB31CA06E5B5F1F8C3CCE04B697CEB0F3557
ECAA358D2EC2B370519CE06138FA702314BA01F1F33881825EAE1230098BB3C9
59666983275CA4E8D9DB34979F86535577E79393A72F84B0F768FE8C92692907
15E9FE9894E98A0EBEA490CBC8C7E5A9F3E43B24C2C5A4BCD71DAAD3CC0B8B82
AC13933543E295C163F61C9FD18371CB514493F90BF7FB460C029B8DD2E2BF05
FD66B451DF277864DE1EE42100BF29E01A50258C2758F3EDE211BB3457B8243C
20BE72983FD6FA2581C5A953D94381E32E80D6D6095F2E93A5455C101BA71E8C
E560D4694E4C167EFA25FB1E9D214AEA745CE34CAA5468FAEF8F6BDB6C6BE8F4
3D58836C26A2392E4C4DECE284A90DDB3858A16D6135FED655A600929DE71605
6CA32F6851A2A6F71A9DF3D5D657593BB729CBCA2F4B059365B7263DC08AB211
9C547096E6427F6AA53CB2EB87DF0AFE2ABCDBD15D7EF228D3396413B83C6B4A
79E41F9BA55A2688F62A10472675E5658F151F9FD6634EC94EC0682C17448024
CC1633077C07A93E4DA8749D974FB8F4332B5DECF97D749C10DB60D4C90ACBFA
E65AE928C88BAE19234690EEABDB30BEDCEF2660D7464D5071058C30C572A2BC
7DEE5384BD7614A4BEC4C84E18CF7EC81C810256E8CE6520466C033E2A36D3D3
5D6074B3857415011D8D9D49A474D994571CDBB89AF92BEA879BEBAF67663F5C
17ACAE809C2231EDD0A76641BA52FA7B19A2798D54A4A9B62C42F9905851229F
2CEE0191C8AA5AC12BB0CE9E5E3E862683AB57DBB4AAD6AC0FA8BA4F408D41E0
755F72B82B7C18EC6B13995BF7AFD66AF4BA0EA7523DA8B75EE751744EBA9CA4
4E8BC1FB37734503A5B24FB9F2C2D07A47CFC477F02413D55BD7DC180B0344E8
50248801FA6BE26C97F397797F5F9DF762967E7CD92CCB8B2E587C92177619A4
BF8046CBC72C6E69DC78B8CB6B7381A290080EF59F5B9F29C1167B261C932E9D
010D2D14BB425D157F22BC0305770AECC5BC80000F8CCFB9930255A68F299ED9
D3B5B83A2CC00E3305EB281E1A7054734661B175C6CA0AF168790985F173DF03
A8693B677BAFE23C3CF833FF6463B136FC370E4F0C29E322DBEF637F62C33CD9
B0A8338FD67EC628E3BF2FCBF7CF0347D5CBA1DBE6DE878DD670176B85F69EF2
3C5CCA1BD2B8A385F113EF1CE522F5A6AE053B9C1E39408C9459DE3E7FE2C4ED
77F026B0081BB80D40185458139C16333EA27F43EF1204BFBF80BC5301B2A3AD
B10F7EFBB4F5B7E04DA1167F68BB6D4049440B0F57385FF0A95E72760C6A12F8
1335BB31CB74081FBAA319180DC00113CF50CC5A41D2E751E055DA1429CD75BB
0060C21CED634FDA106C49A12B356129D010E29F2919301AA7F80222AF3905ED
672FF85C9897A70241E8DDB9A53034B6BB44E140D9E739848E7A782F24B98AC8
00DA09EBE4532787E5CF3ED815705F659D8E52DC2C2D4949374A3BF192BEEB99
1D9A90A4F3250BF8A1FD40D91F5B34AF2CC561FD02FED712500B24330D87DA9E
4AA46B6E34BCB40B1F73A1DDE07E002B9478E9651D2BF85E67585B6ED812BE03
A594874A235B1C1840C4BF4BA6D863583D8C12DB49EF7F8CC24DCBB6B21FBCA9
378F3E2DC406291AB324571F76E0805DF8826090F0E8B50599CA58D124653D16
16C782B01C91A6F3DA6346482E3163D28D95EA49866360147296838A3FD0CC53
920F91D895F839CB61FFD2FBA296CA4C6304EEE579782AE5FD33D0FA652BA7E2
CEC7C01DD0D3E0D56E6177EE5F609A396F7FC8EADABB465DBA7F384E215C4DCB
E64F807A50A461545107F9C3F7D7CC7D33E6EBD6D9228B1DCBFEF160703E6129
0DCED8D45DD54E2A36E698A616E7906A50901E453BDB2A363EB77144E9EA6F2B
6BD927495EB0EBA5755165707CCFBF8759CE5856881117C7F3EF6D494EDDA7EF
E499BCA56C86467AC573DA9C2724FCC74BEB331E736FB093DCB67DAD42296655
415D110F2729BD1D55E5C9CCE2E724116F45FB2E66AE0F790258851A5C808762
68B8A110BD326F8D3EC45004E7CC08DA42F6CB80A6B6E7C286F139534A275BCD
2F812993DD9C9A1AEB5E7E4BDB4805DFF3A7030263AB060C9B74F0C25C5B9005
965284884450CC2815DF28D5F9B0496DC7A3AA85E1E42741E1538797175C28D9
FD904699C771FB066397FFDEE8E8DD1ABBDF67E6BFEF95BB700A7C1BA91354C5
42EC3864F6E19B379E79A1CC3C786C0DA146C6B0B8E507ED58DBB1F12F613A98
0E1F8967991427A22ED323901C4B83336CD343212131E8B59C2F5D232702ACC5
7891BFD4EBA5D0FA35AEF9F3520CA82D121BF6885BBDAF15248A9E4649ADB94D
0735CC4D14E1D7275427D00C8E709579612F7F74DB6FC218C10C278CC63E2AE2
37EC996B10C0229D687F0DB5E38A8C4DAFB3DD8A9E7ED37186FEFC97790A1EA6
636A88FA9FB4D282234BAAD301A1F3AD33F252C5EEC49410562FC52809CEC466
A0F6D148E9AF19D6DA2337C8283FBFF6005C37AAEB0B7F7217A8DC6F949B9984
72DEF163E4D5ECE4288404448C96A7FF0AC76F732D50AD63A1D286C9180E80E7
C218B1F48E3034FCABA6BF262CEECC284AC29E9F3CA1CFC1639A681ED66C1FBA
666F073D45C84A286E05FF809D4764FE819B6A330E73695CCF2F448B4D4EB4B3
F63E94EC289807A2F9A1159CF328C002B467B19D6E9454CCE36FC19E0A214190
B251818DD456EF658B0398E275514B72D9C1DA5F806EABCF1DD56BC025D69FC8
A0C2FAAC1892B64D2AF79EA2F57F103CA623E440307600D50E783FAA998EBD40
51D23A0CEFF8D8649B48B982DC38D613F882DCCAE5F51233A641B3CFD783F830
D984F116DEA3ED8F0D3369AE629A006BAD4523F8E3C7C6B39A6C972508B67AE9
32613F28CCFFC4BBC86CF31A0C25C786554F7A1F3DE97F5CFD1A941F775067A4
784385E2D02EE1FF886701B1E87D966D3F500E15591A5012E645837FE2DBE3E6
A3D375C6CA0ADBF96B33EC3FCFFFD888D7344B31D40427B8A8BED0FEC6FBE038
1FB5F0714C4B5A0E607E215B5B7F76ACF0FEAA4C9790EB7E13C0E3933B7C63FE
5B934EA34F4B741C3667BF1735C685CECA63507E6FB9EB06AA010311F12AC1AB
4CE3FE8D1EA1EDB3C700BEBA516FC71D740B1CA1A60D4578003973CC3EE21DB1
58FB1CF7E2EAEB2A4A6C742EBC3575EE6378531C6EFA6E6986E68B8E25CEEA67
A59623FC1ED2ADDA9D72DBA627D179E47DC7F5551E07EA4D54ADB6CC8109D340
7279F288E552EFD79C17DA3431E53EED66D16F24BF86468C2FE7EFF421560500
12FB048D6CE2F370BE4E560F8B4AA12362ACFEBC839351C1D5100C625B14CFDC
747B66082D4AD5474A63EA0054E9C3E6295AF6B133348487B0471395857F4B73
4BF8337DCE2FE2E1A4EAD7E7BEDC822BDDCE42B79B308C11897C98E3ADE253CD
09CEEEC0CB1DB66AB072E36E1E04911F40B535B0FD85982C21B8A587D65C38D2
DBC5A07A0A26DFFF7460F10781069490AC1B611CF7312A14B4AA6005A4582C5D
336BCC30EB47749193BE8D457A43F54204B070DF5AC2057B6437E23705C7FE8F
7BB150560F7044BE3E48EFDDA539FEEFB0D2A7856CD4E405FCE0F5EB190D91AE
578E2EDEB9ECA218573BB1A8EF116043A27DD17A4047BCCC7C5F3C563A910778
45ABCA32C7347E6180ACC86F9D665FF025DD8AF514FC3724B5C3510F3C37E0AC
5101D1667C6ED4E8F37F06CC2BDF66CB5A9FB7C52CAD26344FD1557571336A1E
1E340EBA149B4EB99016D1A411FB874914AAB2A415CE3F5FDFBBF5AFD7959B9F
CB127BDC68D2A2F3F07FF3D4FF32046C0371CD2E68A6471E46B08413FC3C7A80
A107EEE57979DB387B2206D2810DB310B7232B2DAA385256C8A58964B512003F
A0C24ED21809E2576229627278118107B9C32345C1EE8C0CFB452CA362379369
31320DEB5371037AFAD093B61E8AC7A6DCF7D49C7F8EC32DC0ECEAFD7E892810
039570D2956289B15E078C2545911BF535F72F7DAC619BBDEEFA855BBAA81704
18F7D351B0936357085A32157AD8E27438A58B2397D69264E748B0B8D01B33F4
D04DC59326A7DED39E247A1C1A1AE49382BDBDE9478A1CB48F88BDF14A268B40
A40B9FBFC4C87FD3DF1EB2464C3C14E36CA41E09EE0A9B75FEB0769F9ECEB1BA
EBF73B818427FACDBC33BB95B9654F31C59A766E931C698A8608F15290FCDBD3
5C535D9036A19CB7B55BF54E96F9B2206DC71624E2E55FE632FDFDEC8757AEA3
1D83D190ABED5E7A7AAE2F41FCEBC7C18626BF58F9E9F02FBAE0C8AA85E9DB21
A3D8907522DCBAE4923C6A2A09FD2F08FE32215C544AB577B337D929E625E704
E041C2381AFCFEA37F3133B6CA20093EFD457C772E428325E56C9CBCC447EF9A
05A8C3F28017DD4FFACC51B38E4896C5044266EAB4EB7C13FE855E790DCF8A17
B61B1D30DD866BC57397EF6297C4891451FD6A5C6AD6D7446F58F56A68650908
224D9F4C31C6906FD29BB51DC947465B808438E6260325752808963C808A4AAD
60422ADD62CAF315F6AE92FACEC55D5B682089AC0BC051CE1E2C06A3874736CF
0DB5F7C8F178479E4F11665402781D80397C75456F5CDF0A4F382A19EC6AD64F
71A9275264800E178F212269154DD8352167C57EBC0A38BE794AAD1601C8E541
7E1AB8E969A76E1EB4092644958FEA2AD29635E70C4DFE2EB0D9B3E1644FAAD9
B27AD5466EFAC724718962B62E7B8C32F412B69DFFEB792587D571FB5C591D95
4CD441662CD1B07595E245FA537FA9EB5A20A97E5C9251EED22C9961B48B25ED
85BB7524F635F9CBA3714C6D60A6BF920C45A64F4C366C1F9D22F53084997C9A
EFE2D79FBE3347111F5093E271DB7E3770B35D253DAF93653F6A23FA145AD775
AF11E188EA0428137D9A14542E3EDA6F7B2E5AA86C9F3D3649A85ED2F020C696
01A339FE6D7E42BC548C8F92A4E3809C67A986C99418772403D16D0E8662595A
1F37563671D6DA0F36CAC99DAA8FEA215DF7D45E61314915A30A22FCA86A50D5
2FF2EF08E240F9FAC030D92BDFBE40F1972DF413E6B452024CD11792BFDAA2D7
C82716528AD4B3D637BB43E748336DCC86A952BE96F1EA423E31340FCACDC1EB
02EE932F58734AF3A5B2279361B63F1D824EE3BA9F4D2EC7B33A300A1CE8CA43
24616444176DB8099D85AC68329B1F85E4B5B16F3B396FE2AE7774F3065D0203
AA140DC128D6F935C44733EF585F89E8639A2096A225A2E5E49D447D8AF9FD44
CF6C1BAD5C5E5262AECC5543EC8199B00B72BE32A0F110F64A1D0D5CCEF38FD1
155D6198E9A343702F8ECF5052333272CAC2FE016681E12745CBE14E1065EFD5
407DA3686080989F6F6D650A9F1EB3A813B070C30C0D3B4A1E9C206E2E4DFD51
D8DCBE9AECF956640A2E79F1B4FD0EB8E0449AE1B8FFEBC43275743B4D7F6605
0673B61EB3189E74F51F3780A91E6A5C6464C8CF7D563D9958D46F39B1A12087
6BBD4898BA9ABA468AE1F24115891FD3CBC2195F75958E26DF8BF1B93F7B521A
C12112237AB23A8E5A7B7D0DC4C53692B35F3CD813EB463C0BD3A6486B0476C6
3B36DA71FE512E5745D097FD4AF5D056E434DEE2AF926B2EE79F7FC4FEFD4130
BB4B4BE01E5C720325A4884507CB51CBA4FFB615B78A4182444F0ECBE4161A58
E86FE1DA2E39C2BECBCF1F1D7B9B776A26078FC252128FA8108CB83F673CFD37
CCDA493234FB93E1550EF8D2DC049ED95B00A8A57834B024B277D3DF062E748C
B61F183F2D72AD075474F8165528CE75E4F40B38B0FAAE45751C1907F8D31619
E88EAB02EEED415F3EE3BC5BECC6AF565D34E0BA2958FF337A2B06012DD1858E
C53DE52C108BD5AAB76C882198C72CDCC958D68EA8FD26F76F04EC1A08B2AC3F
A6D0E8724D2656555DBC0C8C42A3E22ACA7E1BC8E9F897D9AB692E0FB9EC32EC
59E31CCA4516A3C3BFD5411BAC3DEDCE374D48681CE7D67DEAB93F5B5C5290AC
FEB29C5EA2C98095692873D36C7DA24847B66F31E4CA4C7AE5C79D7CE4F0532B
78620582E3731A2A6533A03E7155B33E7CD142FE79F72721862EDB24959B9783
F834CB616FFCB2A23497BA6D99AE34DC459A2F7B3E4DA2B54BED118ADCD92178
66C40F4E60F6E1327D5DBCA645A2A7C770807E6D7E47E1265C753F8793BD2D1E
BDCD749CC24D4AF9315A93F01180A0F9A7F420DA1B87664DA5FD967131273271
9DCC45C3D57EB9B8AF14771E8E751D88B98D2FFDC72F5011D402EC34FD010ACF
D3B0660304725191D64FEE106253FCB3470F1A16EB7B45C1489D3534BF94F740
C2781DAFA5E8A9E7B25A85BD7935DF3ADDE08C960E283D8FC3976FDB4085DBB4
B6B35FB239C28C785B18BE4FC98F3A5F410F562DB5FCA04E8074E4E790F4265E
F88117B3D0833AFAE6E8B8A71D7731BA6F14FD6F217EDA3F8CC687A494FC3914
B84FDC37C8C335AB1E7E0BEC7FB6B7A595C50CF8F0080C8D461BCB8B579A5155
F963B6587873FA31C3A6572740C63EFBE58A2EBB723B7517D2A243F6CB08A038
54F4DF0F6692022B2EE8C6F6B73735ED3166BAC58D9216A06EA6FC7B63B20031
D0F0F99D83D9030B413C2360DD2C553E34BD67851B743C3FDA676AD63C5BD759
9131358C6BCDF05FCC048F4EBB9005899ACDD8E9EC9BB8C5A08E83485047D263
0ED69B4D1869A38068FDA03524022A1D32FA2AE0BF7785FCA8F089152A57EB8D
5467C28AD44E890380CEA0B0E0CD0F6427F2C3BC1A5257BF03D902BE94A449C5
EB8F33DD607BB4E0A1A7A24431E1DC2F03596EB2039CC1A9D524E10B374E34A6
4DFE6694F9E158DD6678BCB0B56BFF435FC4F5EC442E14391B45178DDA235B7A
07AB6EA76230B60456344BDB08C929F9453553452C97E016C26C11B68186024C
D1AF6C638EF54E26AA88856FAF1FA9A0DC5A9EFB7130EE72EB3313510EDB1DF4
8D8E512036A986387D8E96689E912149A342974F559E7CA473A1FD2E01CB1197
990EDF8444CC83F1AF738200D6B01348FC84249D77FD2C3792BE507B455AA8C4
8A47C53FF9832AE74389132337E4FEB6F45B5BB29D6F597BA179C6592145F301
A46ACFAB07818BBBF40FFCBD118D4DD0F87D65E1D0E9B88EC830AFE34BAD1526
2CE90D193D88877AE17FF093AFF181232A335E7A2B13520FE2DFDF2600CDDAC6
68C0665D9A85BE2D2CB92AA47DBC9DC58C73FE498C0188AB7FECB942C019740E
545F68F0810871F2D8DEC1C339BEFAF8E209A8DCF266879F9722CCC16F807915
65EC4E0AC8A7E498889590F3C95F9E83F4C16E13DE2791AB32CABC3FAF074C44
6DF120A6D8296CE48C1D7540D6DF021A74A34A5A3E2845DC49E8EC79666EFD3C
AC5F7D894F4AF05704EFA52EE056DC02518BDDBB9CAA3E52095B1D85D507182B
690A9445963F34CF2A74195E1EBCD10DEC55B9DF6A6D32F6037689ABFC90A860
9F1B105FA65AE4223CD5A0A8ADF66870C11B34B4E780364FE2CC4C86FEE00F94
34D0B86C4BDE881BACC896A46F89CF52D2287D7FC9E5922D8D61D592A43EECCC
8749B7CED6005E77EC34BE41C2BD7E1B0604C04AABF88216BC0550B96DA7E5E8
E2319699703BE74E6E7115E8430EE35EAC08649B95919FD409C13D57389E6CFC
8F1A55C8C92C0ED1952B86CC8278C4A54BF207063E2F750DE87515911791AC96
DD1ED0200D9F215FF5B371B6414632F9EE8A87F06BED531D24728B787713C642
3465AA7485778FF0CFD3EE2F6229EBB4FD0CDADAEB91C35E40B3364A4F4F81AA
649F19ED5F70A299C7CDA02B6C3EA53C9DF4A881DA96B2158E0D775DCC03C615
17853F7D1FE607317CF202E5EEE36AF8DE8FD8B789799D07264F0101E765AB1D
6C0E9C1050118FF56E9810941CF5AF7F23D33B2C98FFF84235AFF543ED7C938B
A92A7CE28AB2D0AC8D5442677EA2AB6AFD8594E5779441872C67DFD6CB8E1070
9888563B8A15FAC9CB97A2D8701E80ED415523F3BC4CB6BAF2A6048A6058D3D2
237ECEACDDA590ADB213ED5D029192DBBCFC0CB0CBF6B6AA73B565475183C82D
4CB686E468502CC5837698DE6D62BFEB36212B85E3D46F32EF08544CE92F0D2E
23DFE35A19261D6461B029CFD88D3F0C9EDC44FE1EE34FB192173F6E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/UniqueID 5087385 def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
dup 59 /comma put
dup 60 /less put
dup 61 /slash put
dup 62 /greater put
dup 79 /O put
dup 84 /T put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 102 /f put
dup 103 /g put
dup 105 /i put
dup 110 /n put
dup 116 /t put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9042537872831BF5F1F340A
8D3E6DEA1D9675E87B3425FAA0172DBEFD7C28E30906B9FBA65517C9B58FB6BD
E0D474E69BB90B0D130A32C4130974A1C961CF064A5BE8EC1056858553FFCF7C
0D78627BDE04E5D0B9F6F72F92B61A915DFF7AFE7DC3807891D039AECEAC3F50
0A09579E661D3DC3022206061E0250B09A05CF198DF82D4F28FCD3671E815A6D
94820D0C87AB1DCEC251605D9490BC465D8A62C95B7352250D76D9FF1D3D5A32
9690780A5B56F9BA2083B29AAEA996FA95246D55AE88B0D3F6F307959251AFD9
82650287B5A98758C8FF3A60C40CBE3445ECB497F3E04C98DD52DCDB2F632D5E
FB5654C417A12EEEF2DB5F0CC54A379DA75BB9DEAB9FD9F256C1B832D55382E1
22A7DFDC37044BF0CC2CBCC4405D8A3495F4886001D615E1737FD9877EA3EB51
823C2FA1940BD8BD802C34BD648B41E268B825129BB13543961334C69DDD8407
97E868B79C83752682CB506FC1C801F63AE7B3B8D7EFD23C54232AA97FA8B2ED
EF2AE0382B4ECC8B24CFC62F698F8BBC90215BEAA8446BE6D261E30DCBEE8CE7
6BF8D0E51BE2597E8086F27D4C58573A2262DEB7877A2711B1B746FF20A30251
5A98F27CDC430EB85D6BEEEC14AD71DA71F92A5DA5069E0CF7F38659D9725D22
896C4612C3FC6F7BFF069F64F4DF4AEFE142518752D14D0180C44B16667BF558
169B4104C1BAF5781B90C48E361E19773BA896139F0365E0E856BAF99D39FF65
AA2AFB5669696BE2CFE56A8BCF05CA280952CE351084DD9FB901ADBDC990AB52
CA712865FB42442A98184143C9E83E499F23142AC688C0535100272F6D3C3D15
93CB4BF95665A655455E726E33D0ABCBFB9D8000B4108641E0D0757E9445039D
A47BF812A28813BA8D3D4C0939F8EBDE98F51A8D7C0811A01E20FBF31A63A387
05BF6A31CDB1594292773FC78AA91691E3C77B7B2E7E85287532F1F8E56A2C19
AB570B2486B8CF88E8DD59319E27165A3086E89489DB640B2C96BF6E887E75DC
73CAF931E5DC4D59A86A4253301EE49403B190E2F324EC5879A6BD4E9152F404
B706AEEB574B756B0924A64B91E6E73C376DEBAB1131B0839668B59133E8E47E
D5CF82AC2FAF86E9035C3A1001BF7659790F6AE138A7298FF978F5245E892E1A
2E2DE6951267729735733C96A4EAE21E641ED08A7C8BF31E79FCC83E044FAC80
6052DA7B33ED21C19F8A1F19F5D56ADB3BC59F508C918FFE7B94DD70FD581981
269E91F30FEE08D0878E4316A7246ACB927C0CCFABDDAEB14FC1C9C7D1BA6706
FB8B20E4DC1A44E854F8059258C9406B6C2F5396C589BC74CA5561EFC02A6614
3BE2C9206229CD12B245747121F8121B7B8AFDAB1882D8B7BBB0A373C9F40058
69095B73DFD72EEB0F728F4D54A9B68E965434F10B04FFE184F2089D87AEF60E
69DA764151425AA66DE1454BC86119B050A1D879D6B02443106A83275C0C5E6C
1F983F8EB91F074B36354ADFB1D3D6DA481406658CF659713457D469CC724C80
770135CED0F2D4B2AE6A554557A0B6D35C540D62B2BA17ED52E59FA2905D51EC
794ADFE4887A9BA66BEB6ADCA15556C2773A484C5DB5D5C9282683C4576C9BD5
86AC2CEEF7EB36B0D8C9688742DDD67049FE40713FD24015241033855606BF71
48392FED94B62510F317D6E87798E295F17BD87FF24014ACBCE07352627957FB
5E9C056A5CD0FD83F538888746D9A396841C1F44E6BE2161E53F3FDC0BF9E2EE
7A3BB00800242D526C2F92007BD00C4A9EE98258BCFE4863E914E48A987B7A81
74F9269073535957A7EBA96AF7E17634A6178C4F4649A6A1886DAD4EC3D83D0B
490FE8416AD7BA420F5033D6849E50A64F08B62D7CC22D7C2C7AB4EA7B55AB43
DD261DBB2FD09B520B510A888D136DEF6608A7B87095AAFCA4CDC02FC64C79D8
D81A86A263CFE36BCF8918EA80624C85F88FB3F071B106BCC3AD1936DB353C1B
D7A43A18F3388828F689582151E98A89BA3271A7A0D877BE265177E3B1E82E83
5B4B3E150939113FD4DE3C98B6D6CD4A3CCDD1E056258AA295803CD110B37212
9301E57177EA104E1D16F29FA9FEDCED68ABD5DDCC53395F4CBE512AB3C62A5D
33C82961122993A48947997D1317F223BD6DCB268804202AF2077130308ABA4F
B754BF11AE1C187BEF20020F6A79F0A05787A7F54F10A5BDE5DDF92BA125BF4C
F39AA1025ED62A10D9A4F44933DCBBE3CC99C154C54E0C1983485A1CBB7D5E02
689F194FA86DF84270AA9902F2267CE2E63FAC2A1AE3EE08B98610F68D0AC8AD
C2206AB306EC2A99536F44D5C3E6312B429FD74EB535DA7BBCB2BF546A5A61C7
28AD1BE3B60EB607E14155D7FF768F7994807919385033A174F7CB18BFBC1F61
6606783487A0081479EF04690966C7FB275B1DDD606E39D4F3189AF71E28276B
39B7A6766D5ECE5A90D9466ED8E5A6CB4E88E01C9FEB73E63BD0C7FF4B63A70D
9D720D7AA09457363074E1EA0BB5CE01020100914254203F7E7D5A06E8D57905
B1EECC2BF67CECFDA5DBDE89869E58DD04BD33ACD7BB47A03C9676CDDC8755A7
752B79A0BFBA9342D53BE51C2858C498EA9B14F1979F3E6A0E0742B7453CA2EC
C6BA5A69EA71A2D4ED082C173DE2BC1AA068D0D19C981CE727AC80627D5B0AED
5F3F27884E434E1AB42BAADEF9086E3676B8E7F3B6C33298D88D72C153B3F381
C1AE3B73781EE4D56B1B409D264EAFA9EFE88C2EA125864EDF818A2C62863FAA
66B0DDE822B335093B3023CD899AEF3E921EB46DCE622EBFF358E63D0ED64C6B
AC64D8F236C2B636ABFF300E8AD89075A5A4B69160560360D71B244029133587
6D1F3917507034FC9A5FF423C9E3608E992177CF11BB60B9BEBCAC61EDCAE80F
A36E2009FC1CD19413596B75F79A7CEB7FD1910BBAA1578BD7E004334DD03CAC
AB478EBC9052AF8787ECE0EA38011E8C1E2045BBF65838C8352F68414CDE2E5C
15DB40B3B7B3CBDDD5EA73AF304DECDFC56351EF6FA1DF33BC3D1CF4E2E99302
4EBA000DE77AD930B1AD699A522CF08148240A4EE8A5E4EC43CA5CB81245D1AB
C297A56CE4F2E799AB032863AF3957FBC34C896E366C9BD107E62BA09EE769F2
E3393D18938C1D7122F32DE4D34075B60C9EB0928F021A6B3E469D8CFFB5E6D5
7D90EFAFEF61BFD649457B8D395066AFB371F8C50A21D321E50FCAFB4052A709
684FFE02A7D9039E7C7887D2ABD9896A662CC42B679B956743929B10A0FCB59E
8543649A9E660E44A80242DB300797F63694CCBF91C78CCFEC94222FEC5C04A0
28359A33213BBB708CBE2C14B8D94EE9E2B2AECCDB67FE1BF2C1C99DD787CAAE
7BD81E675DBEE1F1F6D65E4B8927ACF4182B2FCDADC3E90D80AB2AD6131F9F6F
54A399D5626138C9BED7945FF6835683234BC9130CFF35EE4E0849D10093ECC1
75CDFD445A1401C729F13AD1F5CB8FEB45B63337618B1561A2D5A64C00F1AA76
A288997831AF77B9BF050E361DEB4AA1A4220982E24F74FA7E4AB8187272B1C6
70B2C5895BFA53D89A97A92B7AFDFB6FC8C7AC6C42D2BA6FD3D6AD296DE81341
4F00F456FB88EC0B4599613E7F94A3DC53FCD831233163B73FFB4F11ED8F57D7
E1EE876670E8EC8154FC41C0C3B8E006828F4D9C9373AD3AE9E09FB8F677DE5C
BB7846D37C1A7953FD053D3BEF23C1DDC6BFA3B2C891BF020D89506CD127AF52
BCC7F0A5A803177D4F015F04BF96A31A59D3FCED8471A904454217FEDE05A98E
04C9A8621FFC9389C2E346DE0C4EF2F17AAF2802AEB5DCE25B673BC548A8FA72
5F4C243C0FB140290351BBD90B794D72547B90647F89BA9432C53A09230BFA52
93B02A16CAEFE8858969D09B44786B4040C35B2C1004F399B6914547F84DE0A8
8FA01449F424466293DAEE10000246BD60CCF37534D4339A8B12E9AAE3053FC9
48EC73968EBDB94E6BC2544DC123D25B98CC289208AC51384DEF8B3804120259
175CCC9EAB711E7D94765DCBB9345B296E34DF01D23A366D6FEEE19EE149C2D7
38C5DC62A161E0DB90A51C0F63B81776198E7942C3B815BA68A3B39E62D069CD
D5163AE4B0564F0F58297FA45710602E49700A131B8BBFE54CD4A67ADD5B6B86
AAFF09BCBC46D7E09561F080515206B1E7CE
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTT10
%!PS-AdobeFont-1.0: CMTT10 003.002
%%Title: CMTT10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTT10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTT10 known{/CMTT10 findfont dup/UniqueID known{dup
/UniqueID get 5000832 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTT10 def
/FontBBox {-4 -233 537 696 }readonly def
/UniqueID 5000832 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTT10.) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 48 /zero put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 106 /j put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794DDF2E5ECEBA191DB82B3
7A69521B0C4D40495B5D9CE7A3AF33D17EE69979B82B715BAD8A5904C5DE0260
6C15950CCF6E188A0CDF841EB68E5A2F88253E382140F87C87E55C9EA93B8C89
14A36CDF630D6BE7CD36DBDCE22B21778E8648B97B7EC6742EB5114BDF0454B0
0EA7B1FE236C84C0E5308C871F67B973892890557AA12E00B2C20C71F516C397
3F3BBD14A1D0149CA064391056E45E9470FC7F6F556ABC82653B3C8049AB5CF4
BA83C8F2158C236B2FFD4208846013BAF4165E8BB8D334C8FF2E8D74AF5DAB2F
D44788869B08399421AAA900ECC6A2D594641C121660D4B5F512938994C18DD0
FCD9B008F68F0351D21ED735B2740CB1E0C1CCD25EB548C35B844601D98828DB
556F71D07E081A593FF12DAF83676492A0FFE16E95717A07082B43A966C1EE8F
8A59E1255E1705C43A23CF29A5E4A6547C93F1680A870EE7BAD8CF74D838CD5E
F806911D8FE4262ED8E7F5BC58B92C9C6D74F8AD45FBB021EC7E97393018B9DB
B1B84E7B243ADB05ADD3F1DB3692ADC5D47FEC7DF93080669E63281F1576B673
125EDF08016664BE73364F65389F7C3B66623AD1754ECBEF9E5CE6948D933787
A5674279ACB2EBECD3B4E6361419AB32028A27670C9F3E18B746A10B00AF6D77
4EC00E3BE521C02A99AE5BAA98F793EB1228952BE67934B91472E01AF7B816BC
56D7F19F631A1927846D800C107B1E9CBFF9D2DD513B4A8CE2E0DFD77B1ED178
E43FA7052765E9FAF89989D490D8FEF6C536EC0D4AE27A74F474B98DA9E6B92F
15E063DB260571979A5DE2423920CE1F59F56EB11E00E3BB9D466A8263E1E385
2014BEFDA8D1EA3EDA04BE32AEE6CD15C5C010A1DF7F705A2C0C18E87C8DCCE9
05D9163181CBA56C0FAC8C06A2990554C8E759D076B01BBEADE3B5FB8B551390
6C8E4A2A1C6E7D9C708614626F3770C0AB7DD2027469C77975C27576065862AD
04E5E50CEBE907E3E991FA0C627302C0E207B4D5992BEBAB5853AD1C0D271728
C76F40A79392ACCA7358F948AC65DC823CFDA59E1FF69CEBB6B7EC3CF21669E4
70D999508F9C49E2D9F8818CA53C977D93E15FBBBAF75B1E84F0BA62BCC4BAFA
4EEC82D804C8A8C0210F3E5E258BB1F6921AF02BA9861BAD5C3D5FC8CEFABA8A
A607E547B802096F7AEB09FBA99C83C9A494B94408DD607CA6561A6E6660C473
62CF8D35F31D052F6C6C8138A8E1430CBA7EA6973D6D510C1A06B3FBD79D9364
240C1A00272DA44B89A9FE8D5BF36DC1B5EBB4A78ADBE9C5EDB485F093D9517D
69E1AC9A8E6C9D7C324E3797CFEAD9A18E82E03F69B2CED7D5DDCD1A218BF2E2
ED2293AE999FE2A4B5213A10083EE0407BCF8007670B8C737EAB30311C868D84
121149ACB4A27F3ED6C0C181C98AAAF51B105F264B5672D7F745131ABAB5BEA4
0C9B43C0DD9116D6DC61F90BE72018F290D26D5E9D341055CAF09C9F45333CDB
D45B7954271767F638EEC499F7B53C2CC5774EA7A7F024C4CABFB93D9CB1856A
0C671A4ECA7C62EA5242648A84E7F3AFB9547A0AFC29593CFCE6D8B873A78157
D337CABD291431C0A2CE1F37E0CD7340567AC206FF98E4B5A6410F70F750451C
550EFB54AA259A1B236CA9CB730D2CEF125EC65D959441F7CC9768F777B44844
CC9842A307C72B740680ACBBF6AA35FA7A94825069BF7696ED81A371A9E5475A
9D997F2DFAD339AADF797F7E03E654234455AC3D17702A420EE0A597BA31BDE4
FEB8DBA7C61D311CC90441A620164DC22DC2D373973EF84CC553453AB1B3337F
7B39983B8DFFB3A9425F119B45C1CD37A76F905777B3154CA6200792F1759D06
E017890F4041A385F2238E3C48B6C8EE6F5258463FDBFF7AC762F6C4363926D6
50F004D473B7B7F73CA686B559C2885F1AA761653C727A77D73431E9D110E76A
2E55C68CD50F43997C9B2FC4710F8C8540909829E215678E63BB8363C4B8AF05
9986102BB36580D9CA95CD216B7C321822CB41B2E0422CD077F3B55E0246FDB2
44D5976F67296B5B0BE4B06F6E43535C21164E6C5089C3E9BA2D6B30888C57DE
49DC8D9D46C0D5EDC47ACF2C03B72DE3B69512508539019B759280BABEA12BC9
385308A0395C4CD33182A10A5A229743379C2075D82D8BFCE4A66E1AA087A091
8F5372684FA5037D1B92D50CD9CB4F50AD4F8EE7D51F1C9E63C721CB5B9BD011
6F0A8DD4FDCD2B008F223A1036D90F0F3B252487DE7898F9AFBB3A9D9CD49E0C
EF4ADAD5155A98D2125ED5A3D3907F67301649519419F33CD942E8DDEAC1BDA0
E90C431B198F646766A8FA9F8D1561B57E126EF604838C0C1966655CF31FB7EB
C8CCC434FC1C96046D38203E1791EC824A3D7AED85C029288D4608CA7668A2BE
484C99639F121845B22EEFCE0A3B808261921AA042AE19E641769E91277BEC29
4594082CCB3058F90FAC4A700A8A827ACA00FCF574ABC8EB7DBCECD97F2B22C0
0AA19E8739B81AF8C6F621D69B8E6F29BAE233FBA655A0AF5BDFD7F5C6B9167C
6BC7AB693D45EF2AD999F5DA3CEFA39BA48A17EE6D9F2C4DAB91AE3F0044DC3F
5D5506CE4675AA928B0092D6F173644F91295216D8BBB14CDDE0AD524A4D545C
1B5E284A3BF0396664081CFB4F186A84A0D24D61E82F4767C1E55A0642720CF3
909FA1AB8EAB78030B59BEA067DEDBD2F1D0340E790AB2777DB18248521934A8
BB38A58B7F633DEA4291B0D5D13E9A882C974697CC6D3B49E030C94EA29B5506
CC29C44D01B4751B453A46A9F6BF3BF135AE87A4CE232AF57B66578310DE41E0
2A6AC422117F1963C4D7CC306BD25A6E724E51921779F22F029733122E23E2F0
CB340008813ABB104380C80A492B3FC6D0BB07CB8D8409E9576891EF6E5C9D08
EB8320DFA31BAFFBD336D0C2BBC3D3B2D30368B9860768FC080D30569C7F7811
0EBEDA2962476113625EEB555490B8CE4C5F99D74ED10F738C61854CFF8B41C6
9402E56BE8856144A1A05D0B05F4CB7EF728B2F4F5A439F18C3B68CEFA41E59A
D8308ADC92EC1289DC84CF48D2CDEFF509A145BF945E1E00D552D329EBD2A7C4
21D58082CC8FA790E981F4AC8EAB99950678FD3A7DA3DF13778681B208DD71A0
7C3CBD0664B37C9EDC6B601D79A2C51FB54DAEE849F93209793849104E722D3F
52DFAF7047EEEDDFE744787A5801E4AC2C3D58EC5DDC15FCEE03990C53B0C57A
FC54F125A04C8E4A0ADAA725808C587E7DAFB9F784FA2875689979D316DC22BD
AA36B306A1ABCF907B63C6476737B746099973CAEA8C1E2C5C41F27E0F7DE8D7
F0D942E34E92F43FE902653D4D2EBB6F3B9F7928B1550A82AF234D45D028F429
067652BD3D391BF423AE72B9CB1E8D91E898161BE3A7849D456A861A2046711E
E934DC59442AE7D81661CE8EF727D8D7DDC0270E937E40F896AEAE6171661431
C1025C53172F9D366834BA0054FBFD84503FBAE328B6FDEA180F8EA35B1DA937
5CC3B8F00C206908C2FFFFA6A7AC6915D15EA44BDCF29E2BFCFD4A849535F19B
0D307C696BE8205C7D84B9C77F02EF27D911056EDBB4080E4D3ED72788666CAD
CD91B0ECE27A177DB23320A7FA9C31408B4D02D2A4B1CC6DDE1A6CAC3D8EC1EC
2226EC98E51046D1EC26FA20EE62D24747D83CF4941DCE5CCEEC0DBE387149CD
E05B19FFCAFC0D117F9A3E60DCD4C815228D98EF95EB559AD0ACC0D50FFDF714
56C3C812EA5ADBB013BBD956A7C4CC0ED7D3E25D5C9AF5E626F18297F75D4957
F5B0B33379114B903FE98BCF35C3FF76FEE1D9AEB711F2962276531F7380EE3F
E368720E0292A170A15C5539B1FC7BB954EE2624B504CB8C805B8D31AC38307F
0513606F09211AE64DAC447693B2A0AD15E9A64C34F5A911ECD0ABCA90E9791D
67C6BD202B0858EF96E7722305B8AC02B01AB1706CC6AE875A8DDD15EE349046
EAA65005E7866B506EDFB7A5A2AFD5C9E9DCC821A79EE9C1EA2C7BBA32A40BC7
CEC26DB1AC473C8C3960ACEC581B37D6569E8C8C42950BAB7930B65E1570E3F8
9A7FA719F1DCFDA45A3BF2AAB32C9A93BA3552608A61C623DE59BCB346E87EF5
9CF025A87803161221C5C1C6F6B3403712C76E9D755C7BD68D7F2DC03C14CDF0
C1BBED1D648B905B4B17037B7263C1EA7A7F06FAAC4E09E08483A8D714C19861
327CD9C32DDF850302DD6DDE24912D00C22ECDF3CDFB18FA831A41A7488EC203
F564CFE30D506F0829A96D35A7E09C3DCD107D589B627A15B55C5D6649126BEC
60B88C55ECCBB4E680265D9EAB4CE22965D3B1AF759B01ACB0D0E6C92B6B4EFD
A81E6A648708979487FC591CF09631310D46891423F4EC159A73E30D8DD147A4
B0EACF6D45D18CD16CEB8176F03ABCB41F2234747B9733C8FAF34AE5D43D3BA5
0CE0FACFC9B087F84FB6C68678BC6E76022B1526D6E5B3A48EC1A110BD75F45F
1C4DC6D39F254976453F57DF873B7D635C80C42026DE020E5BAFE0DA0D54D1E1
DC634D2621BA184347E5252F645A6A1DB7657C48124186F0E4C644077457C24D
55753C651A9A7B6349867641464B515B821349C795A645420508673B93750D0C
7A3B33EB1F09782033742AE8F3A23FC02284E6C03818FADD1731361542E3FA3E
75B8D52B668C3E18A4AE967D0FC3157083D952AFB8144D549E69EAAC51C279C5
E5D88A0D9D53013DFFB4352A1598FF84DCDE6FA32FC377306B9B92C0F96EE149
8CD55E7B2445B86CCA7A547FA732D52D59025129FD8C6333AC0DF4F0CFF6287E
F2036D5DBBB3B91B92F12FEBE0B61A313A4DB5A9CF0BB3DDB781A56FEBFFACCB
8CB9D1D3DBDBC4CB6AAE6769E470582403CB920630221B68BCB625CD4605FA8F
D3D5B7A1A28D15E44B38E92E906C138E72C15B86F64C38E23BF0440052A8C914
54397F49DBED99D0AF7CEA3B0A05FF37C2D7EAE1412567E6776333237C31E3C0
49949EC8BFD6E0F6446CE2D4DCD2C1524A288818CC5D159BF8463A847AE4A2B9
CC8C58F822804B81B13BF4F2DEB6229C4F51F093075581791D02C36A13B855A0
34900AA7CD4F1A797652656FE3A8425A38F421C4CC0ACA1CDD44FA6B31219276
1CDE1CD63D6A58CE705CB56CCA1260F9B86E989019071563A9B4C274A87558CA
6EF1660D574EDA276801F0057740E2C3B80D253D697736484D892CE1AB128B8A
DECD69712F5E70E895FBAA927E8194D792A04AB6CE205E04E38A433BBB793FB4
E8BBC4279D58A223C6673D909D6AFECD246E66A52F4CB35E5931D24C828489BD
4ECAF621A220D8ECF702BEB01C4FC7510197D3F6D15321EC87175ADBA6434ECD
2B5A306E91375CAD22CD94301763E4A8B981472890422C5488FCD523C9CB17DC
ED22FBF12D5F7525D0D6BCFE8CE85B0DFB1D6F989C267FFBA0A996D309E4A934
3DB54A9D29C88B9D55D7300DA3D46419256C5A07A2A529A8DE8BD1727281F5FE
97033D861E0531B14E811378EC1AF1CC7EE9BA2B07D935843D3053F673979F8C
FAFD59D555B56CE338F606747238B22BD62C42BB7238FEA335678D474A643570
A9E7B4970E8C541CE9DBC7BF70ED7BA33639D6744A18379455029E934C95E2EF
639C4848CE9A0879B51649FAB023A71782444B451F92A34CB8A124270CCF86D4
D18EEF5C1D2B2A29012613851C49F50702D63BACF95EE2AB4D72B375E0A62615
E0991E130A67ECBA9E05329B740708F1CB148724C3A6E5E3AEC1F88EBCA398D2
1CA8827C977D72734310233176D1AE26C55CF2CEACA62223315C28FCF6305C7E
A22414D4739A059F552F1F9372CCCA5FED4F9AC987942848EB498900269511F3
F408CBEA0659B954F5F1B18AE4FB270213646F9B28AE4439D2BA2D3E0AAAA780
5E530E4EFC8A060EB979E12191044509DA0C14397AFF949E12DC970658D5EAF5
4EA963F5BC1407A32F3837CA6A24B7F3D60EB8E6222B702E25ED903F9D21AE50
664A095009BDEAF4B78DAF94E5A55D48366CABF07791A1684B2F54EA69070844
4F031AF8DF416C2D3679F8BA038B0DC9DD0400CA6B34667BCBBC07E62C1668A8
35A8C57C9048A7227E672E89681B54D662079A189A9E96A3CA96D8DD10189B04
1DA49BA2729F1CA585B1BD5C467295285D52E47CA904235A1A3E48EFAE9EB6F6
01374125CE89D53C276858668CF45D2F092DDCAA52418E0BB94C2B8266B4D88A
5D911507BB1DDA3D8F6E7C14A91CA11AE799EC42E993098E18CADA70BD2A1D82
2C39326C6E3F9E84CD9758B9AE43D79BF99E6A0CD713E95B3D9B7DB90D127DE0
DAFEBF850CAAACBD860B5DEF2082F1ADA64B44B193C4A1417BE221FDCA36456C
BE5934C8CE3ED55AE3A11697C2D682B7D0F72D48976451D205783BE25DBD2507
39C14FFB4BB828DFD187104F38A7F11D5F0698C11E8C1D4F107CACE573FDC4B1
C56FDAE47024D6FD16A2FEABB434CA320300FC4B6C1B6CA08F76C60B7C08A665
99F404DBA8A2A1EB18EF6750E4EC186E31561A3F080BA6562967546715859481
7BA782940F5C5D06626D6F6A412CA7C13820EC7C1DF23E15E5829F698CF617BE
D940523E4EE4ADECEC48C24297DBAD528BA1DCE7AC335A1D15D55415B108EFC8
6D45030D27B3EA63B2B4CD771DBE66AE0218ABB1153D4B7482289D1313CEF184
5C960B1E3C3C953912CC6F4521D1E15636C1545EEE457EFB87B88C9E43CC2F38
6BC4BC96969F4FF28ABB06F4454C01CEF1B6DC538F1E832FC1666D977E5A881B
F72F1B4C7DD4BE167A5535F1163A0706F9A0B26400178DF8A128FB5EBE6A7B81
E478AD183EC06622B591337B9F1872AAEA356F4FC67EE767B34CB5A4D90702D9
39FB846947F4096FB3DCF16EC81455164783BA0B5D723060DAFF411B68307E81
7BEA1D9A47A5AA3D648E618C83C60F060029E6EC4D46B045FA7415BAB2AD0AA5
ED9C729C24136F6AF61E6409C0B5CA760B16225641E268A68CFB8260BBEAFC77
6626EBD97195E77CAB425CFB0096D805D9EE699E41680D095AE9FA10122A7882
2F00F495C9EB2102DF0D3E61833BC0A2E468C5CF7AB430FDB7C0BE3DF2C0D230
1580BAA25D65F599378D873165482A1FBB224AEA89C6BCCFBDBA42AE1C5DCF41
06969F585CD3B737D1388D6359F5468D88FCD2279BDB270F6A858FB7D2ABDEFE
5EE8FB79FA437F8F50237B92C307B73B0DCB808D07A9C3255CB9B3B17039CE5A
288103D05D132863FB522A02CEE3839EF9AF7F07D99732F0B8B384745369FB3E
7901166478F4A16076A1504C5E98D17408494E270BBF4470ED12B4332422679F
759F1D93984D7E506D16950DB6C2682FE1379EFFA6F6C95DD71F6E55BE3EF6AF
E0CB25388EEB436E6527806FC75484133F6E561DEB979D5C1FFEFDAF2A6D964E
03BAE0BD593C2992AD84569C81050F7A793C5263E50C2F50B98C4CC703EAE17A
6AEDAACE312DAFAF5278D125B6EFC5587484F61DAFF46B87B7C9B1EEDECA4859
314A9A9E2248467DE1E54D90DD671660B9040B3E0DD982260822177EFD757266
74A16C83A7FB168016A320D3DF3BD7726F1F4EC90EE5DFE810C96B099FD4368D
906AE4699049EFD37E8EF058D4B97BF71106445AADD4FC6E90615A0066823A36
673B8DE32322BBE861AE251226B4385AB28702831270DBD25D666FBB0AD7B96E
A44E891EA1EAF0F87013AFC982E33D67A28E96E0C9CB99B9E4192536830D9901
931A8CAFA41289633B20BA3BD7AA3414B6DA8D57CCF2FBE39920CC06361F075B
CC40335DB9A0071CFF77F6B7BB47F3100DBDC9C4A58C2B81EC99E8E966AF3390
E3FBCC28BA1D79961C8A1584266454DF772FBA99664D74D4A89FC82FFEDFCFE1
4C9E4A04291E803D142E37E7ACA66AB279378F2F192FFB2B5BBAD18B95F03136
2CB594A3D6D3F8576B90A6C4DAD6D6C8EE07AF682F925F01D0B26CBA347C03BE
F3B0585CF4539FDC66915E22117078CC94D621F31DCB3E021998A5D6EE94CA4B
E214D07517283D56973D8E4367392BF6C1150DEBF459D141AE0941C1C8C5CFBE
E735D796E365A1B0F60BB4CF2801EAFE4889EE5F338D3C4885368281B3C95CCE
251C28A90D318A8A0384439B38D63B94757252062EA44E88509FDD2E75FAAB71
7329622828B2785C1A8B26351BC7448C1719C88FE99BCB73F7DEA427FBFCDF4F
00EE079B0C712F7D2C8DF98D4830A9D8C8B70A8C5D54BC1DF3171135278BED55
DA1CF0E696B12935EB59B606AA3C0CC50C7A259AF32F4C81D9B39470D9993CBC
8644403D2833B34AF40511654F96BCE0064860F39849DC65622EDFA8E6EDE9A4
7DA62658B43CBCBC5E8F53D4FAE6BD0253C0C81E6C53CF5C3A9E3FCCD9AE773C
FFEB7E81904730359D72FB1F64E3B041A69B2440F63606F42819D52B47DCCCE8
D129A4C05778EA6E4945DA28411430C42A3D1366F57F0124EE7C8370B7AE6C36
2D739A53C137AF4C79060AFDAFA10DAAB8ED7D0BA6781213329980CFCFB18CF7
CBE6C7FA3C27329935F378698BB17CB6118EFDFA622B219121677E28A7F1D775
51B8EFD72B485F950B8B4C0F5E25DA3D226FEC96545945C5EBA0E4FD6B949B54
6AD49D1BB161EDE033C4CB22B633B70F38D563819330DD52912F3D10E9E2D516
B08001738F1EC4FC0B848E039F7297787377D75C8A0D05AD493E6BAB4100D265
D42EBDD432F204616D034B3F80AD2AD5D4E1DAE678029CC028DB4D2D9EC04E63
E90381E3A52638877B18EC6582059C02BE39FD0EFD694DC5204A247B081D9AF5
108E518512572179FE6218E090422F74FD548341A957DDD557CFE2A3E9479F0C
48140B475573873B2FA48758B7E84B69D33EEE87547541F53976C86DC1EF079B
38B2870748DD8BBD767AD3EFBE479ECA5B7529BAE86B985D6E793E013429A238
307E3A46BFD486834A752E5C0D52423EA2457F56703B271F766E4E8E3E36F9D8
4B8B5C77884128E64FE8F3F50A50BA8D036F18CFF8D23E9C0213658AE1922920
9F815677C752A689E9F3205F3B2C633A4FF49133F1A1C995703393F96AB10B55
F7D007E4E7EA49AABA75AEEE4BC60222661084C5F8CE09B039B6BB66D32E2A77
0432D63B1C903E50A6A59DF06B021F85A111019D507A3C8ACBD7FE39F283383A
5CF1546572770BBA3CB09E41AB8CD211371B773B0136E0B3C29DBE7626520C3D
5B005A6B6FCFB81C70E6BBA5CB2B4B5F0FFEBF496FF214AF5B07216335DACD9B
66FE8B0BADA48B50143FB8CBB321FE546936B157BD798318C6B2C62AF0AAC227
997FFAC68F523551EC71ADD9044F897852E02D7BA9CF50546D3DC4ABF4673EAB
16A30BE0EAC9F61384BA725B7A4407A8FE317FDE54F4AC61F328BC03429FE073
762EB0A14CC90432B87D20870FEA3C44106F859A7D01F2CCA6D8221F23B7C33C
F947B272D6B62AE0D8B8AD91D33C2B7CEE76F63A1159C62AF2DF3957D97B0FF0
5A9506320FC396546EB00C5CE008180940DF6F35A1A561C1F8273C525F3E87B2
B3129BC6166331E42DE0F3862D618B337F616E9599E4081BE94947E80638089A
C2433DF66410DC7C3C34D6E36C701772FAF0BE6B021EC057FB648CD35B1E0382
74912926F9CB6C034D711DE2A689A1F40E879FBFF2CF9A0430CB4BE6941B797D
38A2A74670462EA3FD45E8A6302596C7D7511E65675378CA9027475EB78FD45B
008502A86758018E584A4CA5B0B05EB04595C579E908C2CD10F85AC77F498DBE
F7EEBD525766E1B992D198A55784AD908470517746F8D5FD6D33663705970B2C
0F743E02F2391C4FFAAD4704B6DAB80FD9B553A5206ED35EAF92015BF312EAEB
895A9D054A1B2BED399E780DB66D502014608F6D49C54F7FFE55887D56D5C77E
37D98B3644ADFEE1AE17F566C78680370B01A37987C8D96836CF4C6CB9FA0700
8ABC73E686EE3C2E9CA11949FE58EBB8395F0AA8F6EB9ADAD44A2DBB0299A548
2C2F94AC5930545B63AA9E91854207E4576A1E674C425EB656597A634F74977E
6CD6DD976A5D1E4C58E6471FC04A20B0D18E5084C2EF591E9922AC5D7B7DC010
70725DF295DAAF21DB214A7EB7317E53121418D9CE58CCD3407F05019CF493CE
AAB36A6F25C04968AA801A46BCA9E0AE0BC347E34E287A975CDD8C4D720EBDB7
C7064D39ED4002559F8D4DFEF81A9B1FA762109D5886BF9CE95E9B6D4F8F652A
67D2F5A6F86FFB094793BFC01FD4FE641EBE81BC162C737FDD6FD4C3F6CF2688
AD5470018A3A25DE52599A06FBDDC4081F7A0A37E5B5DBE210ED390137714ED1
5192DA6AAA5BA61365E0BC1E2EA30E147175D400559FA3197B114E80C716E2A2
8DF7F3753A0E399368F112736EC85AE934384BD2C37346F1C23170D055FEEC32
CB76364270266C5FDD06CA4AFDB10985EB8E446E6324976F54A91DEF5E9EACBB
7F56025D56B5995584ABC44F621B061CC7093730FE1C0B4AEDD95F8530968B43
C07BDB026529287868F1A012D2896DFBD32164C5A8C686F4E4A3F29723824416
33AB9F4342BF135B8331F31E58AF3A560C46F0F9A0A0E9FA210EE25B3614528E
2DA4B491536CEF9DA52092932603DDBAAA2B70A470A4AACE40F5ECD860105A15
71E9E1C4D4537C1D87BDB2CD3F3115883068D8CDFB81AE017B66E1C8FA3A6B24
F09DCC009C8F6D1B4682CBD8E77B6330EFD3B7E0636108A31D0797C7D0DF9D4C
584D78E7CEB31584CEB89DEAB871A5FC7ECFF3CA581E01800E311733EBFEC6C7
C9C77D3D663A9B572728AF0E925E9C4702BCAA0A363CA38E471A4F04267EFF03
0E428D4A5F2CCB4C6F1F688EF830BA56A5AFF8A2D1B2A5410B560B95873B514C
288ABD0508651D692916AE51B1AC49585F2C38CC5D2D67392BACDC12575953B6
BC06737F5EB589F99CCEA4715CC10BD796EE01CE1617104C5DB1CE13DEBCD51D
C1745EDD17EB677D4F6619A4B7E68751997E96F9ED866E0854E56C77117E6146
311937823EF2898FD596A29112B293EE47BE6BC7525B8FA5372FA9E9BBF81A52
2A59ECBCE84FCD2AF1D21970771C944B4B9A5015B11C6C45280C4D1E74FF48F9
BC36124B52F9469FFA84E575AD0580BC14CA70AE163F671EAAC16883A59B2D3C
86A3B4B340A3AC847F159D5AA6C0AC4CA85DC9D066BE0DFE4DD3BFD1B6F7BE40
EF9DC81B561B8B90E92E6B7B43E569197B1961F0473A9FDC5C517F0E77E35B2E
F97D0F9B72B0B0187B8E19219070CCA0242B9306515CEAAE15C290C9F65B2210
F3C190802D71BD4793E73461619ACD5EC2C3EA8B546600F41355AE557AFA7E6C
A16AF950DCB0DBC4F560D8DD812AD7D95938D7C0EBC243BFEA08FC559C71B3AF
EFBC68AE43D555FA34E3988F51C343698D62F4CEBBDB01213DEBFF8477A4990A
651CDD4FBA861FCB3401B33574AF81767A5B9FFE5A919CF8758078F2E0AE10D2
FC13B4E095F2C33829E77F03F3784400FA281B829E41315DA1B5184F8A2AEB00
812DDE49F764C4AC864025B74289D48F66A1C496906478A79EAA3CADB2714AC9
368FE823B1072EFE5ECEEBF0A2CD5E0480A6AAF88EDB2070ECDEBB1E843E299C
187935721A18A8522AF684E449284146411C642644CA5E737066229312A0D158
C22E0CF52F9FD75D8E0080FD7D5CA06C5010844ECAB9424927DF91DEF5144A83
E01B8CEDEAD0D9BC51745CE3BC1AA2379B20F9FAA8C1010E145633DD5F507BE1
823D7D6F1F1D42E5E5DD22938B2E332CF71601D26105F17D190C19425FE79DB1
1C617F6F437E90F50919EC23CC53DDAEF915EB071898514459CE9F319CAC02BC
A83C181BD03532C8F03981479C73048DBF04FE20A49BE4771E61F33D484DA480
5CD23DEE34C725D72B1F1E4DD511CF71A47DDEEE489D7B8324633B25DC62271D
27020C02D4732E54696708B37FEC2A9DD41E97D7768C1AA0679488D93F3BBB48
C26F9AD6B68A54110C4F96A99846EC2B681F685AB219C9AD0D1C6AC153155026
A73E1F93DA09D19D3F99648D969EBA94FA21B5AA41DCC0D91A25F6B1FAA81C45
4352FACC13AAE99E0DAFB8BF59F307C0A0BD61F13AA1246E66D61F36F384E303
9D78B6B3BD04FA094F3BE9FD9543CBE614C7831003D1F81189D165583A3F3046
D6A97F82516242F0334A5D7CAAE06C1758EF428C1B42384BC03C5406FF86DA0F
AF5E0E00D6124B84F7A0B609037E464AB8B3A4ECA982FA814BA4F5C342BCB782
AD2C5538A95A75F0BD40CAF3D15CA973C7F98EBC67BFD892E35EE55327878098
DF381122A2518C73742E69A519471E4DDF637270769E744596701F079BA86862
18ADC18073AF36588E53AA8C6C208AF6EB7CD90EBF24C9626BB8D31D958B94D6
E19D7D696ECDC60A02578D59D094DBAA4FEFE00BACDA933957C8A024A4C70C6F
05788526850444ADE35F4EE87F76369A8DBE203FF0CEB3A1E4E7878645AC09B5
ECCEF535540EB325626226A4E75DF5987DD4DBBAD3250653CD448A86EC3E944F
BFF1677EAD8B9179D9A2BB788853D5B88BB9D233B5E4E2859C25951E1D21CF98
D7C8D7B10B92A5F9BB9FFCC08D526DF6D5C27F2D5E47603C91D47FE23C9045E1
7D50A0603545077E2417E488F402FBD1B02FBD9C49818278AC563CAA982BED35
7C4FD7AE2FF8BD9FEE0BB374C613FFEC2E3E495ACC3D375E00E02B94F8EDDB51
27D341AE8D0F553E159DA951E76AC92E77817EAF72A3657C28B15E234AE5977C
4C730F2A37984292EFC448B2BCAD9A6787A7D4528452B5AE48BA58F39F63312A
3C7C01D446ED28504C3288FDBAAC6A553A1E6B126B5B05816913A33A1AAE4EA6
4FC7D62975C2414ED1C6F9FCF30D012A2C07C3C72F4EC76B3566B7C6B4B67A3D
9A1C7A80F2C01FC3D0A847B939F31065CF2317665900D49DA92937B22E541DB3
9AE218AC14C5385ED978CFADF348BC74CED480AF427C5653C5C22B30743EF853
8F1C18324F169B29EFE224DC1A50D335B059CA4D9DE321DDFD32491E4FAEA520
8AA14BD551C624DB4039C9EADDB961D317C74EEAB407BAD1825908985694FD3F
7EC0121B48D364A7062F78603243395F0A90305C1F03DB4A391E14E1C9F0CA70
58777B95A8E27B12C4284D1463EA045F1424ABFF4CBF44FCA5E93C457067EEA4
D53520539843AD08B5C250293017B595188E1B435FA7C266C5BE6AE5A7EEF9E0
61881E76313562D2A4D1BD934F4C74955643CE3E4A54E99B35045212CD02E880
611A55132D88CC565D7BB99CBD16ABBE71F82E9174E431599DBF30321108EE9B
A90ACF97B9D1C0F6FDF6FD995B8D27370EE8FA0F97CB694FD351C787B60B0720
2291EAB2A3A321DA1E7334E29FDAA4DEBAD46C623CDA59F1B256B798F2890147
FD01BD658D22E5BFEC708E86314E6E428B7F1A045EC152C3721B602758C168BC
D99A3179AA10B8CEEFDFD58EEBDFDB18DD839B32ACCD77269788FF83685C19D9
2494CEF458112BB1B921A113CB94C6EC5519832A6A2250D719515FA4BBD2AB12
B7255B881EFAA65BA96E6A7D63BED1DDD365515B6D40CAE8BB0CDA394893B3DE
5C4C961941494783C16E8436199C5C81C6E6B98EDE9FFC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSSBX10
%!PS-AdobeFont-1.0: CMSSBX10 003.002
%%Title: CMSSBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSSBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSSBX10 known{/CMSSBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000806 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSSBX10 def
/FontBBox {-71 -250 1099 780 }readonly def
/UniqueID 5000806 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSSBX10.) readonly def
/FullName (CMSSBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 49 /one put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 73 /I put
dup 79 /O put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2919BE7F4437ED75BF2F7BA7
02F85142A4EADC8C9C7F11ABE2AE2A9DEA79CBF9577DD8627E31D25A7E4DED9E
FBB1C413696C88A07E5C937451D40A9211B29E24C9424635CD4FD6B16FA7D76F
5BA1DF0EC26097EEADD70EAA577531177A26B5017A32675C68052E90E68538DD
E779AB23150FCD1653460CDDCC713599EFA381C3322175809A73447720F6911C
6BFBDC0458C477D2CE69BBAFD05B5C2DA1D2E3E8378A2112066B045243D3D080
DAB211DCC25430973C18E7FC5574A814E3EB79F34FF5197453873C8AC66E47AB
5EA57CB3C8365D5235E7746C8584734F002E9A28C38B0C25E3753D85A1D2F3CA
B8DECFE14A7AFBFB76CF3E91A1E0203FBC8052C2DF967693C9BA0ABE86B5D264
BC345D7954C9523B3E70C4AEBBB0F2D56BAD6D76E095F9390FBE2CD607F3060D
F713ABF47F0FCA5D5C27CBCD4140C668F733F769FF5326917C0AC5D4C72F99BC
5AF4540DB169622644D320872947BCF1D30DA4EA150AA22D6D53777345858DFA
3286EB68314E30EC650C8BCC572D72879E431FB4297AAD6533C8F4802E0B9902
8360C57504D4176C1DE7F57382FF2E2C0A3D5285A061CE91D3149E3096B91076
1E914125CCA8D1C9230B72427990ED4468CE79C11E8F0CB89A3213C535B040E4
0C5784E6D53C96696EE45C87B5E0DAA80D3A06E5759D0676ACF99020DCFC3E8B
50002675B01959500133BC30223C75A54948DD28FA83F399924D4ACBE33F1F2E
D85095A76AF6DD92EAD139A8D5673A35B3633D25EF3B10A40A7E28F329D6E7AD
DBF1DAD1E666931611FB107D1FD3576F11A22B50943C536DC2BA477EBAA52BDB
B65A98268602F26DCA5EC761526CB7F33CB5B345110B7A90E1D078A21E332F78
33A0CF88EBB2CE852384DE3435F7B3564A0AFBB2024F79A633BA5B6EB7CC5389
C43621C82972D60F7DAC71FD9DD38CAAB865D7DE4ABC39D71879BF31549DE649
4B9CD8C149880504E5B34C2153E963B3FEEDA0D59F70E0ADCD24EDBBB8EA961A
90E5AE4ABB26E1AB1757E25572622D5A2541CFFACAB673665C7693855473D78B
847FAD590B657CC0B8289034AFEC3C54FE97B010535F70AF67ECC88E21B077D3
A9C2C52D25CE9714EE430735DB57991AEC946C96B6988B2C85D17C8BC80EA844
3A076618A686040ABCAC347F1B1C14676B05E13C239E99C3A2B63D0388CB50F2
BC119D6F74F70DD96BB5343D5458950070576BD6E319AAF5792EBB9DA5778CA2
58DE0976AEB766DA6A865F09FD6753FB4E7E0E9A06AA1A06C2636AFACF787460
9E73BAFC4A56A99277DCB14F52555EBF6DC5E5785EF7745521FA061227B725B0
7A5BA223D5EE9239A7A1694D4F9EC1132FA23DA44ED0FB0AFD8987A01F9FAE15
ABD485BE098CA7B1AC780A9A02AC58DCF0425D4D110226DC7B5982FE31BB78A1
C0AAF9B712E8D478FC4F85400B5E6D71AA653F9BB2E967A76D02B04887CEB9F0
0EF50A956AF7F790400EBBC07467D9A8BF8BFE8200F8F7EEB5DF3E62A9A332B4
513120FD9F8A93ED683CC47551C629B5313E4E20A207845CC37491ECC3945EE2
71A0C5633B353B03B1A7727D5D9A0478D20D67A981F6E5CD8737548ED4348A91
82F2CE805724A028E346E6B7C542FC69CFC7935E6CF3320ED9701C6127FBDFD3
B20F0DC2D1F92DC69E4FEE57B457E82D5721D932B140CD6DB9BC86B961E7E6A7
5816F42AF937D97C3149DC2AB0054564592448D0CF52427B766FD38E3B040B81
59AA9030CE06A9A9E3A0572A11BDA85531060B75DF8791176CDEC0A9BBF472EE
BD433BCDAB926689B8806CC8044D0925814C1784A41CEA48ABB9AC039485BFA3
026FD30CCE84AC57DF09B1581ED01B3A840AC5E9208465BC160238EECC7A6753
D5B65B159FB08E0DFE4C9F2EF5986352C0E0C4DCA0EE62EE5C19BB6C486FCADE
99D3519723B70B20FACE685ED8D364905EA64A15981B00A6DC06D7B0E3D38FC0
9DDF04221696F7A8F3CC7FDBC25A61D9AAF9F65D3A64BCAC4084CF13BBED7195
6BA4C2445676804C333DA6569E4AB7E6999505DD1988C3E62495DF61B722A6E3
00ECC4EC698E33F7B8225FF591B746E449D2D178880741074D0C3CA740312D21
1F8B0B1A855FCA081AF1E69D14C9131B1769943EA6D5D6210E10BBD9E404B445
FC3E2ADF8C9AB6AC07BC2FC0482515625523C04303F7884283D5CC35A4A6ADAF
59738F3DDDFB51E7134327AC4CA577BAB076F3B588FA3828971FE9D561F46358
24BEC4C7F84D8FFEEAC94E2C632AFA5AED635E867AD362E373CEA718C750B4B6
954A7CB6E4CB2614A4E1C707412B7B09F8969EBD5B6510B66818A2F5AE4EFEE5
9DD7690A3520C477DECB7D61FBE5F84D1C655971FAD7CDA78E695C18908016CA
48B468BB6B43EBE1DDBC49F43B7CD667B4131D7B0C9BB048178A31D0CB70A76F
527DD352F7A9F0F35226117FF305A9DF4AEDF474FCD5C7F31FB06D4B2CC40629
1BE1F40B6347201F84BF35CB5155BC4D2E1DF2A5C7613C27A0EE77BE55A744B6
DF7DA5741AB55F133D518660751B0A91E6BE43B527E9C97E2F06FBEB58DD0215
BF4105DAE1B2A29DB05FA204D0EA6E574C7344C3B3F44092F7F997654D61EA9D
4C811CE6087BA1615A31F8D107DC64F1CFF707234135B728EAA0ABB475E678D8
9200950F24A8A61AE6AA18F34A067849825FB3925A8E01D64E849546FF7F4418
19C0FFC2EEEEBDC7805612F7849BBA7BBD954BFDAF2E6FFE3CA520B79070F8E6
B1509EE0040714C9F5023816250F40FD1C6867F77FC8ADD3A16A3A6275CD6F5A
21BC03274B350EEFA6EE929AE91DEB8D8B309E3B3524807B4562C7758794A8C8
4E3C6EE0C0859AC9B799428EAC242BC4AD9564F2444E3C79F11D4C1D5672DCF3
2E191E25165C77EEA2DB51753ADE07F5E7E748704000265649A2E1DF68909F38
68F0D5F415330C9537A065728D2104C34CE05458AC1B2A53946890DFDD67563A
E044E7AEDA111FCBF431546D410D67602985F6E13988999E46C80A983C7F12A9
FB56C6735454F1E194F63A1B6B21683A281AC6164B3229AE25B1189366C9DDB4
09D1BBC8429AC3D64F8BBFEF1265611E7C2FE1D3A2FE24FBF3ED96A5CBA6FCA7
847F5E3AD4D14C0C77C225588FBD0DA2E960FA3901DA1B46B796121DC804FE82
C382F75AA0495312A80EF9350CE0F80CE0D18316E5D02B7BD78667C2DAABD879
E17D5EB8F274DD2B1BFBC04EA2F72EE5376D01DAA129FE257162BD19D19B13CB
C13181E6DBC12826AFFD87AB152A59D67D0FBBE5D9CADDB1CAA8C27689355AA8
FDC556015E4A9708995E51E46D6D1ED7B68A61625561FB594B9BEF87A1720222
64E4F8A47637705CA32B1B4CA5B8473F1D67FCB7E4041502B7ADA9FA4B16CC6D
282FB636979D3DE7C76F3000ECA08AD6E116B1558FADCA251D67FDEB4607CD3A
84BCA7DF488C97FAA4FC195661D7977A08EF04A7D9A2D619EFC7AE291D7DA633
C6DBCA7DA01EF336E378764F6B4E4D6C517BE05F10BD1FCDB20E5ABA7F65A8FF
17D93CDF1E60787712C40775A5C3808AD05A2F276C94B05E10C6042604F592C8
AF1F25B98A0C78AA7BE1DE9ACF2273965F0795B0D79ED6CE2753FD0FD7B41A18
FB490B06B5467561DFE5161C27F58E48EA5F38A5477C9CD0C2FA13683271E55D
8B08DA0C96BDE97C653B0B18096EE7C0E6BC3894057F14E83A902FAAA4C2AC7A
566A9EB8F9D622476DD4E722F55F28230124F67501866FFE952AE93DF5BBE2D9
4B9CB9955320A9E256E611EA3838ACD9073107936226140ABEE92A096659764C
4ED2485B33E75BEA57CCF19AB9409B684EB14103ABF6811E7A8C0AE0C0C11BBD
87801F3F0260D04A8921FB9EBDA2A2048F4B5C47DF63051A0BA6DDBBD895E0B5
F9F0F3CE62CB118B86AF595F4F34359DABD9EA354798E8561599CB32345A43B5
93B217C43E316BD10BCE1C66A10C9A8041A14570ED7FFDD95AAA76E92EF52042
69F0B8FBE21CA4E37647DDC890D13AF489606195900063DB0CB8D71968C1311A
D56155D2B2382119E603AA85E9ACF1785E4C0ECA137E7E4F5EE7915E8A080509
02FFCD2494DA2D3B2AD27DE5F11684BFFA2366B6C834AE309D8E07F98B7B556C
DF3E0B42559610F1B78C79254AEBD7B0F5B3D7F420BA725AAA91EA20D014334E
8FE221BB02BE7B59FC3D03D8ECBAE21F5E37E4A0352C475F9F29C5D2FCE8CB9F
2A059AC06AD9E6F13C39F2781D7D4B3FC34291D165E5C66C5D01B5AAA2AE8F72
9B3C634FB38FCF35283792048BACA9F7EE6789621D9243B917234405BF194BF5
A4F137680ED10F216076AA2767C1D220AE71EA7393C7E252209B6ABD94213AE9
F61FD2CB3160F41C4328DB8563483E13EEBA83A7935E4AC11A97DB7988585184
6BD3DBB8241EFA1F1DC5CA9C2E16EC1EE12CAF4471FA83605DA85672B34B1F9F
8CDBAB6907D6CAB6DD7E00A7D636EA20961BAC97D1AAF32C8096003E096855B0
EF4845013B9243A29BD509436CA78C6F8DF4F90DDED960A0D12BFDBFCEA539AD
BD4BF883E09542C9D75DCB8A4AE82DB495B0B918D330979F347A76D73B19995F
4039557D337FB55B8C5922F35B354F6C8E4D861A0B66B3D803C9862C9C507404
5EE039245AEDB521E90F83F15E44F42F0802F8DAD6A9BF6176C364286601FC80
E14926FA518CC035337904132AEAB9785361709CA01AB0F352317294B34B2B20
FF88CFBCC8E89863BFA2D3ABB2A596C9D9DEB261CFE48E403F88652150EEDF05
3390F002B2E4B53446FB39C488E3D0D4EF4AE2AD19019710FDE56FE29B58B00F
0A6D5B26B814BF64F13C35EE903FA2190F460F9438924E1D7158704F305E326D
66CB529B3A4836DB0FE383EF989C975A2F603332FFE0748E0D695327CC8D9AB6
E036E0E6409261C30B80977BCC3CFF8FF8A9BCBB889ABE47B0CE3450783E1EC7
1C030CC18E074E01605908C3FB61B78CF4FDCC8E8CB13EB77CE6FF2BFF91D658
51FB05DEDBB20B0E4C5604AE3CE6D41A4C8D71A1F90120B1F90C83989B892253
31D06ABB335DE237CD0CDC91256A54797CBA5E284B6CEA6FAE01F7BEFD905E5E
139D57E163137B5751A765B46A3AE6F653FF2551988CE792011E0548CFAA6ADC
E32B876763AF6F6FD6864E7B55E341C97FFA711913F8A7FBCC1FDCB4CF2F4D3F
17358EBCED45C975F2EFF3FB9F77A22EEE4C9DDE63360DCB2DA2C1AA4BE44BA9
3F9CE6F27631809DBC45643DF7BEFE247E79AA7937C409986500EC1026ABFDB2
6C30E0A4852A6976A73AD7483C36F1717460327BBC05DE729E23D370B78630D1
7E87C99A5C3A3C0FFE204EA81A8A33D7DE80DF3C0EAB557F4E86DDF8E03AD072
61B1D8E1BA05452A6FCA404D9BB8FE9831A367B0AB31041B474DA9536035E7B5
EC83DEF0AE17DCE958DA19869DD51F53D4A4BFCF7CFA635D6F9F882E6F0215A7
0494E76F258D44FF72EB5A1104E8F73AD2F6F2ED337D854B81DF4083E6A2D679
6B5613D76DA2347118CF009E8A88924C2A42B154DF1CEFC93C89DE0ED8DB26CD
8C2EDE2670F494DC591E79DA26CF8B5FB76613296FB1F39AF2001BBDAAB12CF4
3906B4C304CCF1D066524DCF92FF484CC682C2B197CD797056555F318279C3A3
7AD8EA9CB19724AF57EFC6706157A5E2F51F104F6232F252594510E0E4BC872D
D610F4C99BC3ECB668139331216DF1AA8F6358EB90CE1F0B8267B878B19BA7E6
77A53A674E0B029E9142865CB92A1596D5AB97FA12FD05A04369AA00BDCBC2DD
1AECE1A4AD55A93885C626004B41FD277AAE6DF68161F7443EFA7D9C913AF909
970F4C6292A694AF033B953CE37116A2AF2439E482867EE9EE2BFE1093A738DE
24D3C408DD105CE6D7B8967994F7C5CE49FBF61AF135F8F7799E2FEF29A168CD
B2F16F795FB475204FBC41AB78AF87E4E80F992FDCB770A3DC0501AE1D786ED0
449956A1BDC93876934331C24CFE4392AA860A1ACCA39978BA8AB90A2174F5F4
97539772660D3920E1B57E9E0674CD34C9EDA83B6AF1B06B26207FE5D67E75DB
B170F1D01D512CF6D586DABFCA32404253F0A9985A29D46641A81D5A810469C2
8081D7774B3188423822003AEB638F21661E0BA7AAC765CF8321F9677C85A562
88AB1320B3256EA9FE0C67E5B69A5127DC1B13E4062CD0C9ED10AB36CD370105
8FA04F89E3F836B01393F1E9365077A30D8E46B67400DDE8EB0AF8C815729699
469773FC3F0ABCEF752A5768C9DAA1931421214E69053775A238553AB6620E9C
E875223681E60B7F7B25BEFBECDD4FF799ADF34BFB397AA114515E2133304A57
B422E97EB3FC5314F64BAADDFEF9C0EC719A78915B26E7E3F381435563F650EB
7587F11CA3B14875F6B1D817C1EFA0B89C85B888E8391C74D77CBCC6A990C36B
1062D049E20876B40CB030367818A3CD3E2CC354CDCC9A0FBB8DFCF7135FB2E6
A0BB0C3A441CEB8D5FE849AC7299431DEE27CE28B33AB7E836D6958104D1777F
8010546687CCA23DB48E53376A446136F449A92C07102315D4D0A897521313ED
1A3A8456A70C16EAA50A3E67336DC89FEC56AB54A579EF264377A103939D5EE0
0A90B4F20AE1F2511469C34B5984A04D5AB8A162F18DBE4D613BA1C1C85E994F
80AFE3C18A045148018045C63376CDEEFAC53A55DA67D5980E3A99CC1C981FC5
5C25CD0A685E3AA6F8C0B8FAAE157DB91AAA50A2B5F7D8860624F29B8DD87606
C30F84C33D802DD5B95E090BD7AA4400E090DC1913BBC392D7E5E87717AB14C8
A031737560F3D132BAAC0D6DD88C586322804BC2D8C505973F015F7662571FD1
C89CA0281CD48AD84B9ED8D70D240A4EFC2715DBE98E545B987AB64FA259D81F
3F768326717675A3A2E22F4EEEA22A5201797C6D5EC644318CDA28A2C3CCD123
B0159205FD52E1F9A60A69AF7B40C4F7189FDED20EAC3869E5F53F4955CDA0C3
2B06D72EA2B8CA5F0B557E9A36B8E9BE7EEEF96B5EDCA6F79F53F83234B2BD45
6B3D631B1C9CBF7D283F377177C60B3D65ADD945D31458164043A17B8DAC8409
B4261A4A0EB36E18BD104A8E66F45C3AECC07F4E8FA9F3D2A27334F95AB79BF8
06C18D57EA745116DE0B36C12B6F5411A9805218B5A31731CA0A35D9AB6BF5AD
928726A6EA61E0B69FF0F4FDAB2CF5B222FBF9BDF4F89EE47373AA3944678328
1EB230EACCEFF4243D6B4F8797482DAB78C1A053F2800144A4C76BB839E536EA
2D4DCEB625DC0F754EED8BE3FA53A7AC3ED17C92757CCCCDCBE21A9D733291E3
61235172F117D4B8305B45D7728DBB2D71411954EE599B0EE786D7603D61CABA
AB241062BE3776FA150680F9CB8784FC7A94790FBD2922772EE886254B59D0C7
4A4DF7A2C1C4ADA1DBC51CE27D3FFF7F96BC5FF7382864369536BEB2EBA6DE2C
1C427990F6BC84E92CF718BC6D4CE9EC1F2DDEB8637AB1FD673C5BCE1A090146
171717B39B9A83F2DE0B79CB1B836390828B3EB6DC397AADE45B21F55D1A3583
C3A5BA93A4ACC08CCA4DB80B78AEA6002D80C5513A705E7232938D8423FFC72E
1B96313ADB255D43E2676DD2B00B51D116A328164BDA8475741EC234EE6581DE
06162F006405D6D823DC47DDD14536BB530D132975C0C436F08F9243F1A9AD16
898823B8E2739B4428E62CE0E41C291153B7DA3BFD42DFF5A4DE5BF8B86BFF70
F5BDB495EFF99DE8DB9D85A13BF77DF2C4A97A13E4B525245B82998865D5B387
4138C7E049944CA146DA73A2CC89C048FEC738F2BAB854FA378A1CF611A21EE3
DD3BA1A400EE8C4AD035FFADAD4B90F90DEFBD39D68F1405CC37786A223D6073
85E67FC314037C7E13F3D146873CB848F7B16C9D3247E7CBDCCD90E10600663B
161A15DB54D1C7DBB3B3AD271CB5CA98A92163FD90AF07DE1610FF92104A2AC5
D6DC1A665719DAF2D483EA1B294EA5DBF37C940A8F4B3E4DCC91413C3273DAC2
A3FD2C417E80FDB79FB0CA9553B16FA5E8FF48CC39F018729761E5951C372B31
88E10E45B58D0C1205832E2DEF58B5A84083AE200EF64F87DDD91DC6FFFB0682
4C426A71DFA8CEDBE3D94357D87CABD63E5D229BA73D9CB7FF02A992E251526E
FC607364D550859170B4CA391D713F3A00A3687773BD7B1CA1728D0742EC26BF
8D76BFC6862F98FE30F1532A19CAB23BD0E5309AFDBC2590834913958D22575E
85FA48386219FFB6FA3628B1EB9E04DAEA3E3868C24AE38D57B03964580E07F5
A3388A5E1B0E2AC09AFDED0087D8C5096B04A55FF7BBEBFB49F2ACF344FAC82E
17CE6C1BAFD4CBBA754F01DDAC5283736033C966C4275B0FC609CBE047D28232
BA38B6D297D934C7F01C4F6220BE7A3C7AE3EA4489BCA0D5FF1B27AA5D285B17
1DAA6BE705635A0E9476218BD48D6718B2933F614075277640BA43BFD8106F5E
EEA1061ED3A742CA7070AAE118E1A604FF34652FD8851E874F298093622136DD
7EBF6CDF197BE9EA7D2F6AF22A7215A8631DE25F15D7FAD5621149AE1DF312F0
32650D897629C8CF3E59435FDBF42A12E9D11C339C4CD6F86E7AA14503E3814A
8DB062540FFBA124C928C279AD7F1688ACA643F039A2A643606966EA4A9EF293
72D11F819EB715D722BCF0F522DA43DD0B0CC2FF4E0CCBE6DA02052F5B092CA3
0B03EA79A82840904F3042F45229D075C830466506987123B0B1C9927611FF0C
447C7CD0CF1764834C304BFE07F3D30A5E8B1797080B1318EA87C90C1F13FCD5
CD7DB0C28043F8ADD3A685337375A6B689E3B9DC69701188B2E394CE8CD75665
A56833B6C0EA6507588A160359C3ADD190B1BB8963D1E35B3319B12975F802BA
FC226C529380211A87D6967857089D9463AF2DAB2C345007A2F2486E90C3960B
05065F0AF7CF02CBDA5CA629AA7D14E072C7DCBEBD4A57187E9187C20800C7FF
AFF7FBEC56BA55F373676C962FF9D23E64ADB28E7EC5FEC8E1058B4C309787D9
EA040F983C62752BDB61AD253145BAAE473C50BAE18D8C027A9DF35693027223
02D5CAB8FB95AB37945411F29AC949A18DDE49E285631D5B466A100E8185F989
6D3E3F82398C6E91F2427F4985B2507C3129A1DD7AF1AD9F7F211F7CE36C03DB
4F9975DBD6EB1947E4B37604F5D71DC5264B9C22FDB8FCE562255754986D04B8
739513ADA69165F4E9CE116E49BA330185E937406F57C0BF96A28D7B6B302539
CF2CC73F89825EE37ED9A2A722F3904AB0A743A6EF9200DFA3A15BB75463CCB6
54D00C69A0E029D176CAABB11983C1F1A1CFEEBDF8DEC5F98CAAED2BF6A0F6D1
FB10C1B8C99C1DC9AA89054E3DF8C2466998E412F110511500D4AF138A5188DD
4A8020DDAFC83A46C8A4F848B69EDEB484A8B9100A311AC86A95FDCF27439CA2
D5D0F254DE4B1192B82AEC543525CF981932D28511B22BFFED4116FF61AD9D07
CD3D23F876BA761DB7D25CC3479448ADC116E39016A60241DCD1A9C24641F7C6
34D0F3FF194812AA68460238B51B1881339B79FD895CA9CFE09DD7D8B78B644D
BFC9DB575C064E70419E33CA4C8E8793C78FFB61770A227C4BD344BCE48D1DC6
F63C5D34A5A78AEA5E13421302F20DC077523EAB11CB4D8740C1466779C9DFF7
40246899C07C9A8B4CA0C8A80EC33365BDB4B931B4018CE62835DC3C5A2C5527
F11E562E656FBD0DFC9849447EB9F4F3A8D6B7BA71B68CCD5C81351CC5792E55
9715DE578F5C654D83FBD3811736561CA378624DD5D9B363622222817E288DC8
49B83BE42BD2B82FB430AAD53669DBAA3085E207C7E155D30B2B91D0842654F7
ECFF045C728D9B9DFE351D462BDEED9A6ECC90DFB8DF86B07EDD3D9728DA6FE0
BED4DA2025DE5A00B821656E1FC78BCE82249F403D3E29AF9112D8DE2BC673D4
408B2595AD1EC208BB8096229153FA236AD76A308E24BDB3A523F0E120A3D181
D3EBF351429BEDB2EDD94F75D554FDE013156AAF797870A57D34AB1C15BA93D3
5C95FAA63441566407027D78814CE065F71813D9273B9806EBA6A78A5F045C34
0345CA9D9E37F77AFD51B4CACCFF28EF02F1228239B3097639D7ADA83A05DD35
1148327B9C5C56DC152B2CD12041A9C91B06CBC8855EAF64B4DD8886EC3566D0
BAA7606817016C603E97FCE371714DEFFF984A79537687A2825F6086C9982CC9
6DA68B7AB8B3011DB672F288CC32C5CB60BA13217E70D72E2AD7C10DC5822506
409352C1CAE054F702B6AFF792A09F4B0989CE6E5EDA03AE1502AC19C8EBAF1F
8217E2A1CDD7A05C18913B0E5C96F7521083324223D93A69FB240C1D23BD5014
CA747FB3FC969BB477781DFF31DE8F9A09DB95A2091B3CB1D9989AC0A999E3A3
7842B12AE4F6230FFA095AE09242C7A7E4BF69C0BAD2F9160D879B8555FBE1EA
1C389CD8E8288208D658E501113D75C3ACBCC3F2F2076910C021D784B2E91333
26F6C50FA4CD1C69FDE9C671553E3CADA498F6DE7DEFC9062E07B5389AD62AEA
B70D53F04C160CA0742BF5A9CDB2A986B430B9C8D18F70EBEF7BCD4CEB0E737C
A09290F396394A85771303C76B3183EA3CF488491883C41505B01A5F1D39A4B7
D3C3860FBB59E464572005E6750DB4D9752537C70BF2CD6418FB5C417DBB0270
AC4E1D15BC2EAE0007B491C445CAF52E3D387116FE2A879AF699281862430E69
11AE448B2EE94742FB6B0704843DCC89FCACD7DF80D4417FF2A3A6D303988EDF
4BD3CBA2264480AAF27470D6F7BCEEA4DD32508109D06CBFFEFF27A2463ED14F
A3CB19F0BCEC0680F4F5D25B2F6C51B37E7BAE24CFFB9022B7709064CCFAEE4D
ED1FFC7AD85D2C0ACBD0B2BADF3F07BC7C849FD96426F0A69E4EBF4D0A9E729E
C519E53B35400F979AE4F36BAD0DC251B3D52B1ACD82611C4065C33347BCC9D8
5FE54420391337AF16924E5793B2B2DA62D4260E35A85FD9CFE4F3095401BB76
6D25FE347711D9B03AC39B8E9BB9492991B83C9866CFBE76842064821F9DDF51
D257479CF1E78F08D3AD8A722AC66F06630A0539E11E144D2DF24050B2727E86
82A7A6AE2862D1E072054E9B3479968B29C30315724954E3AB372ABA1CBDF5B6
6A23EE910C8F2E59734E227499B13C8B7071618C329E2087B723FCC23C92C3B6
C46E10B00089D4C18F187D269DE53B1EA107CB2406A6F78768C1B031096C74F1
9A5D10B268FA3E3C417AF3319D46BC5BE8D7B4FD6900FE36F417E3CDF2C58D0A
31BE8CC2B3E69EBCAEDB8A304BDAF711602CC4168556990C81BF9F0F7598DF16
EF73439033DFBFD3D7D4C12D466AF7242EF0A33A6B2CBFA58F85D4A6CF81FAA7
03894267AA8F75A12E003A06A067FD2DB6E04557AB82DD53C240E5231F6946CA
07E0C7008DBE697AD5B65855D450EF81D8107CC39F1EB8AE5DBFB374BF56D6E2
B1F86EB97FD7E5E8C686EFD87277F1987AC1FC273BED009925EB057C0ED7B52C
DFE9AA5A3419905F5F23BB3F3A423656413323BC8250901DA94CCE617B677BA9
1036BEBCBEF2BD9FB2EF2C07092D266E6ED7C7FB9EE291754D2FB99A59C44C67
7639DF5A90B14D1B2DD309FD40F7277B389E5700D7589E9E2B66330337A6C051
6A3588935C6CD3F4517825884CDE04C758A794DB3CDD7550BFF74D0DBCF91401
168B479B4B19F3D15F6C72B4B656B47FC678F5B9EF2C9AC1324709A2D70A15BF
5BAD740848C1F37CDBF0E137A018C8FF00E1D8551809045C1E2F91071E79F2D8
D755C72FF509B0673F2BC48917ABDAC58B2A7BA9A74461FE02300991A93FF547
67ADD4D2BD5B87E8FE31C8A721C2D46A63676F3E8F31886A66AB81A5542BF39B
108B34C89CA9D526ACD28063642C9FA41C59CB7682F4856EB9FB9CF7E11A6D94
41269C06871C045C916110C896E4E01F03086F98D7E8ADEB991F73F7F2766CD8
CE760CE339721777114AA3839A9A19DD999BC6800838D5A1FA3ADF86C8604925
B594499963294AFEFF805010CFA7EDD27E350BEBAACA4ACE065E90607B06EE56
F3F0AE235DED76E9BE98DE48DCEA1C2CBCB49EFE683202F168C2AC4676920FAF
CE2E0203EF31BB68BD169DB491396CE835014AB51C97FBFD0C5C1F4CAFC0F4AE
A9C52048F7185A60607322E8B53A5CAD4A0DADC35ACA060A35C57A4F765901F6
7D187DE53EB8691D07F9258C46BCEA540C0ED723692E4A0AA37F557B66F376C1
0A2630E0DB3FC0EB3BF296E9978FC669F7D893F2DEB2B296EC7AE68E37378A34
0BA238145C1C1440114B50F13C42BF1CBB1B4E86737B864A8E21D3CF5D7C8D22
8C7B200A1032EF435A47D3194ED7572FD11C006830C256CEA894223CA7A59168
9442A170356EB26DC5DDA3640951386B21385ABBE5A01F18333D323E5375E2A7
AEE96706C99199A7A112483430016EE5D39814A60AB699C339AE5B6CEB2B2A3C
2AC455432E511FF9D5DF0E905491240EC4FA9610EB20BF50F8106000D658ABA3
6E3FCD3836CB76E3AECFDAB434EFE21C16DDAAB14E211DBA0A639A3BCADAAF86
D71905834E5F7379B4BE76C25D6D573A316679E60CB6B8085326DF936E4C9643
F5A7760A992645607D4607E53B728C33C6CCB830CBF25CA7E7267CD0CD95262A
A204BCB925E6352C8C9FF511E8DE1A26C4F69763C3388EA2E7BE9AC83C488809
283D6E9B1EE996B04802F42073457604C174C7B586CD3F61FF6060C4189D92D9
E885487F3EF79D44D3457F843C033F00F58E1F9905E8A450C8D0113D30B8DDA5
AFFBC42841DBC3DF880BDEEA6D66C2F8D646F9A4FB7DBE75260BC60735F2F6FC
D39F3D895840A63D3ED662300C11B0D3D76ED05367E3F5818875FAE65716FFD8
092F13CA0AE8F30620E41815925EB481963E5A76EA347A92C15E8359C35ECE89
8AB880BC67EA043CC8EC837373
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.0: CMBX10 003.002
%%Title: CMBX10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMBX10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMBX10 known{/CMBX10 findfont dup/UniqueID known{dup
/UniqueID get 5000768 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMBX10 def
/FontBBox {-56 -250 1164 750 }readonly def
/UniqueID 5000768 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMBX10.) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 54 /six put
dup 55 /seven put
dup 78 /N put
dup 82 /R put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 118 /v put
dup 119 /w put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2D43B233BABF23DF8DB
B6C2BD2F04672F9A3B7FE430263E962F16A948319C51B8ADE6E8A80D3D88023A
6DEA4D271676C2C8615C4A0EA7DC8F6601610F398673A4D4B905F49EA868FEF6
39BE073001A36DEA6C08ED51452F062B971740019692E221F4455EDE46AF24B8
407A98B791F6AD525C72C09776247E194043281D04FE1CD1D8AD8DCEEC3045B4
F95B3B41CD3300768D8A049815348BD7AC1004F5500817E3A267D694AE108BAF
285B288FC5F28A03E9D34FE5D9B2F9A9BB26ADE66B1CF8EB5BE606E83D213C33
DE083C20D636EF780E761944FCE3B8A950B1E6E7568F33B557C6D59E0CEAF185
53E609A4F58AC4D5269116F958C4D115C44B5A6DABAB79D3BB6E60BDFCECE108
74CFBE258779F32C80CD7D9A7CEBA50A0966BD9961F71560119668C4A0C30A5D
ED91ACB30940502B24F33906D6E0F16F81DA87EB6D7FC8B7853BE388C40D75C2
2CA8F94713AAA1561F5321CE97997CB4AF0E37F44E25B0F73CF4986422B1CD89
8F861CA623004ADB1C28268D7F8C484AA10C9519B6AEADC95AFAA3304D60E85D
718B2F67D2B734095E5A92C90785252C98067DC05137BE735220BBCB7C341D61
C4B98BFB1EAF883D38D7A93195A059EF82B42027F23B6CD633231D704B891A9B
03D11A646F13898F20321D7BC150C63FD6DC6BF9CAFD8DA759E95384B729A0B2
767B9F3E55C682F7A248BC1184F7D294CFFAE0B246DFCC8F215625DDD4F49F09
FA8D41CBF4A06152FEB152C61539ADF7E70A4D23AF8267D25CE3B12D39D62377
547E2528D18DC4134FA3BE0437EE0B3509223D71F06D44C6227D62BD01AC0A2A
3EDA975E894371C07CA1027B102549A7D552FFD25ED2DCC68E29E71BBAB43C62
57B0BFC6A953ABC2EF703F35D112F6B5460018CDCEAD17F149DBE5B52C2B9E10
9818EA6D97C8AC884F6841C9B600A7D868F59C1D80E98DE0741D06D69858EC84
1B33C6C9938B7E8A6FF6C12AD456EECBD3EBAF0D7331536B9F6422019FAFFFA4
822E79D6D89D6366DA636CB708894FEF904F366E295F1CB808E78E883913C4FB
1631248ED6A7CF1095C0C61C4F05E4B9DFC47533A5FD24540AD71A0E2907B98B
28085EB88ABFC3478C9644594C7DC4244ED5A7C1CA8D960B65497D56D174645A
B88F12C2CF0A807DA314017984CF3C4FB7F47392A651EB9CFA961B28E2989893
9FC4D97171BD5338673F5D1CE2C3C08D48A1B77769F01D5058236C655FFD864B
80E28F900191D4EB349AA5E400A7B0A0FCA0F3E79D7A7C69775BF754329397B7
D18B20B2683CBC4A19729BA878B3C17EBA0A7E9EE297A5B67E915CAD92C8F356
582B8299DE6A58E73408F525F7EA895C48A8F0D626A06A96A50348DFBE479D89
4272576FBB0CD332193D28A8F11503BAE98F8E1D73CF5BCADF23DCD4E6586ABB
323568F5A34E359661074D50CD8D9DF27191FCE24F10225A5D721EFDE2547E1D
CA998077D2340B1A4ADFFF570AA677CDF3305D5E3A394BB1626EB35074D4EEAC
2F037CA2EA389F7683FD17A8E07C12B4CB3BA8C249C9B12D297C618009F76717
0EBF5F2DD39A6BDA10A2E5A811D4E190660F5FDDBA29201B6F8042620397AB2C
E59267A7247B0463891831A6F40582BC3F614E5167B646A8F53D8A31717DD9A1
9034034E705BA7884F0E0738307AF69D3517147C282747F2788462FDC4336A4F
9CD222908401A25F0A1F7B13B8DAE622DC965AD0BE62497420B70C04AF432237
E0FDD043456187658ED93B0F9822A3998511DF05E59CC85B7B9992CA0CE3B814
9723BAE70D2631F32B4BF93511F67179FFAD2075E1591CA5907A4C67701B56CF
A5E5B02EB4A842BA1F18D6864E5677359C2FB4AF5BCBABAFB053F230CC129B45
8D15413F736EB07C571521C7DE2A13F2AC1C133D491B0A607197BE9AA1231D96
BED7968788246B2E4D2BD330F802810F5BDA3760FEA5210CFC6F54748FB1D921
5CC3624BBA5B8962AA7D94159651589540B17CF7A785F297264F9C1006D36928
6E2756D3B623A6087E4B106FBA76255903C624C07E18A1AF4E185A533C640711
86BB477A906ADD36EB6C8F4A12BC2F01B2B98412E4E105977640930CD998D990
0254A1E5E9843B7A8ADE0AF6D5871E6D3D666465AE69813A2E26333213FF6713
6F08D55A90C079A56E1B9AC655F720FC22B5AD8550FFF26DA7B0C5A0B60DDB05
64E8FAF684F3A455BA9BC9278043D79537D201D520E38750335A4C8FEA887377
879331B68DAD6B253F4FF9981D0F9B9550ED5179B15EEEB00E560A3DB6E5973B
63403E4E2F40A3D0B937246E9652000B917B1369741E0F913C14C2D2D6D1FCBE
2CEC4422177C58523715BD070002EC2E13D383A1DC8C84228862B6C5D3B65667
9FA97E175239BB7FE7E37E14B96DD7960A8AD49DF428CFC13B5D3CC22E245317
47B5244DA97F1DF954CED2D552477237CB23D037C0DE728E26C82738954EEA1F
F34FE497DA005AF03746DD2ACF77F6E6F2C224862A1D18AF6F7A5DAF34564387
9E01DBFF49F8621C058C04C2B3F4F3033FF3E8A977B2CD6B2A3CA4A6C569B19F
C5AC457AE9AF334DA66A730960C7565E93A2D373C0E3DE14646FFDA05DF4C6EB
6D4CA8ACCA3C3115764F77B842581760BFB9E5C0EBE55308B0577A8F4D968CE2
BA3361D79378D451DD150C34D7E901397AC63B33BD7DB13C50D678F5DE999238
4B4EA15BD449C46F262D931478F5685CDEEC4C4201FC3EFA607AFB8F27AF6751
125DE42D2FE2D31DE769B7E7FD8CC8C5D91343B537139A822A5BC4160BB5314E
37501F65B4FC35475FE9E03E34CBF6795AE86CE409500BD0799DE39FA69978B6
EC74D2197C03632D3F59B85F404DB31240968FA75059B2581B101E028CDECC2E
7E5E25DFA106E9B8ADB81E82BE9ED3BAA9D03EEB22B7B67AB1262DF6AF5F5EFD
A5627EFEB84F3A5F92EF2557EDA2843D7D18C592635623CEAB14CC3620F33986
410D6DBAEF9F86E4E6682054540E2B01D8FF2161F10E66851A188BC15BD6666E
8D3F21709F196A31EE676D28A2D12639CC2E7020A52910F052E61A0710DF09B0
064171D05611451BD24FAD64716F141E1C41D3218A8115A3D73CA041D02B46D9
28C3D07DF0FB668E8E91409C8D0A26A65CD737C075E026AC0A974C9BE658199B
3B9D82ED95E4646977D8F60717DA4C68767DBD7E8320D5AA1D5DEB2E6B009759
8282F27D64F1F904830AAB501CDA4D9233FC2F12F77F0FBCC46E6B729C71F6D5
E6F3EA02EC35D1048394F4EF2177FC5EB726DE5EF2DE7997166B8BE5B5105D08
EAAC3481FC612665CA112D3F889A0E5B7843EFFCEFACA24A01B6AC2B7DDE02F4
A9295AA2409A3756BAAB44608DACBB56840060037869455BEBA46F10AFC68DD0
0563843DF111C6D34911CF13AA6023E5E899060B5EC60D0F78FDEF3E981151A9
24903EB13ED1A67EA1977449716D1A5A7EDE1A2E9465C9C2B20A58AF02D9F373
73E627CBF296B3A6A4670C39F3B5EA30D76F0362C81020A1777F0ADDBC6B52F7
213FEE1718214087837049CF2AF00407639657428B9E8B532F68B631611A3501
3D9DCA38090E227BD0D6D0FB4130EE866DB6B195C873AFD18DDB3B1E40F740C6
B3B375ADCBBF628A07A5FACED539FEDA3379D3B60216C2EA6629BE2F65199D82
FE3AE627D7C67270F3497AE75F7A9514968B5950E2D63C38DA240AF4E6CAE88E
E25167D179108679876E7C80C85FE1D2BCC2EC9B88BE76A8F5736E8E6B3A9CF9
42E58A4ECB7914865E67C1468CF66D658206830B9380FE346DC2DC4BB56A92CE
4B5E4EA9036C177869315A2D9E6CFE97E3BFD7CBE0747D40CE5E8A3A0988576B
8AD2B1E4314C0D8A0CBCA08844A49F7E054D31BA7543730C0A7390BC4A288D10
CE29E389A4791305D3AC1BB6F77C805F1032787306F78FF76A20A9E629899F6D
13356768D33D7B9E294E8CD50CBFB9CA02A193922BD9B4372C912D1689B6644D
52CAA30F7421E8114D077288119AD9514EF21E5B9989CCE2ABA0C12549FDF493
FFB39736AC9EB72DAF45E4EA6057527FA9F5AA0A1A3F03C12F7482E465C766D3
760DA7714D56C91BDAED507A5572BEB51A895F8DD3BD5AAB042650154FC7E4E5
5EEA6194DF73AC5EE2CBD4EE26E29B1D2D0C458B4850BFE842DDF2EBB4E2A25D
C6A11CA2D8F346E2B736DF88A3D57BC0380B52396A6C039212699F5D3342EB58
0C3DD5D01D5078479BD9FD10C07925556C0AB0F03606F33796BA72074549EDA6
E33644F62CA35207D7421D2727AD8419AD1772789D33405FCDDC9286BC34C974
A52297F5BBD2E541E8BB473F733AE5097BBC9D5FACF18DE4173B4711E28B23ED
16E0A6746A60F6FF903026A3900169EDA87D98396E762C2EC963D89197B8CD0C
25244806BE7CBF46BE60A8F9171731EADFC969C28679B025371E5572E52A0EF8
B3FD9B4638D03E20BFDEC9345E70B8166D38846DCA68E0D0B4B53629C7E7620B
45E0A610BCD07FEF8814CF915CFB11119F42407D1C6DC1E6353451D40A382C2E
C74DF2A4889ED5A3495C3E973565F7178CA190D22C9693C10EB12C1E7A8679CE
4AFECFC964CC98111BA4ED2BA9B10292A71D5B11870EB08EB483922CE8628A06
05E7CF6DF93E112B60EF888AA8DB52994EC33DC7277D7B7A4F913AD30257261A
D6EE80476A9A8D316D190BE6CE0046CBBCED365AB305495284FA921BE0638E00
63DB2AA4C5F163340BCCD1061B469504DEE350B82FBE1689C1B65D095405614B
35997D6F0DACA7190D64ABA351705B17B23FE2EE5996FCD607F49F54392463EC
DD5B944A4B82FA2BE3E75E2946D483060DF99277340B0AB65A2042AD088E2B75
BBDAB869D1940F64B50D25078519D18748AD64AC5615EFAAF4F3105B0111AD40
70EE173ABE6A4ACE486B4E5999158A4377FDA6922FAA6E9305F48570D14BC81F
BFF4C663E1EA9D1E050534F9315A663C4C5DA52CB02EA6408AA473C32CB0CD71
169BB43C0508A842F400240F0063243B4C459A1FCB3312C41C32ED0EE87F591A
BCB6D5D3830AE4645CB4D40336DB4AB6540B52E70E1EA415CC6D886827EBC5B3
EC35CC5C136243B0C20B3C603B648B132B99D05F9B48263ACFA59A856BE74441
FECF5C6D1FE9D1F4F9942F460961901E16017144C37E83C6822177B2A6C47ECC
6C47A1104460665E5BCFCF08874008302750EB991CD98D0D8D22B921F90B99B9
05EE7C39F2BC2A7798157503743C9F2F267BDBE2E8A4CDA7317F81DBF8962E1C
EC02822CC7F770FD4D08D335904375BF0C6DAA0510771627ECB9EE69C0F47D30
69A87052989DF80D9F4F19F75B070C3689AB3BE0966453F9D56CED6C1745B50D
813AE6D7E44B73423AB3778ABE4CD2C4DF40E14C5A426043F7057E2DFA2DAA70
EA6723F1C7967FECB1E7C1C0CA283334163FBE31C32254490170C3513580A552
19A5DD75E6C4ADCB12D33517A03318A6BBC7E4214266E125140D8C40F78A0340
1F95D9FBEC4DCC55B71E89375AA94B0D55646F6C069561480407D0A3AC127024
D7D1E9ED6B599A2A8766B8792F46D35508B66F302D289405B101A3C6BADA680D
8C56E2A00B766A4CB155446F862FCF17537A2BE85418E20CD77C4F1F69F70BC6
17BB5DA8FAA876D0E8BABE273A19C04A8697B3E3CF4725E2C77C8761A9243F24
96F8AE96399996001A57FD75106745AB4646FB9C6421F1D4EBF3BE533BD11AE8
14BFBD6D308376B26E08E4ADA490DDCCA94BE8240403D5EB0FE3549061DFB668
4105B4FE77189546619B6BCF3F9723E278E98D50A17DB8A4C46744FA21760635
5B332689316BD17C966D466AE737FE3ED7ABC443ADD88D4823A10BC9747ABDEE
027515AC353A420523F85298029475D8BFD83A2CD00C02CA07974BAA581D2215
A850E6E4C0A5E17E0EDF91C63FAC18C70093F40FEEAF0350B403E2806F4EAE96
BF616A805616EE55C4657418C26CAF54187A6684821B86A76F15088AC4D5B551
66C3CA8DC61E9810858D1204F899C7E3A1754F483134609F6EEE6364B1CC04FD
92C86EF194FA3249601AD722D75D1D395CD15A93C768EC60A486AE885683364F
93DA00A865C1035F913FDA69E7D9A0422880FB81EC23C00427F07A5EA3CCB613
83C859958AC53FAEA26A6BB39ABA068863CCE3D447720BC31A5136E08EE58963
093AF587A72112D55853A1048A2B1695DB2D7F13CC924F2F0902071260C33ED6
30893A04577C0ACF0681C0FEC23E5404F844A83BB5A2F8DE1F0792196139993C
1152094BC36A6AE5BAB4B8281E506F485F0BAEEBBE71E174B7CED1E52A8242F9
DBDF3E0FBA296538D964EB5B7A4E23B1BB0F59872C9D4FE8498203E3AC08B71E
D2B965AA6CD5D20DA6C83FDC86F4A5D68A58A72C5BB9BFE9BC755C56B24025CE
6F24443D3CF32CD711D3D94C7C1DC275DDAE3341D840090F97CB6CAEF274C94F
9F3BD3AAB3F98BA8A7B5CE5E48D1462DAAB37BEB1C10B410E8D33FA42D898183
BD4F807112D78AA94509E33C179BF7C9E82E55AA7D09E128A0DA06A330CF4AF8
5DC861498CE029CE8C1BD15C923A708F2E7AF98E4F7B34212A0CB417553C86EB
6DD46B0466F1A21D29FC5111226794ECFCA5DD4240C0B8D106CCD7EA6F03E133
BB7733F055D6FFA04EF5C6F872B4FDA3E42F0F036C4825543D75682ACF71B548
DED160ACD05625274799D0AE201305DA526E01A3D2A719B1B15C05CC09467F3A
5627860C0F36C503EE392E1786620F3F2287AFE56634E03566B9B1F537FD92A2
913166228791871A8F8CBA1A1DA634E8224058052A10FE1E67CBD3FD21A6C07E
243CBF58BDC78577847664EEA5225EB8D6679AB17C563848A9D4D58995EA3609
51C1443B752A070D9872FE1643F0677019235AC25DC2B29169D38308F2170A1A
A0FDCC59E6602197D2815B914041FFC7106DAAAF30CD97400C6D0826A40385A4
C8520119A065CF32CF2FC5FBD8DFD29222528A7F96FDA533145846B3428F8239
E50277C366418D713F84B12A5FD4F904DC13DB1844A391FDAEB97643A6FD2945
942FD4FC5A4A35E184F23304B8B4D93D0C37EFCC4E106D4FCD0DA3E5D2117589
3FFC2BD1D121026562C55C455C3585050B9460891B006F62D9D9B66695C3D348
A467C14C0256FA9621CB056E7CD389505194FF463BCC4010897F9A690EA87D9D
BB3ED4C174FBADB8A4744C6E4A44D773967FD703EC37672F9993DC48BCC8A060
6CEFE8E6B8F10886E15BA0466AF410B90DF0020FAB88BE493606B6A734EA85BB
926950EB10D2F2CFDBD182B0F133809612CCF6ACCAD049C8005A42FAF78368B9
E7684F98DE421BE0A3BC0FAEE024A7BE67E15C8394F17FE84DFD8156C2A3E94D
08259E15CC657E8CE3088395BF6B5F825764E141AE15EBD186DC049261623D26
8636705E06C6E4A1F8ACAEA59F91B042DF5DB9C2AB986A784384706A43E5F18E
42C29CC1CA86D4F247B3BBBC89F3633EE074DCA4AC15B1E33EE4822812A62E88
C32B0AA57249980EE17AFC1346074800FA529445D18649A0475246A25CF325A0
BDA06AAF392FD455218B13D9ED577D51A9500B9FB7860716A8E2FB3A8C4BE3B3
6656C6A5653AEF00184020ACA0BCCBF48BE3BF91E11C8658686C89848E714E6D
DC158DCD1C1BC03B83FF94C60B1DC71CE8A86B46DBE661C9F8F4677F8A2C7CF1
E41A91EBDA2304735147BE66CDFF2673F09D408297302124C127F0B35690CAE9
CE1679120CC4D582FB69550AD34A047DDFCD9D411724554CCED753DB52D6AA7B
22B0C55EB698ADDBB0F8ED15C971AEF113C74B9E25DA29199237B98DA4023665
C2A63A837E4CAB38F8DF37DBAB5DC80C0C3FA72C8A70DC76B5B36B2EEADDCE74
23CF794B66E4DD3B35BF99893789063BF7B01D5F186B2FDE518B2CF2EDE51F81
38244BC64548AC3433A80B86D6A0CA26D77F403C06D65B7394BF1FC7D06D37A5
E70ACD844E3367DE4DB71312CBB85ADD21D5A1F99BB8427F252D90ABB66D7154
EA5AF4A165DF6415A0880AE784071E6B3E2101F0B663DE14DB1ABF8B7CE0E6D9
D24F9CDD9F80028D37C9CB4067A28D41E879AEFECDA71F649EB3C250BFF809D8
1E427E3BF24E85C75F080D93E0314883988B3A4A2B72A1B4A3D2189AB6ECFFBB
C58151AF05AE335200711ED945E18B4BBCE24A8A162BD9BB26137253BA8B5819
41E759A7CA7CBA129BAAD438E87189F2F6AE7C86F4EA099DEB23705A500332A7
4F141D8778EAF3910486B2EA25AAD16B60DD804D0E5BAB0FEBB77BC95EDED08D
B8941E040D99E8F44E70FF842306ACCF65C0AC9673859DB9C3A724238CB8CE62
255BAF0145692EE3B52643A0DE3E667AD03EEF6C753F57E34AECAB0CFEC7B07A
150D7151E57BB3A026D50C7A88DF5F480147D87DFEFE463F76122EEB5128796E
46CB0AF4B537987C2ED552B37D83F393222659DB735F2A293159AD84AF082B95
6F1454471FC36D805485D619D58FC53FBD6E3F72660ABA559B91ECDEFB267268
86A75650C3919962B0139409A29F5E3980688DEBC02A6E020E7E06215F9DEDE8
C7FA94AF9790CEC96C78F2802ACEC5EB94088330DCAED0AA9A795BEB1866151A
6C9752E7356EEA8F33BFFC8896960D4B33C7E1422C7900BA6D5EEC7B38164FBA
65BB7BAEA2B7086DC2E4817858935BE5A9105C3164B47223A893DC58A24D65F0
74431AAA0DCFC1B35B907F5C256B9AE75E6819294171B732FE47125A978188BE
51817493916FF8631AC814FEFE5493FBEA5FB1D26743416B6D20BA817AB49BBB
7CB2DE62566DC837A28FDE9E1FE0C6E244C61B976A63C1587C09CFB052316D4D
96E57440D0CC6DB88EAD8321871A09D6ECAED6F3418A66D35D6940A3FB567B6E
87D240911DF09A7B362D7CBEB0CA28A1E598ED72BD9DF99EED9AABA70EBC005B
7E807A854FD70F26B8BEE58EBE61914102AD4E5AC0DEF18BEF1136AFB92CA062
4592BEBF74CDD68340D52E137B1DB6FF17B72E787BAB2D5F893EE00D41CB48E3
5CE9C08D0BDC357F223A52A656B1A57D8BDB3D7B62537DA14915258D2BB18484
6B76AB69AC3CF11F513BEF0C35FD178086DDCDCF48BCFE5AB771064CB45C5F5D
156798E31BC481B1A2F4C3B79341CD06E9832732777E61AE518DA0BDB2F0D0BC
F9962F00A2DC6EF970E033455270A9347B262FC98D69EC57145A250D2D670BC2
082DDB9FE2F5F22021474C1210A6B364577C4E0064CF5301884443B63C5C2F00
CAA693F42167A369A11ED316CF1AC2294E853433340952C7F29D279C540B3ED1
2733318BC3CBC4698763770EDBD05738C143355AED03337DEDA21A5BB90DAB18
D604CB416A9F6A3A2FE7FA1826E5DAC5C0D5A7CB777899F6A60AD62AEA3CFD66
3916700C95E0023599AD8BF5E3089B3EE1860D5F11A241C4889FC8C0F634CABA
BB7F9D10EA85E741412DF41F4C59FEB8AEF11EC7D1484CC80FEC05242DBFF4BC
8B67AEFD8E69441FE11F56E67869EB6BF2056A346F656EFA39C8C999B501F12F
227A344261D2F88276636246AA9E59EE735733630068034B79550C0806D9E063
16B40E4CDDF53E383E30D754EDB8DC955AAC5A311BEF4F08CA3293FA4F4C6B82
8C3B6B1ED383716C4AECEC39635829F70710DF9C94DDE36C5AD7B56F4A5D0CF8
FE219670A817942121C4A89E13099A6C9DEED55254798FDBAF4127D852BFB3F6
4C6471A158A57AD814B09AA8D57F86061138ECAF0AC230DCB02818AF1A8AF407
C944FE8778F29F3B34EB2CE44F215FB3C3923AEA99C03DDDAB879CD224BD2B3B
D4873BECC873A9C71796A3489E2292913C1B263584080805CE4CA9BA6A5DACD3
9B76A9C5EB6A15CDE8D5992255C82749370F2CDA253ECA6BC0754BAD59DF4558
D2D608FAF16668DAEAC1B737D67A799855334DAC37606A8FC3608871D70BAA19
76607765CB58125B51B48416197391AA11229996630923CD601E96E7A2B8F93B
E061199A2BC9581B57CF886E7239B8EB7AEC1C33CC652BD45316EA9E34A9EA03
A6C950682BD7E72A81DC4DDC629BC541D7616E6DFEE98F0C2A1BECD6F22EAE4D
2ED483E599BF3984F00B218F322F3460D62BA3D19BB340C9D6B45614ABFCF417
F6FD17A704C4668F6F81ACE0DECE4954AD90697977174C7F99C2B33AE9D13F6A
C8D0CD7EE93078D4151B332C718B1733910ECEDC99EE28143FF17F160331E47C
168E3FF7CC9C2E20A7BB9F68438BC8CCFABDDA40CDB4E96FF4E8DAB9DECBEAC3
69D71E76447BC024B5BE2973857B15464E7DC2E8F4F4B83CFF8B1EA27CF25FC1
0798F3BC025C012E85B2B1C1D5159025883E3130C655C26BA91937FA1C7D5A6E
4647A70CB32D9A9EA27965782C8861B304696DDC7CC881A1AB590B7E461DEF56
26109FB09BABE1DE6A9F210B590563EA94F930201974A414023090C526CA1A8F
11678A38187A007F8D8AA40FD3BD02449966B0BFB1278582B426BD9277EBCDFD
63EE57255F5CAA6076F62B1EB36EFDF95BD94BD4FE70E93D602738936B2B266C
75B43B4687F5989022DC463B75374F7D72FD4AB3216DF6AC30A36A1D62782953
55E2CF2F759B1EC5103B50EFC2D4DEDDEA8E5C0272C7D47E2D3B4A92B34FFB62
73EF4F8128FCB12A4F2C8D137FC56A07455FC54C21C91014C9D31B5743A9D4FD
DEE71CC66C0FAD7DFCB05E178555E2314470BD7E64EC739E36EB3FD38729F6E8
7567247A57B89115DB90A7CE70A6CFB6830C394E62423A0D22D51EF24DCBE949
DE5AC71DA2E10B009E48968EC7DFD95CF33E1E1F3A5149AB7BDEC1321FE988D5
3607951ED8939D8CC0435D77F9EE2128EBC9BB0E5EA00FDD88DA1C760C9A5583
FF4FF5A39A5C051A02B7D645F695E2A590BF99760E2DC56C005340755BCEA44D
F17FA6ADC8838ED307E93373736FF863289170B11EEC8275C289E2F028CFD538
689CC36A509426B2D5C6C3116A761F819F0DFA28014C284C067C9D55E4970441
E9531702F776257DA7A782372DAF8AF9398FE316BDD98D4069078C49C352E0DD
58887C12CBD7ECE997255D3A127293B3E5E8951F436B89F6F609CDBE172352F0
EAB0EAEDD721C685D48C3346A37667A67D1E985E6F3CE8B6695BD7267CFA8561
B6B373AFC995ABED0645108A0AAF4F993FAC2B9F23CA0374CA817580FBCAE685
C47F14276422D86760E5581DEF969B0B46371E68006E3CD2636548FC5BCDF2E5
F37A6AAE173E97DEF200BD2D5DD892AA6081F5CC8F8F22239F136CB3E3709549
87FACB1DB740BC75EF421FF6DF7394E9FE311642E8CC93FD7CD15ECFF49B3E75
09D2D2A282A57BDE01169D7ACF83571CC32482EC15061C1223B77917A4E30F39
D827F931523D2D723C5D5331064CDD15406897C88C9D06EAF8AAB8FB492A0FFC
7D229D70D3E8D210CBA4D4636A470F07C2004839B4AB80BFF8AAA171BC206131
89702E4C4B22132FD30022E5D9378E8899D5588D8F164F1E16CC3511BB3D11D9
92392C24D662F7D026B6E96ED69F57824658C42CBDB5FD900A5C7E6624389EE3
5E00C7C2D10E2133BF03B8CA885D108423DD04C68DE69A0B6D86EE9CC65A6EF6
77F74D9D5CB8E9C17B988143CF3044986DF664415F6B4436BB03F960C550108D
FAB3A5376E7AF09FA7BDC18FB0F0D076973E920DE6841A7CB7DF43F9CE207477
7A17DA2C71A36D1E6586562904821845B4D55E0A107F01E4ACA9E7CA3F67D4ED
E40DF67BAC63ADB592F2C7A90A11117DF62333A54B53C040F6FAC54B84B977A8
CDB8EBA264B622D2899AF5EEAAACB836E424BAFCA2FF713A5770B0C6A441A0AE
AF61121026515B4C4211AA47B50AE09D0CC3C323B2C409AE569CA3A41DF59D8D
9D32F9643C93F1892892D743E5680504F1256E1BD76C736811C6732BE2CFC4BA
005CB67826292521E8945A9DDB7E27582897AA4B033B65FDFC8FB14B3B45C05E
118F1F73F5EBF9C1D325C2DD8C375173B4F5B9B97DF8B9D6E60AEAF585EF7FD5
319DC63D7330C7C66A11D5C9325DBE91025EE75EEFCC783AD6D44A886D4D62B0
B023219F5FF2DDDE200BDC58ADA5F1424B4E7958E8D7517BD3B04528377FC6C7
164979827BE659CACE6DEA3D36D456745591E9173ADE557FF8D5A04481AAACCA
3DA0A32F13583EB5379218C1DF1EF34240843E745DFFEABA2FB8F54B07A75562
08850F4079569B83113FAE4B39330E8377C119C4DDDE4902CF00BD8E846D8BF8
22A53B428B3073D7E10BED8A406642EDDD9A074852B0C0F9D93D2B410184CFCE
95BB9ADEB09988AFB32FBF9A8369EBFEFEC49A866FBD791362861923B2F335DE
04B331358C43CFAC7C97E2088AAD7CF14E8574577AC45F990A347C82AAFE0E82
49ED71E101387F390C449D1A59EF72D7188E46C606C978F6E864D582B69CB7B4
97EE7B5C5BF91100C6E5E2BEB8FC356A09AE8C150B2B6AF5FD8FEA81E43EF20A
13FEF799BECA3959A7892787BD2FEEBE629C0C6C38018E5D402078E9BBD21ACB
52BE6881450F1E9501AD0A7BFA3FC7E9E42C2510406216FCDFFC58BE8E70B566
71FCF7C6EE6E0DB381AEDED7B22F9A85967AF7B35F6788A2A547F4F37B595D5B
3E77CC1203659C50AB2035C3B257C7140DFDAAD7B363AAEF5CA4DAB5D87193BD
9AF8432F077D8DE708CFD6A1FEFE4FBD4BEE4BE25B14796C159A77F935F037C2
935D0D6AB1CB545FDDE522D5B5CC63D516AA186FD0C32C674EFBD5D41F118B56
ED895C1AA27D14D8431DC7CD2A98522FAE18A47C040DC409F3125588AB486193
80E585B0F4ADD447C3FB50BFC903495B1324DBA73F4B97FD606E6E19F8DAF17D
45D9824F4F1C43E79224CD98A14DDD1DD3743787CBC1401F5B46F8B35647A7F6
91EA0199E390E744FB40E79DF2CC28E0BAE09EE61FC784E8FF8D1B5F5061D34B
C8F2EFCE531731DEB398D3A1B954A4E4FAA0381F5EAED9D62B69A331211F1C8D
C1086C77006F809E371E3B0D7AB3693AFEF216FAF46F54DCA71870E4499543F1
EDB2CE7CBE85E9B32949EEC57EC3D34BA951EEC6E50460D1A780774395E9D5D1
CDA686168FA70231FA977BF8C64B0ED8568436378921CF6E8F169A56204F5D00
2D0AF6EE0E75032D22A6707588CA0752A7E74DA2BD23B1B48DDC507AA7E905FF
FCF864F3C97C16D9641E0DE4E8699C6124FD148CD52F1CA67D28E91D7EBFDEEB
F4B777E3871489AFD0F4E2D0010C696EFDE8DCEFDD55322B1513C9DB36CBCACC
86E3EA97A7561E78F203958A9CD0ED5086E663EB3258F8CB2321DA373D8E6D68
847AFD17B13C639E4456662CFAA4EF07D080B3A4B98D70B1D28FAD0D48914440
B49B4784AE65E1BA49B11ACBBC6CEFFACF2B6F344EB2713808CC1522191ADAA4
B9410B283A1793FCED622F5D9AA778340FE126D06B3A7E7DB0C5AA5AB6832875
9663EF10B38EC808C471D865BFC9F16DE5599F8254EF97FE7722DD69AFE08FD7
A25A3EC5FBF0A16E7FF8F8BAE1AD4E3298E4C124FBB19E4D0EC538E6E6E5016E
6533A08FF3BD110A2EF2CD027B8CF6909ACEB5FA29F5115526C071B5B5087CA2
AE45BA5A29DD6FFCD0DA6A0982DB21D3C77A3CF5611ECC33515F699F1D587DFF
DEA7FA126293CEA48BA6143E9F6AAE0CDA18F2F332C07D74915A8438E4E001F9
CBB1A3AF67E9B84655225CFB45E7EED8B168F9870CCCD87E270F1380CA0EB296
84FF665284CCEFA32A85647ED7E2D83E8D18FA60EB8C0930A5C9115CFC87FE1D
B0EBA92894C66D10110F373D22C47EA899F6738F48F39EBEDD54B9C5333A71E9
32E0C44703C5A9FDD03033F931D92F2382EB97ABFF308502691B78215DC62163
8266EE4F27D6099C00D4520573120CE22BCDAA858126D491CFBE3856BAE93169
14FBDD683501942D88AB6EAAF3371DF1AF2CE1C5F64E73BB0D1D2008254CB260
48D74F17B373499EC8A86FDCF48470891BEC31E372991F76C0B13C40569C83B2
9D52C4BCBD09049DE30E3D5501B81D5A54698D0DE349703BA690BDAACC8D02FC
7969E6CD1AB715416C47365409EA380514F643E90BB3E356FA94CCA161DE2286
6B6AAB0D762522A9FACAA85EAA0AE9B67389892623D4BE96BFE116A9F80F1274
CDBB83D551BA5C1D92195F05D4AB02E2A2730F3F97404FC2FF024A6976B42076
8F8F3685C1D38861B9753028B31032DD4FAADA03CBC94415F14CFA06CE5FA226
016200441E3CA7F341646604135DFAE446694593A15B96703253E5741D7E200C
4D6746885F95A7DD98EC861D2D36DD29629148EDE2184F76CFFE1B6BBFD0D9EE
3F30B5C47519CBBB567BC75B09FFAA7F874F6B21D85269C5249C08C25FF875E2
089F7A2EDE11086C53EEC6040D2F8BD0042A4FDDDF89D4963DDCB4B1075288C1
2E7D280D4DFB4C6182B2A3D581911A3B3E2C89A494E8403631869981BF45B2AD
EAF7AA04B5ABDDA2CC3F3AAB14D8AF82A8FBC4983CC206B3696D47D2088B1F8B
AB88ED07DBEC271E659FC9AD7626D426C48DCEA9C5E593A22E7E03BECF3FB4E4
BE5EFEAFAA3A8CC0E41A76EB36E2502CEE2FBE2452E18327517A47189AFD58B3
DB61219B8F33C488F05C0DDEF18634097B6E9176E36AEF266ECB9D2A0AA66095
C9DEAB87370C12A8C7F725E47D4E6BA9104F7F543DDB6C5EBF18BC0AE835A065
7514FDC25733A49AE8D05A2936334FCFAF67FA719543F4D474EF1B41180FD4A7
EAD3D15C4EB9634B8A067404FB9BEE9087AB7F187221905E33B0CCA90B4455AD
E0686C2CF258764414A1DEDE87872E1346BF161342794A68B0F37E1C84C9FBC8
6D82BC24A4FA991AE56B41C756BF470661BD1BCF517609E014F82B805C37017E
E08E8415467D0B24BDCFBFFF4AA77567F15CB3DEF8041A024E44B4CEDEA2107E
09AFE4DB05CBBB60C0565497B8A24D7724EF122111C512B217B8A45884A76BEB
A4BF053C6341589A8F0C805666A6D033DECA93AE9371552F6D760398C95482EC
10CF2C38D48E91DDC267214B1A9551D1858A0B399761A6D7746BCB7002A561FA
A7933FE497D94C11A49A1331D8EEB25DDCBF7D7EE7C1B935A8C22C84491A4324
BBD7F5D45091DE4F16CB00BB4BEF34798C85C21EC1CD20E5B88678232A94F8E3
13EF0699100009493D02B10466E4E5969570F6B80C0D242BA25962D47F802246
A44CD329674599AC8A9701EAD62ECCF9E921552F63BBB27CFF59D4446E0FA3A1
B6504E320413D0FF02826BA03AE4E65D5F000C02C1FE266659F066D674B580F5
C0C61CD7B5C56D0314D36AD4868AED1262F8B3F9FB6CFD0BE4CFA565ED0D7B8E
6FCC49E808330AF58AF4077A16BB3392EF3DE097A6D6737D38E16FBAE625B3B8
8B0D1712FC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.0: CMTI10 003.002
%%Title: CMTI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMTI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMTI10 known{/CMTI10 findfont dup/UniqueID known{dup
/UniqueID get 5000828 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMTI10 def
/FontBBox {-35 -250 1124 750 }readonly def
/UniqueID 5000828 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMTI10.) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1B57C5FD29DA32D34C95E
2AB2ADB3F60EEB0600C8ADE15A2380DE10AC5AAD585FBD13097B1A7E8E210D4A
EE96785449E07F0C8EBC2EC5EFBFD0897DFDC15E5BFAC9584D8DE95C5AB288CD
8AD8B9BEF0B8E5F887B3B0B331542FC8184DCCB753DB6ACEEF98B85756B988DF
CAF1AE0DBE7D37D5F44A2E760AAE3A5197C27B15E32275A64946C3E4D0476FD2
7FDE148C788DD2106F7C825E270588AC05B57E625AB17BDD02306F9E5FC851DC
32A5A6EDC43C770A71419B2C0C8074EF3F222C8A2097CD81A91F333A521B3A09
482A4FE1CB231CE344AD126AA284C3280AAC3AD162CF0EE241BFB4C8F20502FF
118507F5D1B5FD898571015E73E5CF2281085072E00D401F6F59761EEC3E8381
1F26F75DB66C504AB6BABA87D121B1E7040A07AA2FE01F80DBC246CC03C4B2DC
C2A715980C52B7F96BC1A78FCC7F4F52EEED5F705E08FC1E5BBFCAD121FA88AA
8EBE58172C162AF409DBB0728F14923ED02A65EA24E5D52B6AD07777455A70A4
61833D3789C719BA92E901232599767E423D5AD9C807670BE0E7B5CFF8256A20
C7BF7214FFE0342809570F5966A2C43E784F35015D9040BA34FEAB6A6F089504
3A40A9E9D711A2721D3F4998371430FB3C94BFC619559B97D49627BB630F4B70
9D0A8FE4E916235335C3962F3CFDB04C4A3CF714DB5E260F4E66FFF2F27CEF2A
D4AA26BBCAED23B8BDC98F8F453BA27AD7758537561E766B82DC3032E92A9EB0
125D98A22C5466AF069BF72A9BFA052A8628FEC6A6AD0B711DFFEDE3AA2D7CE8
34EA487038EF50F953B8B4471CBA6FC3C53877EC1BC94582B1123EDF44B4056A
30F49394BDE22CDAD7F01951C7013D26979277D18EFA594E8F4F2B5E615187D9
39E842EC28461B9ABA52020A127D2CB9002A673A435B13C10602EEFDBBA6BD49
9DDEAB9E68D655443A5C2492BA061C1391A51592BA8C353A6F6A0708E8860184
2B5D031D2CAB87D618E9F6F7A0BF3F66B3FD5A25BB91F7F1F5F99CFF56EFF4FF
0A35C55658001ED2E97B26C869292F6274D433A5443179DBB8EE987196306348
3F9E87C6422AFFDD30080C9AC4EE7FE5E2DCBFEE4974331F4AAE479FD8806D4D
9C2B85FC69EB0453AD827A1E767E5C484BDFBF5C8D6E2B3C96298B390F22D757
802643A79D5E29CF3AEDF0E12CFBECA4663444FC87F2027571DBA9ECF688BF28
FF0DDB3AEDBA0FB28447CB4B5D5205F40C1E7A525FD7373392EEFFD910AC82D0
98E71660A1B3227C4A2592F3E853CA4CDF64DF19A52582E167234F4036FAAAB9
5446BE102DE2BF43E82F0112C2A20F15A3F92C6571AC761665A905362C4F8BDF
AC8705519C99862CD9C0D75113C4AB5FBB83C880E46B82715B5628890D9103AD
A2329638B95D93C4DECDC5E6C588C9D5183EE6FC28FAF9825F02DCA567306D93
5440987A81B51EE7291107A08F201C609FEF91A8F0587E8B13D4BAF74A5A6815
DE9E4441F46AF8E1DDDFA2D611C889614040B144A5EC064DEE4638C04EAB2E37
4CA8F50FB8C4D65BB296DCCCD39F1F554CFBED96670A91F515CA10EF896874BC
8EF48C6447752C70FF5A06F928DB55586354076773BFF7E94C4C3A7A1C1F421B
A9B4E3936EC26E0C19BBBFC90F021E877F54B62108F6DD1C7F6D5B8E64FC9362
E173F01BF2904B7E5A08B3543611562C2714099DE7D4FA330DB148B560A9601F
42A84452811CE213DCE782A0D7809CFD954D6BC1EBF2BA4D1B18F50FA8174C96
3E0120E266AD5DDB40B3F6798AC28CDC5C3C4BC34583528F5B5DC8A222B80B59
A3A93DC715D061EC6915E6E6E21A25425C25E8747C60F170D61047108826F96F
7830E220C108B441B6EA3198E33C49BAD8D43086E49F5A2BC7958A1A8CD011C4
49045193394696EC3DDD0BE084E8F2E9F0B9496F035C0DEC1CE11409DF566428
D50043CFF5CDD1092F6E0807E660B68163BCA738E8D98FC6EE3F713164CD204C
0BA84FFF4F33F47BC31750B448603D7ADB9AE92FA91AEBBBEC0DCD66980E6955
CEB425ED07115B24E40F53B29B9D840842EAC691B4F591F866DF27556474B485
1C6F53DD72499847109B16C7093984A6B8487D4F3870DD517945CD90E648C1BB
8A6861E540FCF9D75B984B5009B5CC760CBE297042C240DD624111670B703388
6FE6FC0E89C6B4C88F51DFF3913D0CC1FB4770C8CBEADD4B86393605C0B6C468
83CA5594754411B6FC331EF56D7CD6D247FAE42E966583C29239A8F862348D29
60B177984B6B957E733DB4D275015691D91443BBB13C2DA96097A29733CDB284
42F89C85A7A743338C9DD3BBC4EE53F695E5163E6E1ABE5791ABF100B198B9B2
1C21E2FA2FB4AFE7F9BB2D381260CDD3A2CC05BF513AA1E80ED69FA27BC5ED5A
21445BF00BC2F997B356D94AF13736C6D3B0613EB6F4CD96A685FEB672661DCA
206105EDC3CA07900676EB2FAB37F48D2E8207BDE1463894DA3C5B1488AC1EE9
D39DAF691648048F5D7A384B8927F8DA2BE3602669F71D80686E427F395134E7
7ADCC611BA91AD4B7A0237213C60CF2C905359C90795230344FC3C50A22BD44B
55B2044792509F50F5C21F53D9F9E9F063ADBED3AB99E2613B23334FE8DF70B4
6120F2EDF69F50BE793EE145B9FF9C73179DE640FC2ACEB5C6617F918CEEB762
4CD81E665B2E544864D13230B058717B207D3CC5D6647D5343DB4D0356082392
871EFFA896631A7E0D6477942B632074A9A4EF7B09D4701B1639BAAB4E03A40E
9B54A7A4F845CD63F88831EBFA4FB847847CB98F3455CB5957F2E0A0F5623645
DBB5C5564C7F8B117D6E27E65C0F3EA81AE67B4AE4B201E7C4FB0A8364FE53F5
41A7CE8F834C2C4B322809B353A5E63BBA7BF3B7DC1A85EA700BD287C2BD3FC8
2832B0BB4695FC937FF5EF06FCD87DCE6DE793C2B1EE10E6450352C17726155F
220D550B1759E15AB2C1D5968E52C8080CD280E99D3CCC0E80C2EF8BBFD96001
A226FEED7311EFB4B67F424B557A877379A15BCA54780F0CD2CCA00400B9B39D
981C6B552AFD2506D1B23618FA9AE6D8143CD7198A8482CB416CCE62B992347F
337D505A4078713BBD91E5535BD58EF0351EBDCD749CC24D4AD39F8CECD7D6C8
139756680A4C03A58B3374CEC658D30160AE4863A3938A891BB59CBE02BB451B
1BA4B2B6E68AB61DEB85F95E3C909B8B66E220B9F18280161C279F10F7093CDC
100A53D542F071CC0A5AF834DC1D18738F5DD62A5573E884E1FFD22BD810828A
1EA47F8218C15A2E97CBC609927DA3CC2B802EA4A0D7EB57627C135E3B065905
F97597D818A2C5CC6F328AD25AD11FA50F1E4FE637980B7474D6F85A521892FB
72989AABEBE02A2D0EFE88A6F67AC29F5D8DDFEDAAF465C439983C6B84389FF7
A6434462BEB7B07DBE4BBA61ACD4A60C55B5C0AAE527DE381DFECA2E6BAFDC8D
310364ECB42CAFF72BA93C067B2F02D1CA7C34AE7CDC46787A0E234C8BE8A928
7A6F3DDE0338FAD532A9886E8E3525B85DD39364AB03EC4C0DD25DC179CC1989
1BE232E387E857C78332D834679195E10F1E7B87B7966DA3B2238F53D1E13FE2
8F55ED6A92A750C7250C9B91E29796621E7E9520373214D7DA81B2875A986D33
80382AFF6DE1F829F048E57664D9C4ACE91E4684A51023943A4964AB5657D610
3A5405EFD4CFD1EBA684243E15093C9667797BB47617B66054EE02C41FFEC45C
C1BAE8AD56B00D323FCB1D2744F061FA16E161988741A319B1564E04BA210996
4F9F02A3268CABE450D166A763F5284954564A1C86B76544C5F5ACDFE0D758DB
865A1CFCF9FE8CD5F9C3B2998C56468FD52DF8EE60C6935A3D221EAEC7714E3B
301371C7DDA0B03A2416238F2B47BAD3A2C5021C886DF51C695AF9C87A864B48
3BB3FE0B355EED5454B59B25A0D8A1B8CBD356C24F64D9B55E16C30C011365C9
1E0380753BA3EDC0868788D5F50B9353D0227BCEE1BE36998B2622C0759BD66B
E4444250589F9CEDE766D8B940770CB6B89503E925B35C00CBEC2873D2DC4A29
0823FB7A3717B69A7DEDBAAECC067949932728E89BEECAA91DE3AF9BF070B9C0
30EEFA8C0A55C8388CAA2F0515915C98E67FA095BB98967D14B0DCAFA9622E4E
2E0EBFC768D80585ACDF28D8A5C2B6EE2FE7AAF62FFB90F569F84A0903996DF0
C1D5723366C436E4088F3E2BB9B47F9789052A71CF5C49908CDC1DDA194BFB89
14D7E3D7D4D72A150FD6FFD8303E9DE5A97A71B808B8BDF2AE466F31BF5D7A4A
44F81230BBE2B456A221E2F72A8B59F8FEA8D31F8A005A5BD93B9F49CFDC3DCC
CE2B67090460F632271C7157BDC2F05BC2749FD562FC28682A616A52D1B67654
DF78B7843A9EC26A7DE2EB168F874904C2915B97534B2D4D9F74A9573A771D34
9F7BC855E8F794621BF6AD471BCC347E2DF5F620F5C209E33A4CBF1EA85AEA87
4492A77342DD33EF615FF34037D660B713C908786D9022051B825226545827A3
2AD1B05D654DB6E6D261B4E8AF0933AD1F0FCFC7201E1A7C1B4199F160C38676
21ABA2DDF1CEB655B3EC3226E0B122976EEA998F7A5241F062E54AD1DFD6ED26
47C99A439E0AE95415059179867CDD3F0FF751F3141309F40E00A6C7C28433E4
F649BCD5DAA64177580E05C495EE7BCBCC5FBF104DAF360CC2711386655B26F9
D349D887EEB32ADE595241560FD5924A1745A22E6A01DB9C285EF14596EBFF0F
03F36EB2E0A7C3864F819EF7B0855121292D49482F046A55CD7271FE03F02EA5
886864D9D8EC22A68C23089EAEFFF03DED6484D8C341861EF8B6FD3C5BDF5AC8
352DA4E13A1E30D0CB71E090E9CFB9AB2CAFD0CA7C34AE7D8E3B2EB4666834BD
9CCD1AC2108348AFEF6071796F4BB2FFA4A67ED917E76A109FA2DC2A30D744A0
9AE653A748C1D18FB52595D84E87F1C1FB6B2F32667FE203262C66627AEFFED3
92B23861E5EB238BB4EDCE09DAE1C65BAFC198CDD1B45D42CDF93E16BB82D35F
821E9E49067E966AFAB2AB52928F8DD6359984071FC37AA652FB834A09E5BD93
3AFAE161140E74C6531E413E8FBBFC42BFE8A464B71EB1D8CAA93B33D7BCC3B0
47C7EEFCD3E9FCF26FF9441DD9BDE68D77AD7251C06BBB9A2103049E8827CAF0
F26BEF33F656A690235DEEC623CC519AFA82DE2AE16FB99F780FD7D8290DA40B
9B604AEF36B529FD184239E7D50561A07428D28E51B55546590A1AEAD4B7F2B1
AB8C5B9022C1FA03E33F8F409B24911AB8BFCF6EF4A8E415263C789F89063E71
C0910DC20347469380B7FC1EEB87D4CED7F4A361E58B61C91AFCABA35C03F978
B9FB5257C31657EE48504C355CE893FE3C553274C641DBC4004F5D5B879CC5ED
D3F21F867F6DF054127067DE86189F0B59A1B90FDABCDFEE61423609D888EEFD
F4A1367129962110C651D9481CEDDB8C5C2576A59AED64E95F7ED042AEAE2F7E
81AC0C408E593DC30DCAC334EDE9EE27D932B98F040DDCD195D6155607DD2038
970EB78221A94C52BD4F0EAC65F1FC10E5DAA93C17266F351669CAE56F42B68C
6D01E1EA03AE554D63CE76D800FDD9CFD89F80A241EAEFF7EDFA41794EA25CE7
97BD5028464D2CD45B53834B4AEF8BF0B9E7C6ECDEACEC887E8790A47A93F668
A9095E5FA1116A122C0E5B74E2226C654D3187C6CFD8807917820423DA3EC1DE
AA020EEEF2280C44A15209EE2F3FC1776875308CEAD38571E7BF889F287E4594
971A83605E0B4169D4A23EE790515223DF8724054EDAD905F57918FC0BC64F96
514B4BF7DC9BA79E763C22C977FB6146B10D26FEA1BAA7BAF21312F78D1625A7
8E242D743471DB5821408AB786E4A7EA9D35E30E85533C617689F95758FB2C7C
392E759C299DCCE36689686DE0C4DCE32649493650BA194A6208C5EAB670B170
3F2C70BF0EF0E3BE2FB0A79224FF4ECECD6BB3388C6D06867A0E5E3DB93C1B2F
464C23E44D3132E7D4086E3B59B1D13F49EB4772DEDF8EDC4F603217233FB7BE
C13C28648E9AA51D53F11FB896839F97AEDD8834BCA53CB0021AE91FD8E95E2E
F8A094093AF556B9639F508A401542B06821FF9DE1A745FE9AC5CACD5E8E1053
911442FC15CA5333751ABFE2C617D38FA1DC332BFEF44AE569DC631C93EC54D6
261583A695F5A392867A57F59B741EFCD2DCFECBC55D1EA5F2317601C9DFE9ED
D1EA466210FFA905A8F85BD58B98991BEA58DFD1CDED5C9B086D42CCE632DADA
147941917B879139E016B0DDEB8446BA017FC8EE5A354533D667B0835F5D027D
C2D580C16B80B3D05CC92C0465CAE077729F0A15B2DAFC89DCD349B3F81D0516
C65526EB5C10E45A8A85D716EE35FB9AB201FD7C89ADE5AD925A174169DA20FB
61E96C73A143DF964C20589EF24A0FCFE6195317F2FA0D2249C0D8E649C3D9AD
FF13332EA2E4C9CD36D8443EC8F027B61CEF92C6A6B72DD4ACBACC16E429A9A3
F5F29C1631360E32F8C1C93ACB22F810B86D2969A7480F486F62F8488BEEC74C
2C1AF13BB92BC578E8CD30BEA6BC8CB68ED730F54CED0167605FA76AD7B7E88C
7AE7688E598F91C471BD65A542E96D64B1EAF19FB4F1234308C48C2DC86E2193
11ABDB4C6189C6F201627C693691A86DD07FF55C30FDB3F72381E09C6080FD7C
9182762E5001E30F52A216E0B71E4D2D4E2F3B20F95DF3A11FDB2D2B5B5FAA66
C46226D5E0C77066349770514E5675550FAC9394FB27CD2C2F974F1FD58C04A3
1EF53A8AB3B2202CCA1CEFA66228E1480A0709436C44BD3319C40CF888AE4692
5DBBB52B15CF3A518F627F672135A24D5DB9B2EBEF04C860AECF231EBB5A3BF5
6DCCD5E72FE4B6DD29E896691868A7DE4120AD06AC573F5608B8449B38E71CA0
EB5CDA3F942482EA7973661170F81DC88D54DD5B92323F46F833DFA757107E9E
F62A47CC50FAA1B68ED535C3E0E1073532A05ED339C8D70B3B9864808ABACD23
AA95E9FDA43D54C66A675FA074E0A5B8777D3C07850A09087F36852B5351F35D
8BC4DDFCA35CF29CD5E3DE118A741FAC4DED36847F2E2C6CFE08669301722D94
376F540982958074E7F1383C409652F6C99DA39FE90B38221E75BC1ECB93ABF6
B00F410A0C5651DB418566AB350FDA1789AFD88286AF3BCB42B98386F7BC144B
02DEB8940D20A6B3062F0C4244EABC50923390064F1D027A8BACC3DE45156E56
4A942D1B87F1C4A76B0D4D6801AE792CCAE3009BF25368B31B6AD5476FBD3BFF
9759EF463EF5E78E10B7BF64005B2ABE0E8813950A08A1808587A98E0021D0DD
751AD515E8278F1A0759E85D8A084490BBB0F8206484AA36388B1013643D3198
3509078847BDAE08E76FA5BF3E3A73C323CE093DCC148E3C02C2DE1E26C94D5A
40EC8308ECB02FF7DD04EC1005A2A0DC74D4E587F10A3EF349E828F69FD38962
2F0C74D5DAB3ED6CC9F97008ACCE74C086A503948DEF1AAF58FC8BEC703CD360
D32098A56AC776B1BD08442052A2A4EF6C8798F7CDC102AF1A2009657254762A
0793F79A39DCD6ADBAA5EC84A7ED6018BBE727E5D477893D84F157074B24C13E
8D4881C7DF8ADC13EBA0D89745EF93B7616EC5355600BB0D2B630AABA3CF2946
AFFD0B2B724EF0F28393F3CB6A4DCBBA655E3D6E27F87E6D8BE12A15D35E1E75
D36532B9C5000C06A58822444593A1038EEB23C7AFC9EEE3907DF8232322B09B
230015E014F1B4CEB866234266440AD3686E30ABD086CF9C0926E711F0757925
5DEB3D39C8E6D6F0C05A364A0DBF90F6E32CD28887F7E237E04093E07A94C973
462254BC1B1586AAC29FC7F15A80FB5993ED22E79A0FB5BF0F7362CFA24BB2F3
D4EF7D39E1902C53053C27E2AA49C4DE54A05AFB1AA6C7CCFBD9F72150DE259A
BEBFCA5C7E828BE667E9C72222B84C4C79C2DEB885A69861DDB635B02814BAAD
9672A14E50D6A2A236AB35C6DCBFA1165F47F8F52B0787EB4B70BFE3CAA8B511
A630E8148A51C1394C7C321156CF52EE7BFE07B6C354CB65782464D2BE42C0D8
14EAFBE88DA3D5C90614F22E02626ABD343F3AC0A9698AE84CB97F1CC421D34F
98B69FF4C335B95F4222A8BAB77662B4A57A4B574265A679334D5EBCB073FF69
66BD9322B1C2253AE85AB38889B26761BA509C7F638C6CBC4BBCDBBBF4BFE1AE
855973129978F707C87462B67509FE6EEFB5E0949674C34768F001827F12F1BA
77AE866711077C30DC0E40C2D8A6EF4D85355E596E26B675E8D223D4E55C3580
5B79260E90985DA5E5B2F43DE7713D5E67080D2843D44A3585E078615BEA476C
88233D241D3A427F9B1AD26ECD535E46C137084A835CD816CCA936D0011C53E7
B33D5B50ED7BF3F41289F48E394BDC963EB1AFD6F14F0C146E0F13B03E76B389
8AD8E81E41F14D1682A113D8BA1482D9DDFDE71208AFC351B62E028C3D50BE01
FC9CD5D5F36E28DADB469201F41E9F39098B65E43FD1227A26F6FF812CE452F8
B5476C28FC1B1B3E5FEF3A3B94CD552E29288AB0A3ABCEAAEACBD2D5E9001579
738029B0E7F635C6C4962340187558084D9CD408EF7FDCE23F465AFCAA8EAAC4
8855BF64EC9BC75371A98095CB51BE7FF107E4C6C2107D887716F94563768073
B8C4238F51C1E63C279B23DE3DF51F656B90880333880515945253BE08582F17
8F405B52C4D828BC4629665F1C31F622A6C37348B410CCC9D2D4809175713005
5257815D95644A1F6C6A937F6451A79F4041BAF258454D6B3527F0C277F2CAFD
659D29178A79EC1713E439B6E14230F38C5A955473C09068553725AB22AC7B97
225329305F9C492D4A12AC1F8ABEFA3D85BF7B6D19D5CE8031E1273A9000C813
9BAF088951C2DCEF7124B93EC6EE9F5D1BD504FC7BB2C643439EFCCB1509849B
07DC2D042B00542ABBCC4B0179C2ED20969A485B6E82977AD7D9592D98523A1E
11DF8297DD30D76ACFA408988B8753CCFADA24266BE7B7859C3E468AE4F34C3F
225F6072A1D827A5A9841184A609C56C5F110F195463400C0D43F4A0999B39D1
D5F9EDAB9FCEE3756BC3CA04279C428DEC23A2B17CA95332B6326944FB697361
292E8C9CD7F72DC87B7D52323EBA9C5561B67744E989438CA17B458D5A131A13
0DF11321BACAF4D9F6C4543634C6AB41502A9F83F6F0BA5D713174C66D51D04D
B959095A74942D9C919578EA2F0A9F2F29114A5BB7A7544290E96D3DF5FA79E8
A022E087166A38260264DE05ED97AD82C7C817462A283486839F034FA0959664
EBE402FA619BF20999E09651F2B744C02D7D411625F6F816A2BB469D24585189
88AADDCEB796926D796673C030554E7AAE1017D952036DABA92B45D8AECB86DA
C7B461A8DEE9EF123D429B963D846A3BEB6C9C18E6D0BDC35E4B898C2849E154
AB571CB1AAFF7D497596DB82EC1FEFE37C6390964B2161DD5FB397C07C055E09
E88B56CA50503612320EFC887B061FAADEA4841A27CDD92C10E1FAEF088CE830
9CE90C7B65C9FB43D84F9019B660A63FA7712225F9D8FD84E6AAE7BA65122FB7
F781563C111E95E7218B95705A51EC6422D32E5A670D69B9733E1C353DD33260
053EC88DBA924D03230525EA470E2726C4A660B83033B2B6E9E71D7F8F560D5E
1083F3252C071ED2F5F475893AEC52A7B11B90EB70963B42224D2EC4179AA927
6598ACDD85938FC6B53775A35F4C4F79D2BA9C365451DF34F8A32F0CA74ABA44
A8871E53A7E450B157CA7A366AC241762F75E4BD9F2F8DAC8F3F3F0582A473C4
802A535A7B98D4DD9778B91B425712E4638082390837F05F6F1B55FCD8ACAD58
1FB6FFEF35130E9630E9F520FA7D1080C2B481AA5FE9F2A93B5EF19688E3E14F
E2AA941746D6A50430C706AA09A4C8E678DA4CD3FF628E4371F1788099D9AA23
00EBBC2501750D9A4FB456D276E551C9AA82772921F19912731EBE5A3D5A3929
C4E9B7F3EC669D33AD1413563E8B6EAB91C22A257A2880F0B8CE9E16A0FC1E8D
572B4E761395744BC84E03D6F2E559EF1F284F954FFA290AD320FC5C815EB242
364B6094F62A72E1C95D852EE30FDE7F965DB952073B158A27A79B83A6E54772
CE67F71104BBA406A132CCE687A37D66DCC692B2A8A0B1A9EF2104B13460177E
89E1B03FE02EFDED5485E5585843008C34981701D0C6B7554AC5B05AC4B184E1
3F3ABA9F234DF63123A151845B73EEAFC7FD22134E9BC2D45DE5CD5321046658
61C523ED1B7938EDD839B849D29E224101F4C594BE00ACF4CDB302B296FDE952
252E54D318AF735E82768B2CDAFEAA1E568B16C8F55B89607A43A851697C7CB5
3A72C1EBA09195AE1E1AE7EEE41D579B5C018A5F2AB79E08C4CDE141983B94A0
E157BD230D934F693084EBC46C861A9B295184B1CD78D6864F7CEEE2BAB51029
A8782D21FC23FACC387D5717CD5F268E9B5D12082E65572DE794F9A43B601C18
915312AEBF67BEB15D1208D865ACF6B65C297BBD6C05C3579B3F614834036C22
E61624664A196946AFCD57F64A54FACEA1A67A93F4FB1BFAC252FC85AFB642D4
BD2DD29FFBF1363FD3670284ACEF4B869F2CD5E94CA83B6390115E623BE11567
6238DAC69005B4B0136D55056F381F1FAB3F31BCD6269FCB4E011D6EC723DA4C
7CDB93811BB464B1C5CBC107305934B57D9842D068C84AF435CBE910C7C10EB9
910492B6BDD66DF89FACAE408369D84F59A966CD86FD2132BA71EAEA2C124B67
7DB1D80021E44DC2F36D77F04908BE90430461CEF83D9AF874173C543654C4FF
B5F99B6CD926F17484B63AB1B3D1952CEE1AB4ADEEF6FAF1A0C7C067098AB2B2
3D69F1F456FFF7DCFCC9E5217524B69BF32CD6D989001C05B5AF1B3F973E01FA
FAF05962C20F72E155136515B20EF694DAC76857B784EF8039B4C49E559DA20D
7E196ACE71A4A9443BDC58C1855722689AEDD67A7CD367EA5C77E3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/UniqueID 5000793 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 14 /ffi put
dup 38 /ampersand put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 59 /semicolon put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 89 /Y put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 96 /quoteleft put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD604548D553D4A6EDB247853225E24E7E9
89D71F6BC94DB986467E755CCC99069B313F5745B02B4BB608A39F0A0A732B87
7EA2DED68219754BF1FBCA350327572D769C962EF9242132D93A5C8E9725D8D3
AAAEC15ED0F43F9A1290E91C463895BD12E8A831DAD661EF23CB9AD2C26CFB26
71B72D15270CD8CB1D59CA2D9DEE4B63A8FD2929735CBAADF336DB2088C0BAD9
B79DA00F002B98E0B4790F729DB337A63C1BF138947E9552402C37257019A2AE
6961E7DE6E5472914BBA36D0E9F53FA5771D2801267609C8B8B12A11E0AB6031
E251D1F7D5055B426B1CEEB8B386F92A8661CE6E429DE0B3A612D6CDE03DDBE2
AE36B73CE97C83E306D223CE7774FA5AF973D985C5120978E1A02EC362C66754
4098AE47E5F9E0807326E42BF2869A9A97398E0C20F5F017CA9DB7BAB3BAB101
169D9B8A4E33ED8CE8EC3AD987CE15528ADEA1C2830CE749F731509FB6B90869
5967DE2A007A5F489E6735A959D465B74109BA1843085C27C269C751AB2FECDC
406C8C00B476F321DFBDC8D8B289265FD8D01FF1F9B77F9884F052D1DB422D24
5201FBD6463F31D0EE5A6EB879F4A7F4F8411325854B99C4E856B817708F60F1
91B34F09E5AC07A93715F482700962480808B0FD16D44724C9167C7F909DCEC3
005810B42BD9CA1004460FD1991881327327B9FF56BF0C3959A6E117CFBB2762
D6ECA7E03DF89F823EA9B5E0D111D9EACA2551BF27F03DCEF58B7EAD68370E4A
0A6FDBB0B2380F4F848A93E5E8FC0CC4A1213324D291EE3B32C9523A9F351719
3C0D74C679949CA993DF3E7C73B00C38D798EC4CF0DD9598A9036BF40F425DB9
B23FD634C05EB3F117FAA3CA74F531437822B20B5E3964A175143620EC96B8B4
8C55D6508B4399F2ACA9F8AD9E61024AEBE0F14774B86FFC1920EEF0051FC6E8
FDD8D0FE30359E7B394A3C5F02C672CC09F073DCBAD609E5F336C0BB2DE8EDED
5F9582B2F25B6927E5A6C12109CA189C7A69BEE976DB2E19A8E62E24D640E3C4
CD9E014DFC883A0C2D6C8E0FD8C052055443EBBBDB3F8E98AFD044877F327F23
96E9EDC6587DF29768E6F31EEA0730F3708A79D8098793528F4E6166D1E7CA43
863A7488C3B7F11476BD78B55DC311DF9A7ABBF47B2F3BD799DBA50D3376B6A0
525539EC5E5326ACCEC8630149F61591A6A9CD12066878AC0460C2237B10FF89
AD4A7840F3CA19B140292C931A7C3B45B54758161A9FEA3836EBC1CE122F538C
F82EAA8C0FD1F86BAFC52C182BDCD360E7F7F9FFAD6258F360D2EB37D26EDCE9
FB73885BB9A67B33CB23DFF6429109D38C699BF777EC0C2D3AAD49BD54D42DBD
A9D55A2A8B07D4FA76C34C610742A4BA45E0BAFCB1FB0EC0673A1754429A85CD
87315FB8D7FDC491216EA6C638999108851937EC9B73CC70F084A5A74282463A
1EC66B5684ED8CBB888F0C20DE37E31EA728F37EC22218FFFBBED64F156D9986
4657AF3B27E36352F8DC981EE1BEAC566752654E81648C9ED971B5DEB7E12F93
1509B4C00328246E51D7204F6F5366260E5E523AFCC88D17D857E8564BF98E2E
D4032263AF04AD295D07E0B3096F30F26559B5135B8CAA9F3EF32E308B4D2F42
D4837893D2BFD094249751D6990642EA0306EB700A9A37719070DB1E340DD443
39B1552C248BEC00A15EA0644E6EA0B2D2FC4482CC2B9DDB5C9573DE790E9DED
61C913A9FAFE2DA6F0E158C5F5DFCA81222542CE81F2CD52B47A8CDE6A597E6C
7B0C5409E2CCADA791368F449208C6B3C19B3B5A59DE7822E1EAA6490B2CCA01
A993E505B0F7643B9C207434D5594796765CBD5EED461F0083A20278CE1EAE78
86B4BC9BA3D9C4FE7F1B0A607197A5A3358BE470E9035F12399AE9691D812BEF
107F19A68C7160D4570C676037E613D1F7C524C89B8DEC8479AA2E8ACBA46F5D
DF43D3B476220AD7646168F2F8B4AC5AEDD1AB6BCFA7D35816E5838BB65838A6
C3F19DA92D2CBB5C5263F8D10B4F2C5AB13D26C9733D62F3C5EA759F2F39530E
B15B8EA995C71A69F35BD04A81466C92C3910B3B3938809F3ADDA6E5F06313E8
CCEC1D4BA23F169D5E8AEBB08E27EBE8FE07497C3065FBE3584519C9C6B4992D
2157F1A181C3BFDE658A8BAFF9218592A4D2331A8ACFD51DD8F95023A5763651
EEF6D32C5853B62DB57C978E6350831D98BA1EB061AB58683E7648342A2F1C93
5F264BC4180D5ED6E99AEF9AEF4316173ECF809A72B7E8E0265586519F264A89
9C83995E405EC922BE03212A8087110847014347E8A2D29010263FADD950B0A0
D76EC8ABEB12BABB0930E68A257253A706922274A9FABB760E65BEEC544A2F26
12BC57B914E2932FC14A22E4C0A331F74B76495AA9C0A31CF60E850066B3794C
043AB6EB664D058006885721B6E1349E07E82322F492ACD8D6C6254A9F9E4235
53C2057392837248E0B9321CAAD83CC8A41C6D0088D38B763B9B36CAAA219798
AA6A4905D2A3F58EE214516B3E3ECF86B8A168582584C21E0F14BC7C46FD9E01
0ADDBDAD28D36F4446EDF17DACAD6044287D87A3C4B0E846480C69A123F7A471
E36389825428B9A87CE294D1B31A4F37B48C6DAFB92FC17982E6C0C345880A97
76EE2DF8187E2DA728D7637E9BEC868684F29E4E3DD10CA06A9190FF98DBCDBC
936650D9886E8CBF00E96FD87134623E16C6EA81DF99FCA3325B81018FF1A73B
7C1F124573D91952AE787815CBF0CCDDC84E06C9AA31A44BB2403C903C3FD844
B796297C00D508B81DDDF6FFF825E4E2B35C58847F36B80C8FDAD9555BC58E41
2D0E92ECF6E6B103AA4DABB29BAE08654BEDFA19D1121FD2D84CE582ED3407EC
137BC59FFE525814892CFE0EDEA3B98A3D7520A894351D75B4E7691C2D46D0BA
64E896EDB2ACF3ED3CEB6D2760983E4F773A91E699093EE15CC4298ECBDB5E62
59038CAAF47B01AE4B0E97E8579FDA391B31F799E64B925D1C3BCC779B39740E
3AB009A4205CFD1917BB1F02AE2A202724F59B94B56DE989515A37597AE7BCC6
620CF7893827AF25A319DF5B7C98854899BDB3A653A08ECC991B61ACB6AD78E8
2E88E9BC304DC2ADA602AC5A74E1ABE6B3C7D1BC5F95F52E2343BAD6DF2F5978
3537D2B57CEFE2CA3519F6A867455AB2B304579B49C7327F23676EAFC8A02861
8DEAD5BB7691BBF8C1F6EE3063E2F8E31C48BF614B833429FC9905F4DE4CA876
770A2C805AAEF2E2CA7F68416D4F2FF6727AC3BA11E8901520440F9C24DD75C7
A4F03841DDFFF9ADF9E8B618F40087CBD566A91BBA8558C89D12E6CE5B1F74A4
716A24CDF975CCFE2D62BCEE76A9ECBE31D07AC76F64A09F828E59584BF2C77C
F685C0871097AB4579D189457553B6AB5F88737E64F7C772BBC822993DF03F82
25FF19785880BC6C811D416C74E3282A6FE868DD449773BD1B18228083E9E984
5295BFCAD20B1EF6BE5770148911449504B9A774CCD27FE62B0962765CB57ECA
21623D48072F5A403D40A72BC175E9F264EE7CF93295C36BFA0E83CCBC244F60
AC1A2D1032BD4E94584451E8E76C53C54EF11E27B4E9C268337206756B8F923A
E34B82BF07181E5BC5A9F564C6E80733A5BC8A7067E40B40AC868B4423C8BCBF
36AFE522359CCE23653F98CFE9A1771E30988479725C994BEBA24879C9E50566
D096A737A198505449439796BCB051A31328C628017AC936C8AAE4C90E6062A5
4441E14CC912E487C55EFA648F76D3347EFE16502E24B02E9EA1C3C455D8E7D7
067536E89E96A1EEE237CFE15229B23904E0DEBD85269B02B10BCD4349BD3AA8
935126E72E876B04CB82996E5CED6D834F69FC5B7647B5738D32FE46D45571FC
760DFF656FB6972C9EF695080C2C3A54A9E1BC54F548CFE1BD6A87D0AB766F28
FC09F6081AFCD61C03E32FFFE15209F6D7BD135D366B6614891E7CB8F6159797
D975382B64F58FF06E07EBDBC6F9BC7E9D908EB57A00994F543BFDBC058B069D
81E5F143F727F5C5089423ADE840293284CAAADCABBFC00CFF11BFB205B9A42E
4ACAD400DBA1D3A23A741196FC4862C83CD5AD0E88F6356528EFA9B70DDBD396
B69DF25D6AF053D88CF96D1ED39C8452A8006C1B895D0C0C9F53EE147BFD2424
0F10EC39DDC2F52901346C344DE96C2F41A8E79B31DB324C346A441E0D4C2686
7A764C4BEF4267749FBDF55F3DEEA71AC03FB48E0499DFC6B8A16B54A810AC81
E5336F562149F46BDE7FC34F88A1446EEE142E3427A92F9CE0CCAB8CE06815C3
89EB9324435767285C975F4CC722FDFABDED195A50EB7C59C99E4417F89D7251
1C1CECD9310CA5CD830D8143408003FA738631268734666F2EBCDEBE0CB0CBDE
736DC50A51AAC9346836E802539F85F6D97E297FF10C56E114AFA671E21B2D51
9313FA38DC45ABA7789C011A28BD422BE81D032B441CC7D786FC88651B431DAD
9069292CA096F7042654FCCBC23E578B74AF3D97FF484CDCBFF1F9F405B4ACD7
15ACEEFA264993D8D36F781C5E60AE0E07D48E52580BAED4D5553E2FE83B5077
D715F4695BD4F60F6E612DEF1B27AF80840E268ADFE4CAFBDA59361CAF14DE20
4C71EB9677ED7D6C55401A280EEE234606234C26E859C661BC11D959929AA73D
4F72AE1C9F11629C29947DCF2DA00AF956F97BF60775019809612E21430F41C0
9CC665E219CA033127D0F6FD6E52BA3B7278495F68CB087D24B704DA1DC584BF
F342C896B5CC182AD91B212AE7CE136DB6E907AB78FB52F998DE6217FF2C6333
C6042E1284ACFAE544922584629B0717D8DC60D98B5F235833BEAF224DEE8382
D921A46D818C9039FBDBF92515FD7870D55FCD937B60978AE0D5C454ED1B6B10
3AF57ED0F5B6AE5B43B99A8143E669964D6126B8BC8E30EC668336B121CE97E1
FD9A0EFE93D8C0C18FC2CC4FC64352803157840C122ABDC868A74A3E833F9D22
7A5F011FAC9C1FC936C893938CDD06D787A1FCADD263D21BE9B8C304F3F248A8
45486D8936CA45F25A9CFD0E570344D8E307C326994530378C4AFE7A4545CBFC
8FEACB0932C7666E4686396D466B69705612A3F19BE1105BBF96AAD4D658BD80
73940F03A22B739138135FA438E6D6EB94F08F299FA95A357D3FF2C1B9B9B53E
7CAA0742823D1F402EE011EC272C5348FA9770905D11D3022E437FD2E1F9A868
078B759DDC2A3B1172F975C1E286480BE814589B4863D34E8AB163E5611C5CFA
B83C8D7F0088A0AD95308677388BA1123D22C9D48CBB9AF9794D674F72249249
9EE372D959C50D168003EF4AD08368835696E3E1565F0003595566464D553CCC
92D87E1EED536AFF1B832F1E9CD55CD4A5FE6BA264FAC8C8F4D3EA5229C0B0B7
0556E65EA79AE328BBD21AF8DE75F1943BF1EC6278EA1F1A00BAAC007FA01D44
9DCFD2EB1CD704F5BC0759CEB9FF67313A97B03C6AFA6D2DA2E4DA3CDB2BB5B8
E64DB5C2871A7E3A2EA4769217F78180FE6E318FC8FF5E089209ACF30EDE6D32
C9A5C5C0F7EE91569C2F7D5C57CC25E9869E866DCED19E5E786ED8E37EA0639E
D48D1C9C5ABFFD54CAF13907BEBDC107F10FC4F5301F5BCC998A03A80E5AD32B
7AE95974D3B38271D09B1133D7252B796B389349B8975C31EAE779E9E74D75F9
F5DCEB4F4BC48B91C02DCF66BB8B0A22A0AE70474EEA02D9E70CAACA7282F80C
BA9651FD91AA5A6C552105F5799198F76E79793AC6CF379E610F98477775C7B9
29B26C19FD925BF5547913B2EF5DCF3DE49F500B95B343EF20A2D79E580636C0
401D6790044E1EF3B77AAA7E961784D4CFC923358044B10ABABF43D1FD795A8C
44C7424995AC522BE150CF1D5235AD9B144DC4C759103139CA42CBE258C8DB12
9F0873CB320806C3C2E4C9E06F33ED29F34D516747BC5FF94CCA9782E3FBC404
A0D99638985D8CDB636C70035DB0172F15017A1A019DC1FB985090CA16E0FACA
F3F3495814EFC9C3AEDEB7F2F199E92C3A1CEEFA5A7F5146FC8AF6A9A86F93B2
E5CAF92F8626EF39ACB9718165CBA00EF4128085EB9E2821D69741A951A7C0C2
4D413D7C46B7E3F7C70F827B8539851682A5B7437C52041C99597A0EAADA1075
FBFB45E50B8C28E5F785F507CA60DCD249303C17F8A2554922DDA286DC2BB86B
516AE718B50317B6129EEA302647337D944DD0EBA33EBF91D0D444AC8F4138D6
B058678023D06B808CB0174907782EF72DEEC2CBCF5C6CA07C3FCAA8DA20DC48
278FC10AFE1A31C5E8FA711E51DF90994BE4C0A3AC2C22BE529AAEB313BCC53B
E3487EF6A7047D566E21A7E1B5AD95CC28672A5C4ECE3CE602C5110C8AF221E6
8F9F44B782B62C52B43D7E5896C069D6CD8E619CBE2DEFAF7B46DC3C3F86D838
3FB8F379BA2530E1F444E7D900CDE6E20277CA65B1EF8403039576A5622BFA82
F40987B79BB9133EDECD948455A64F75B516E8DEC5BA3D04F80DAF4576F74C11
40116173D7C81B519D92717D0E8067B014AB7C6FA7DF44D127B374130C45FFBF
77177E5CC0198A1DE064D7CDCE78735F2414A8EFC37C38E4CC6395EAAEBCBB64
AF4F513C16EF94AAB20CDA732B1334051C69789A9439435F9471FA40B45281C9
327CF6766B698314261DAEFFDAF693182D269064319719FF2595A47134F804F5
7B538D86DE98F8BB1BB713ECD88DBEAF4FAAB3A6FF23282DFDE51EDD6531E270
ECC3F3CC0062A66316B86D170E5833E035BAE4382AB7DF3B92896EDE14942EC4
FB033BACEF04A3E8EC3711D43E50856FAC6B0C5BF7BC29CB351F959AA81E6172
17EC74FB6BC064E543CC3BEB73F3BF0946C219166BFD933D6FADE2B96F56CCC6
2B3D1E7393A7D32460CE2C31ADBC8B59CA389E9DE117EE2BAC9784265BA7C2B5
999831E9811001899333ADCB635068816C56F8CE2F509EDF2331BC3592C0A18C
F4DDB125F1B473A2866917765C20C94803D248292E99A4B6AD93AAAB86745F0B
6499E26CA4E806D2A33A5459EA842BA5BC3AE17F344476414298CDBCF5CC3671
10F1A4ED1E95727ACF635094CA8C21D279757570667DB193D4BD1D312137F528
62EA90B214499E25205E510B8641DCB7334781B0354AD8A63E777A8D3D96F74A
DF859B895D0956BF8DC6557D5EFAA4B7F6021D7C5500A05DBAA0C671C968F49F
693865F0388B1B4B06A283C995BE49665C459D52294539B3F8A51E129D04D7C6
24D7326054A0F67F069D11E6E08B912941C01027DA945B9C9B488FCF3DF0ABBD
52F1C511437C7FC8DA8802E89615E21110DA027084EA1177C959FE720319D928
8DB055B7BDF74E0C876C0206344C5A1C35ED8D6BB5959FFD222A92F431603C1E
B5A7DC5F48D5692807C5E5581D003762A62B3C76B8C3F1B4F7B2BFFF0CA69EAB
BF576D5A7637917FCBCF530B29E4B9098A058A6DEEFA2F2EAE25EAAE8DF912FF
B355A40DB5E1CEB03E921EB8FB7EB6ACE1EBD18C9880750856008591A02C59FC
1DBC78B42EBDABF15618EBFDE950E0B59303FC3E2988AB386A95CB6158296B31
7A2F7A541E01D69A3ECB4075A02AD6F009E6C3521FCA97C674F1C72690A6409E
1D11230CF2B334153C7EAC638F94734C1EF7E2313B8D619B84DDD850FB96F337
1E005F52E13B61C99EA7FAD9EBB582FAD8C130C89B758E249E60A2E1939AED96
B799922953F1D2526C00BEB303C77171323716D1D94BA262101CF5C34B7948C5
5174896DDFEC3016130B51D320B50629C83A9C0FD62913BB0E6DA23C4F0C25E0
D94A12B3C30B90FC617F129695119FAF70991A709D44689B3500EE5D2F46E451
7C1320BB63FA97749468A4FEC7983454B639DEAB10752C6295A49BB294E2DE04
A51AB4F6CEE302782799B275AE52EEFC9CCB51386BF28B8AB5AFF52CB11BB47D
BB414B61614F636A818DB4DD264B1A6D93E294397B2E9B8053CCEF6EE197EB90
693399EB1B824B763FDE9614BDB202FB9A542ABB5DCD77BEF941F92EA4BF9C73
0B17CF40BD066B12B50578BCCF4BEDE0D63E6E7D46E7BFE40DFDA58050DAD720
67E477BA5CBC23D4FF2B713776BC9BCF35E3A9B18340EB39FC6DE28E89E97CF2
C4A688A65479BEA2171D7C714A9037D9B62BF0A1C4F9622A7F8097B279EA4527
18B0179F207D4CC0861775814B125813181187CD7EC0C8C4A5214EA9DAEA0D05
BD583E3AC11B509A72E6D2FB94948AFEBF9A864F3EFE611C355BCC3AD82ACB72
FCDA688C351629C401A673B191EE5AC40AA1CD755997664C7E485C63724B2793
E535D0152573E975A693988CFC33831BFF2F90978F14BA9C0EE449AEF0987C1D
793F963BCB5E72E5D5D59A2C51BC84014B9F58514D48955FE377C69B0089A2DE
888AA0B2ADD5CD46EDC4B6EE0D8B85F28796876033F245BE081A3B58D3FB4B33
0A063C33C2133EBD7F3ED67BDB75E7FD3FE681CA6DF6C30DE795990BD1565C5B
6E232ADD98E078C9B4988DD60841B073B1A7AA9DD48C48F8579FC2D3890BD6DB
CA8C5A382561FA28E0E99D6C95C2C9376F2D7F1E6F3864DB01EF900D401BCED8
F8C72E1BE3015EEE8F9C7B59E7153EC28A2FA3D6C08CAA4AE3C56F515C966E0F
A1B49D4913C792816130FD3BDF08C7442BFA47DF4F0A18999DBD2836ABB92BA8
3DB6414F29556B5C777BE14DAC79B395D2D943ED957B4AB742021F5196413B8C
6C1F94428989653581DFB82DAF824D5DE20B2FE80CF078D0EECCA294D1BA415F
D8A426E2EAE11458E9291E495B8C52F527B1B22A05BB89BAA3755081C701EF0D
EAD5C9C6EE1FE95FF34B6219F28DFAA26623BB3716EF0BA0DD1B64C6F28E12C0
7BD0F3E394B850056DC2A630171542060303ED1A167C24D40DF48B71120C5216
A5AFD3387C73028D1CF19877CC6D08B744096DBF82FB126116C1017318AE9286
D15F7FADB0372AD153C74E092426C2219FCE4F15864964F7422DB5EE2A0D622C
FC9418BDE1A1FCE67D3E6FB67E77F5688016AC91344B0153794EAA6AD0860DE0
F771E30D58BA657DDEF1392F5FDAFFE5F4D244E111146D2037606DCEB0BC7CE4
612D64D8B9FCAE4DC1F8434A24700099827406745E120BD1F67298AD943FD58A
92F1F15664468579E06CCBDFED710214ABEB2C6468335D62F353F522B8FE38A7
97D00F6D29332E4A4770DEEEC32B723007EECF151AE443CED875021A89878C06
97B881D30580286D59F8CDD0E7182ADFFEF25B5AF83B43B9066237764D3E6EE5
8D0130B43DCF4750EE3B0997A2E97EFC66F18451B20BD613C8142A960BC39A9E
3349A750D108F97FDC3D0B30DD21F27069BCD7F79669822066EC6108C8E5288B
4401D4B174128F5153135C77035D241AD41FAE4B7E52DC50C87C43A254F04275
F2E96C0BA070F1A01CA0B88068A5F1A65D918DCB179CEE891B57A8A2E5512459
41CE956506CA5741D34E2380B4EA1C40AB4EF1FF043CEE472B1137230153AB3F
0B889CCBE1C3ED7DD0AECA1518F54B58F2C4D2E2EC6518DD78EB9EB1CFA24A8E
901C668305D11B10DE67621A541D9A07E07A3EC7E7E3D3E7D429B3DE330EE778
4D0A5735557B14378CF23362EB66E3BA052C346B0ABBCE1126B9D324C99A7C54
C34DAC67C1D3FD07DEB4C234DC9F4C498F8B7C12DDD23AD5C5C9A7F32F7C635E
247C04F567F900CFBB8074E9232FD834620518181C932AC392C5D8FAC3A54794
5FA72FD9753AE70AB2F0C73F32547FF01CE8D6681BAFC075EA01F9F865D8908E
E4A0211CFC89215955E34CBEA761CD30DCD2C6BF444FE9559A1C6AF6175566F9
B443B4F23BE5202CC5576220805FF3B6956383D4727570F54BF21BFE925C5B2B
734099C0356F6A79AB2835C7F35B95F4124EF0579CC3A8E061517B29EA8D82F5
1066E8F00F0AE57920F513BF49996CFA9EDC3E9808A1965FF33CC7D58C31C04B
A302FC3C46B30E0794A4F06A0A95E732493FD0DC115AA7FE52260149B482C9EC
5D69E491B56CB04D21409DF2AEC90405C2347CB8EACC83755749D488DCBEB5C8
F3CE43DCDA7638159BD859E2BCB0982D63FA00E11B6AB908BA2843DDB5CD2D5B
05B58ED652A3A4F7D86F5D6DECA3A7D2C96626651ED6388A1C9B1D04B9722361
CC4DB07AB1D27E7D3625DB7CF2DF5CE3DBDAF66587E91E751CD375BE42A72B85
68C4F3725404A31D32F3A9896C98D1E47EB880ED3C0828B15807CFEAC99D0767
5D1FCA31F11EA16801730B3878C57A729A1D02BDFE599B45CE6334D259309E9C
B90E394BD9D6FEBE74BE9402CFC27E647C25C86EF01832FB3E205E5BC0040FA0
968F8CCA4240F0153CCF1903F9911970BF8E93BD84481BF5E9101448E04AB83D
1DD705FAC94B7123EDFB469BC92DFE37AE8D53E4AF5C972EC3AFDA7D3A4FA1DD
2E0C27BB4FF943CFDA44C63F115A39C18E7898D3C4EC8A689A63125D2CBEE670
E6EE8D21AE8F484E49A80D12E448B3136500965D54DCF1ECCD9A5B860E3D8DE7
5FA142E05A13F544BB4BA6B62FEF2B91A5BFF54EFE22670AED29B10FE8D0F65E
4DD5A535E591C4DFFD03E798E390C8CFFFBBCD5968F6FFB030EEC40CC03ABF48
24C974D7F19D4F4D8DD7737B30EE27AB063343F72D8147CC45E0939F9251EE71
5693A5148688F52A31FD9E9D183D0C4BB832C38205B5C0B6BF23DABE81798500
A372E0377AC3AE82AC95F7D7D6FA7D7832DA8FE8848BA659B2A00515D2F0EEE6
E75E1944081618206FFF2EEC5E96C639FC02F67F8CA6D9C0698A88D5BEF4DC8E
860095DCFE189B237B17F2F0A37CB00D2D4EAC0E2574402C1331550BFF3C14DF
44E902B10D4FE9FB455D7625626D4C3577239AF8DB567969A7A6565B2AA8C832
DF5CA77EBDF53DA453F90AC6AEC703C56DC11674BC33DB5147CABA5EE18C6172
9E9026B048BF61320C10573BABE05E49292CF48D21B9BE9A06567FEF42459831
0CB588C3A6983183CC2EF22A38AB5253A9838B8CD86DF21B11B57F299F6C80AF
40E0D22FA8BF1DAEFB705D23902187FD56056F55C8D66023E80B598CAE57B381
672C21459D1C759249EB157765F3F3DE562485ADC6CF3F651BA9A8C251756155
6CD3A2E6753C16FB9EF9188350A92B5F496E54A4BE33C27864A75F0C53D3D1C7
9797EDC63EC2AA46D8B8B0D1A31E3118B88E17F29D4D455541031523A8FEDC98
6E5628101ED322D9BFBA992F65DB19C9B322F0E959B6615DFA209E6EE52C7AFB
66B701836A37BD5BBF3BD024D2E0769E9486CFE13561AB1768075361A8675799
806C1A955B6907CAB16F57CE561CBC5FDA3A021B9FA20CF2EFB322A76AD5A5C6
27DCB6DE493CCB19B884961DD703D43A55EDF3C9C6C556B0D3E49C5EBB9CA20D
7A69D28D2F51830EE25D079F017F9AAD504564346A5D8B5EDBD56BF59EF4334A
69235CFDD85C8A2FD92BF4D87E2494CB3A6DD69FD614478144B7702CDEB5B5FD
8188CDD76D7B2C6BD4A0AD630C9E30748A2386B58723679389EDF01C6ED7C44E
FC71089DFA14C8D9327536515BC13C4D1A7A3F23C87A4DB4A13EF27AF764097A
FA3664BBF15FDF39AD40B60FFB6B0DCCE04F78E2FEA6CA675865C997DA01960E
B4986A2B21EB81A9ACB8566E1F29427BA0401C3C9CCCF789DA271CDEE0BB6D2D
942693DE6BB6F6470DE9E6717600A233D3C1A964FADCED0F5232AAFE5456C08D
4AFF0B46EA63CD401DECBEC94B32BE1E04819EA140C97BFB789574CF585BC5B2
2F776AE7C214895EB9190418256A819070C4BD3E97C229F1903C8AE3C6DB3EFE
07CD76578C2FAC6B271F79CB545DFFC897C77781871DE8230E2BE59464FBF3B3
F1E51C1E8E0507131DFF343FEF3E8482D08B77A40CB972E7E5BB4B996D100968
205D10A51B13A4A951344EE769593C8C5750CFCFF709179CC2A3E0D51681F9DE
ABF344DF27A03F86F8BA20DA5AC5F4C7195D5ECABFBCEC33CB37C26642D2CB06
E92E525CD885A716CF7E90A6686DB5F7A709F2078B006CCF894DC85C9F8CD67A
EF718546FAF33546F99417E5A851DAA7F4249BDAB2F5DBC47C346D3B3B87D1D4
DCC846FCCD0201495166D96ECB88B584CB947538E4745AC94931C99F9EE86011
DCE37BC8D73588E3BBFF9C56118A7E76C1022869F7145B4DCC277287569F4126
93870DFBC90B259B7BF65E517A93174CBD3DA0E33B6889AB2AA022980C8FDE48
EB72DC76E29A5C8850662F4BC26CEDB3899282B4EBD50138D95AB800F00DA1E3
2914F64802220A86ACA65ED812D2E9E775B29DD4EC7A1379190753A5F66F1185
BA13363E3E22A2E773CA536CCEAA13435FAB6A85994BA52B3EB8A7604B55EAC7
3A5D6689B7B2C1C06E32563DECACDF669CBD972E384B3A1BC90EF681C2A36960
FE0974A17A6E88458CEDEFAF962200735B8DA58E429F9B6CC5BD138D391EBD7C
CF90DA4936E146811125728FE1E69F880241BAC40728E98B81521AAB88E444FC
216850B3402534C9703D2EFCF404DE6BAACFD568F6456C21CA2E211243032638
409ABBCE1BB73AD731AD29AF87EA9676D54762D992D9EC40620E0091B3AAB071
0DC0AA29540AB4730F9400E20440661E6A77EB096BE825FC041A80F2276BF94C
3CA417AF658ED4E5F61BBBC8037111772794C6D0AF265057E7806C37063A62CF
37953EC2BF45BFA0396EF6F6821E7FCD48F4BE3068512344B3C08FC405AC897E
F2E5758828924B8B50187B38D1C137DAA3C3763EA2EB7E4101441C35D8DD57E0
12DDBBE7D36B74E8A69CFE741C8EF31EDFB174C834DEE539216A6AA8AEC5DE1E
DD6B3350B8052B7E02E258E5D0DEC96AF63B9473A9CBC552E19D6F8F349C7ABC
F79A13593774F1AB5D6DACE9BE3DDADF5795944E0E49EC1811A712E4911D3601
1077A902463508D75328CB9A8F7BF8EEFAB1A094DF76229C827F1448D0BB6EA7
E4262D23983BAA09CFA6C234648E472B3239F26E6BD614CF80478B357A78405A
99CA16220966E58416776E81384F55D03A993B5216D191E4B4F6822EB2E7D304
89EACE87F1FF970DF619B5B1C2CB984AA1C28868008DB95602DDDA43F035B357
0F895524FF447E7AACC525E473AB698D73993A76C89B49F29A3B078412F6E708
FDFB5C73188947215F1C52A0C9B20E39F8B70BFF0FAC22676B2CEB7E8566521F
95B3E185186FE49DE3E8A0AF4D7098E9ECDCA501CCCE891D0D45E851885862F4
16AB89F56062C2AE4DA8BE03EE80995F612E6AC695018143FC64B26BF9E4499A
350EDE3A306571D1FA0BB2A7F0B6E7E2EE97768D3849B221571FBAB194122EAE
6C2FC7A2C4C02B62597F79F7886FF5F7261043938903A9DDB7C1E681E2B7501D
1B530F4C605E8D44AD90059C7BEECB079DB1DC5C74DF969F1D0BCE57F423BDED
56B91BB4DD4DAF83FAEBC40D79D955485A055D6729B6F352671B3459ECD74849
AA2A9BB05D1DD64B86B2F395E759732AFE971E417965583AA2044B185EA535E2
1A120A0C6BE42305AB113889FCC87C2AB7BA36491F35167AD1F5D461BC0D520C
A9B4DC422F30CEF7B230357BC3BEDD72C34DE759FF1D88C71A879608B375610D
E2BA8A9F856FA5A97BB2B43E051FD53B47B8613BCD6CC2B841C9C6377966F4A1
3A96E6AB835419396F9A65987BFE6AA1A63FCA4036180E163EB459CD93B5F890
786689206D38CE75A35ECA86BAB5E7BE7B52F45731FEA67EF559ECE412E7E6F3
63F510DA24F647C8693AA196D1AA428BA8D9A9B265E581761B70AF9A66976C0B
EA8D553A875BB76B2ADDB5FD6A1D5EFE69D4D61F1185BBEDD140F506886EF95A
E17E728325C3C7147CABE1AF0C460B22BCC8A2B4DE8B2C3CE438576305F2ABDC
5216406E16CAFF446CB79B3333E8B90DE9984E14509BE8BF7582BF15F377E149
11C6A3504EE0743979E4BF062320BC72B83906524CBB0C9209B0B8DFD1A7D838
41D8E6F870AE220E3EEB6FE963C066190FE5144B81616E67055B670E4420546F
4D3B1B4181809868F76680462261AE38ED42E613022CD4B8AA9EAE16CD83AA19
B621D18B3604375553518D40808CE3B1F3078ABD5430C84C81E61DA1281C6C80
0278B8C0D77FBAF5A3F2E2FF7A5C9C520105704D421F8329A44E905A75C367D7
A0F48090A776BD692BE01C0DE27C439F5F8275DEBEB7E5BBA7A574B1D861FC61
960605EABC659B8F700E6CE6D27E70A0F37119FAB70050603F98F53F3A67E809
5C7A5CE37EF9CC9B399FEA01A24C7E8DCE9087AF0C952B653C140822708F858E
A93FF329B57E1C863719C7AB5C0CB3E726C48C12D0329B8B23A14C16B581B811
2ED07562864305A88C3DA193D92CA50B56C2428B4A7A21AB0D745A52DCD56CB5
E16BFFA465B7399694B4F242F92B71C592221C2A71C6D667922E99CE52551A93
09E9672487BEEC66D25985A66B128CE4E044AF21C2F5C7C4B09E25037F26E316
4345AB2189F3B235E8330C529B484278D6AE6D01FFDF3077471B35A314521D52
542229BDC58BF4983FE4800EB17B60BBC51384BAA0E5753AE3B0E39C7DDF5C8C
7F16E2EC6F311E8E7DD6F7346AF7E47FA76945F0CA4F31549720CF65CF0F6733
D8DFF4176050C9A79CABB188627F6AF169D424EFB12A1E1EB64971012A30240A
14136639772A33B6CD0A2B871989C44E679625AB8F5837FD87E3B45511689846
61DE869C6CE4132B23B346EAD230FB15407484B1BCE57935ECE5DCCC78244DB5
8ADD591CC50D6A26B8325080C4FBDB01F141BBFE7C70F905F9559B0ED8C0A709
3755326683C1E423CC273487E98CDE77B3956DE40A03C9E520B0B41449B99649
FBCDA769846EF5BF95009F4CDF09C0DF9F00C97B9AB09797DE2A895AC7C5D1F1
D1EB6611E200EF1B38494F94648A2945777F571F29582E5EDCD0A8C9D4DE0272
E77BAFCFBDBD480BEC75D28D1CFCD7BCEB4F184ACB15D71CA4B32D5E19340CAF
29F8E7B1E67353024CF6F17C02BEEC7C1998931359E8759B55C9125812533F55
849F29BF6239241868FDE4D94D8C04F36C8BE13C01E2E6549C368433D5130036
C72BD2ED5731AA78300F9CC290AE2124F445C2EF5E4341ADC4EF1C843285D335
C5188E97E299E7F5B8AE46071423AB6581A877A957E064994B44348818B81FA1
0BDD40AEC2CDDE0F46F8A75E11F09A7127DFFA9ABFF8C8CE762C97637F266B01
90540854E6C10D6BFF202984BA6ACBBBB3A3A6F04FF2316A8CC804CAAF630099
DD0D47696B0EA6271BCEDEDE76608C66316A5463201679EA4BDA1C8B403E1E38
A630DD07AADA96B63DAC0C75D45E2AC925ADBC03D6DCF0D796F41E2C461D69A5
82BAD3E0E84D5E03F4CE4CE71339DB33CC1E6D2AD1880EBA3BBAF12B18DB5D28
5568968A0421593970BAE93ACD2C6137F9A1971DC9C663C0E29C08932E898C7F
34E850DA7DBEA26A990E0889785C5184A13A2B4A29698E380828E8E6CFEB4CFF
510C63C10FB43CEA514910FA600B580BFC3E1D0E2E58A729ED86DCABA44BBE64
127261675662AC0BD3079AC635B3FD86175214D7C62A6EDB0B9F56FD5B711D9B
072F4B826A68015370383F7DE0716588A59AD7D11407DF59310394D27C03A6F6
070FC9A3FC9CF57C6AFB258F731C63F6CDD3D7D11F73E4E55E844531C80E725D
A58A2B2E6ABB065C7EE43EE1550864662BC9B41D0A96E823CD79FCC4A820A1BC
8E39325691137CBA49E9AC3EB039ECB4C3E0F7EFEE6CAAC46C540C6D894F780C
869A4DC7819D2B98DB63EA183F062E8DB131486F58BDF9E0892B0474474DE3FE
98DA9B8703401A3AC59E866A2F8C781E6F30BC581F8ED296271F45284F6C369A
7C3F2CF40966227FF17BBE8250986C1817B68A76688D0C2AE7266C4ECA1955ED
5A7A43825FF0F91AB9F02A36156DF6EE5B9E1CB7F2FFBE202A7BEB7DD4A17C2B
176BFCECC9687AD244655AB1A44E42283F5C6D2203681B97345D891DAFBBBD9B
6B95DBFE34154DDC6FFB00AF3DFC885DD8F8C64CAECABF8616AD950127B44D7B
C52B25386F78F29009DFE50B98C69B73B3670741848DE39CA44614CE34A69F67
60D48C9527C6F01AB40A252835A011EC46A6CFE5F4DFEBBFFDEE3E46DD584FAE
BCB21CCCE237BE32CEDE383ACE9D15D860CA4A2A32038EB0F07C5216918D23E6
D1E6615978E3CF7A02859FA1463BD2875E084874FDCCEF6BB6C87F39D05055A1
1F52B9D01C36B62E91E66C00C16EE00FFBFB51C6B7166EE7E876DB7BD633B37F
A8560FBDCA36B17724BB673AB6AB75F1917B0D4B2550E12CC5887F385B452000
66F78D7955748F193A785D603F3E92A3E55B8C99186660EA2278074BBD355B97
D2C36320D96892D19735A5EF0D34CD63BD07F09396117E4EB86B640389216801
FC168DB39F98C8D21E3B05EE3D3B976AA59B16DEEC3145057C09C41D27663CFD
4D46AFFA89C94A2EB292F246C16EB4EA3C4BE82F029FBC105828A2FF330A4B39
07FD5ED52EBD4B10AA8B291AE407DA31D739C9DE6807DC1ADB33E6BA346FE85A
343636F8513C6651B39C8264FCDAA6CCCD7AF012276F22687ADA3957AB0AE33B
E67007CA94C765AB9825A8F1C5AF5FC66C36F2AF87DE574CBE6D915164C00050
3BC49738C9A44862A5CB7E625220788BCD8F6236EF664D2F7B61662AFC35B3C4
2D70A9FC0D7ED994B7FBCC5EC454331E8FCBBE710F0582F112DB08E4776280F6
69E93B30BC619460CCF72DC7D5B56B269A41F4C5C3A604284934239D38A4030B
025593AED8176E5639276E2609B0A5E175CED123C8AE9488A0F6CB105A9D57C9
40D445F2A983CB7E58E15C387D53A3237A2ADAF04593B596D0D6D74B1E85F1F5
16ACD515099734B256CE4E25211B01292AB64647A4849D90C1F11B4186595521
628F42E7E87ABE2256FCF39E70A1B077FDA78A88919CA344C54C65E3F99ED125
C39D893FFC670608E79ED7A0D11C2BE241B610ACA82C5110D8C6D76F9B09035B
F5815FCDF24DF49048411B423A915D7CB892F42D3765604582B46FD1154B72BD
4B80551DFFB7B38E0F12A8EE630B14B01FE93A3C913CD7E4F4790661A4671DAA
5CFF5D54F8A5075434B1FC97FFC385C6E7412220026A57015ED6806B8B7ECE06
028DF61F56A4E21630C326F7516B08654B7CDA6686CEDA29E1776CE11E9CB5A9
49F29AB50B05BD526EF94552FE00F9B093E5B719685AA2C6CCC06569E28C38F6
5FF2428C83E841AA96071982CA3BF282E84E8FFA4F08F150723BAD5AEF0B7D0C
532B87BDE9B75666B00E23B0C75888011D8444A082FC735BF81ABABDAB5CDF25
F4338DF9198CC761E03D8325F143FA1702EDC618336A54A2A52F3CE06F1C4835
A31C281EB0CA6176556F8894F5417093569C5271632E143785174571AA62D957
005D586A79B8A1967BCE0D6B8848028D1C064919E5E34DE690BC352B80294AC8
4E73047F2934240F7B46484AB38480BE0804BCAEF283C2D294D4F0880738C37E
268BAD394F11813E078AD02FD39180A6DB94D8CBC64F2573B31AB0E0721BF6B1
E0B7D113C3B9C2EED92663932E56C35E3523AE2CADEE054069832949AFFDE600
B55112C7EA5BA9DC30EF984C21016409C1F04C272D8783BC0C2CBA0995DD95A6
2E4A211E0A774D34D6B5EED8F04512A5FB2DC98E44542D4AFFD06C20C5D01936
1DEE700F86BE190A2565AC5A02BB4BF41D942300FED535507D3BADCB3291FDF1
7B5D635F9DB3374D921B735AC42AA5877DB9144A0C8036907C48FC4121163769
AF766C1848345AE0B013205DF6DAE8B9A1E2EEC3E4374F7C5436A00D4A9D055B
3DC162A6E1867C6C4B223C903C0E140D13843BE3A07751E1E2EB62524B9F13A4
E49FE74F7CB6C132D93084AF2B4E51C894218DFAEDAFA585D343B2C2005DDD22
E1050155D56829C92095B73649050369216B23C85D6F1B27E20CBB47931BE4EA
4276625927448E5F4317783BAD48B1914B86EECB13A4BD1EF3CA2293CB81F252
B69FE82F89C90E60C4E001328F2FEC7AFE8D42BA094563FE99B2B64630F7E7A3
AB42672CAE42A6D6011B10CB8F372CABA8D7F9196D74685139B7776A79692028
24B49258651662F5FEF93D9AF2116A45A95730BD98A7EE9E8DE0731F0B228EBA
AEF77B353824A5B31C0866448575F6D3989991898A020BE7956A39545246631B
0A6A56DF454BA4D87D48E6B1F4428A59DAA5CEBFE998249291D9DB17815219B1
FBEC5570DCC0DE74EED7E56C05A8ACEAC3B6BD3A0BCDA2403BFA552913826A5E
2706AE87157D3F5A738CCA3A0976D8D5208E0F04BE5147F5A898E327E1B75B6D
0298AD1617F2F14FBACD96C1B279B191EE15F861F9BB1C3FB5D5882F227F5E52
0D495B1539E7C88F6B44F0C51306332E36792E349BCC81FA5B0C18E2B5E109C8
8E1AA748FD380BEC8692F135BB5457972AA189AF811123B02F00C83AB6FAE3B3
7B314F0183AD0656054A68A5859B1CD1BC80516A86C6889FCEA22FE28E9EBF45
7B4E36F864DC472370C835BD38A08E1E4C20784B28F125BEB88B722B01FECC6B
315512362B2A5803DBD487B2126866CB3C9F789BE4AAE034507BB9F3589862E9
F21656E0AFD61E267734BD1479C44E70F95804837DFE7889A545FE647EDAA2F9
6FBE1BBF625EEB214C8285E2FE24D1A7C592D9EE256588235A1CC4523128C587
4F6C8518EB98C0D3E5F100DEB11AC03032B32ED0A85F2828FBCE8E4E65E779A3
F0932679D34AE11C102E9BAA385466AC97F5F8F491007E4BBBF49D283DF8F93D
8B1C9F2B0645108880D144A5632C218D594D25B86A3B83C90397189E21E65626
53773127EB84BD240194BCE3D9CB3BBDBAE13EF4114A3961BCA927AB1F6A0397
646229DD1E852A5787C4E3020B90F16415222FF8020535D2D98E153040C8E053
C3F1EEAB0F5798C84517DA2BCAE1CB3AC8F3041E3BFDE48432C3200F17D6613F
34F926307A4DF103DC38EAEDB8D3DFA457814A86718DC1FB070D61C1BA44CE3E
751B7435990120491F0B2C86CCCAA04EB3FCF9B1A5E3E4A7E5997315E658973A
318DF3683E0519B7DE34B4858A0BADA45AAE16717B7C2FD5C805259D38621468
A01C82396548777501A607B66CD661182398A170ED1592143F01DE8CCAD4F74C
D766B6C4557E56245337AEF05197D5D40A8B253B8A7DB9E5E593DE52666FB028
8E0DAE343FD99521437E3ECEC7D8082F6A1A7F0858FB3DBFEACE137A8EFC2EB5
733D2616C68BFC2E2CC38AD605B96399C9C9284DFCEBC5237C2025D7D65DE254
FA98E1C502A9EF91BF4B8419345DC5C2B8D3E716DD91A6FC4C7C89021936CD87
DF0CD9B5E64328E013A365099058EBCB6EADED7F4FC738477E24B08A810B45AB
F3A892DC1B5EA8515892D4FA8FBD4A2753E2AFDCE2DDD9B779943A5043B49B6E
49A815794F611F6496A0FDFA4601139DAE6E3B36DE02234FC4B7DEB9268301FC
549B38947C7B6FE4483CF4FD7F63D6705E8F940E94C5071576D815ABA5B93391
26DD102524B74D765F3F9FA0897EFE0E1268A9B98F4E0F71A2728923C8C54DF6
BE5923CC00AD9F2F72433A61EDE6EF689D09465CC55CC6DEC28A9CFCEC6F6C9C
E58BEEBC704A7169D7C30A307D44AA6061EF7555A61582FED79BC5D1462FB7EC
C7A39EEC2967FC409A708EA090467F91BFFA0D95C43817FB72F3126492C5E382
C927B47BA01B8EF63C2A126BD39283ADC57D64C75D9BC6ABC1B1B15810D29D41
57F7EA5AE7A19F44F3E268912A091E81F829D8B22CC46F48E15B60685CAB2830
35301DCD5A042507928E93F13A9078D11AF915EED28A636809D16BD2612E7DA7
53DF94F9E404075996B400576D366227C2C1D8D8BB11CB5B2B8BC63F43E58499
458FFBFE8A85E4EA0D70D35CB23A91E1E8DB292D102885CA8F01CEC80E094163
778A6CEE82A9D2B04126C330F598767AF05F28096163087CF76B47F09226E13A
6997936A3B6E6EE8FCE5F742A6015516DAA1A42D0A18458C4B8475E5F1653A1D
F4141A8692341D499FFBB46EFEEDAAEE8E19340171BB9DCABE3963E96C799DEE
F758C0B66BBAB0128B7B0BCB1D1B4C66B50A643D8652475195C21E140A9D7ACF
5F592085575C2682116332C7DFABAB3C01BE4EFC95F7CB61A6CFA220DC4116C6
054FBDE7CA66E3D91B9400B802562F1566DFC8F2BE2D0C9EDFB66EFD06B15CF4
0BE37912A7706235146463752F15B183550A902344E38B36C35F28477D020C9A
DF2DC30586FAAC8CDC5D0527494D2CDA2C5D71A605E08BBE928754F11D000FEA
783B7C0879742B4496E35D080996FCF211DE3ED640AE3C4FF0397A1F13650E34
38D14F22F02D60DBA0754DD95BE0AA0FF688CD5B59CF0556B14E32B0F5CC0E1E
F52A9C694776594B4FB45BA1C3FE74265BA963B5DF5ADCAA748CDB377848AC35
412B7F0EB2923D8A67C74AD9054E15F978694AA7589AB6A1A16E4FD436ED95DD
569C7144CFD711AB21878A2A2BEFC9C701557B39674FF33F0E8B2EA8336B42B9
1ECD2796841B4BE62E7BBDB16A8BF0BC1583E0656CE3386AB200E65DAAE1DF4E
6B29FA79F6894D243B9FD9DB690D27420D8158B1A386FFA77118CC22C3825AA5
F68B7E9BA5CEB1B67A837F7EA9F5473E38F404697EDADB09A469988BE596BB81
E07A6DCB53FE73BF648B78B43352CB4E22098CC7AC8EF7339D2D668E6C5EC61C
6F0CC93DC8AC3AA305E5C2B9D4D63136E21B95565FA9F80F4C76375F1DA2AE88
E63488E2EE21094CEF8C182CCA271DB3BA05CA1366F1CF159C4F8D43CC9CD73E
AD4C8AE30F764845BE04146CEA03A5EC12D33A2D0EA7A1657D37D8FE7B8561BC
DA0274E62FED8E4A8160149E407315545EBA8C4398D84CDFB5899622D4EE0F3F
CB2E376613930C85A9C5D1899C39B08CEF530347D961148251AD0A29FAD6FED3
CE370C0ADBD178884AADF2B325BCC31B6AE318D557099AEDD48A9E7B4B21DC64
D104505908B6482EF1070EC9528F0B67FE6A7AA02928841B504C97D20C152E90
3942E03D9261C401722C94117729D31BA26239D357D4C7FB22FA33B9C1D9C070
42F8761A59B3AA05561CB5362A2B7FBBB55D1AAC09840CBA6E6FE8B57E75A369
03FB8AF03B908F8247E6EC32B14DCCC33D78AB82C4B4329E5CFF1F04F1CE0F55
16F1ADF06BC1876A33EE8634E6288A186C8EB4F79C2EE3E177D2762176D82F60
79ABD4F7B6946BEF2F658368A9A2CBC7EF04FC9ED5CFCBC8A1DC4ACA7A9B7F6E
36AA913561D7B8BD69A0ABB2DEE91D0D28D79DCE8484DD5FB68F785E406B2A66
A30C5F1D8E346AEC3344485A07E30327D9108E5A99BED7D67923457F9CB71E31
4240A344E64040E9B0659417A074525CB7CCC83BA86F145A5F15432CE91C71AC
C5CEEB22B68130CBAA317F450CC4F8A4AF8DF073D2B0DE4F056395578C0BA9A3
3F1C12A3927599BDF43F26329F4525B3B599EEA6D183D833EC66AA4812D7BCCC
06A3DB35A19097AB7F8623C7515F64898F9DA16A582402BCACAD2687388F834A
E462E3A3AA072BD582AFF453A17D6482D9EA95DCC701F61E12078DA1AAF886EF
5ABA0FF79BDDB87FD49879A5C31C31FE01A9043AE6EAECA8F4590B7DAAAB8482
E22CB3CA7DA0B5D6550A5CA351B5DAF532371EAC598A9142404558E1019109B1
3D787FC92FFD42BAC554D2737B5634984FDDE2A953C6886047CEA577165F2AC1
69978600755FF345015247A6EC81DE922E54AB05B2F00EDC05B0D1CBD60D94F3
D4DA1E445E6297FF8C2DB833C746F6DDFF79228CA67EC68BDCF4614499D8144D
FB2999E2B0D01703E9304A27E994C079278111BB7FA9DC0E90CF6ED7D2CC6A1B
2AB874582B616B758D8F334158596DCD50093B5BC70574DCD92A6BE7FA84E1E3
161973FDD5DC4049C2B1204947458DB45A0A7172297E2F560514AEE0A9113634
B850E924966706D4BB63848D8194D97CDA7C6C22AAD843FFEF39E58E0063119D
AFE67C255085CF1A997A046BD8B7F27C54769F37758A481B13F5FA82F8F1A3B6
D79DF13802DB2A235E5B0B823753D414AD8F28B3125918375A963C26B2FD0824
AF70C708D1C485092464AEA46480DB6536082702B5A6CA332399A37F5BB4026F
03E924D68011B5B166E7659A92F37291B996814CB4BA7CC0019FC4490F759EC0
F1443D4855C31A86B8C86479940C6EC80FEF13C5F4BF0000533690AA71FF21BD
B7FA7B29C62E0891A377A55F15CE2F45331ADBA2DCE0C23C063158BC4AAD84F3
BED62B2965940D7E9EA5E524032DE4425F88CE7C62ECEEE0ADF6B7B5E4E2E1B7
1EF335812C852144B757EBE4B4D19AC4DB9B918FE7193B8E2E6E49F9F059806D
BB51DC4277F8FDD45418BA7D7B7252E0B31238A4D7633A2F4531458E5339E209
358BBC018D5BF08B90025447505B07BA8EFC5C7FF839678D0B84331F32CDF6F8
C5710079E1E81DA3B74B1A1D3D90E96CD7E0EE40A73A20FADC0AD17F8DB193F7
0D56F1135E3CB95F9E1C68AAD2EEACD671FB4352554BCB6D7427618B0FA248B8
0C6BC00C4B51E0BE77F3ECCF9DA0D3ED9A03F6E2C441E4B9D634FA2749EE2C1B
E7578756EF35E3F774E0A73C4B2EA089171DFE18A0F7ED83C6E6DEDD801397CF
DD8ED7652C401EA9DC17EA92093FE86B097A10F120F8E3143189624B1B23A9A3
CEE475D0260E519DC7CB14C52CBCB99B6671B1DC9D64E3646B86F3F1CE756E6C
FA264D6503A3AFD9CCD59C6334864A1A17543546AD1C6069FF310AC16331EC67
30D800F10C43A69089648A3D9E279CEB0DFFAC4A94907579A71D67B6522A7CE3
9F693A6A23BA4F80C5C6AA3B00BD84ED91F161D4D799CB7B923AC2DCDB52E39A
581CD7DBD1837E32043DBB2D354CA71199F6993B5EA01BDDB5392E0315E7EEC0
74285FBD88EC4E8D225E9465358DE19F90B260AFE26C1399EF3C85AB7D78A3DC
FA5E07ABEB09DC96912E7CDFA7F6DE8578832B1B87774B37312FB4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSL10
%!PS-AdobeFont-1.0: CMSL10 003.002
%%Title: CMSL10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSL10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSL10 known{/CMSL10 findfont dup/UniqueID known{dup
/UniqueID get 5000798 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSL10 def
/FontBBox {-62 -250 1123 750 }readonly def
/UniqueID 5000798 def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSL10.) readonly def
/FullName (CMSL10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -9.46 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 65 /A put
dup 67 /C put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE32340DC6F28AF40857E4451976E7
5182433CF9F333A38BD841C0D4E68BF9E012EB32A8FFB76B5816306B5EDF7C99
8B3A16D9B4BC056662E32C7CD0123DFAEB734C7532E64BBFBF5A60336E646716
EFB852C877F440D329172C71F1E5D59CE9473C26B8AEF7AD68EF0727B6EC2E0C
02CE8D8B07183838330C0284BD419CBDAE42B141D3D4BE492473F240CEED931D
46E9F999C5CB3235E2C6DAAA2C0169E1991BEAEA0D704BF49CEA3E98E8C2361A
4B60D020D325E4C2450F3BCF59223103D20DB6943DE1BA6FC8D4362C3CE32E0D
DCE118A7394CB72B56624142B74A3863C1D054C7CB14F89CBAFF08A4162FC384
7FEDA760DD8E09028C461D7C8C765390E13667DD233EA2E20063634941F668C0
C14657504A30C0C298F341B0EC9D1247E084CC760B7D4F27874744CDC5D76814
25E2367955EA15B0B5CD2C4A0B21F3653FCC70D32D6AC6E28FB470EB246D6ED5
7872201EF784EE43930DC4801FC99043C93D789F5ED9A09946EC104C430B5581
299CB76590919D5538B16837F966CF6B213D6E40238F55B4E0F715DBD2A8B8B8
80A4B633D128EB01BB783569E827F83AF61665C0510C7EA8E6FC89A30B0BC0EB
5A53E5E67EF62D8855F6606E421BD351916549C569C7368AAFB714E22A023584
8B1D6B52FC6F635E44058690002C6BA02CEC21C54CC8875B408A8BB84F445894
5D6B3E4841CA20AF852A660FE9C832F773691DC6F7197FF3DEAEE97418A5ED2F
F2AE65300416227CD3BB03C29003C770CD7D2A7A2E4C1DCA193651C2CDDBF93B
966938788694BFB562AB0010268955FC3555E5984CCAB0A9B7590C77C9BC713E
A29E5BD7193A4E971D1752DDD0F0AA4648E7E87BBCE66A1E836C715C408B07A5
9EB56BEFD4596706CF839BA4CFA90CAD4038C1E006B51913279A2C31FBEE5BD4
A7D74F9103CE6124F5B439CB860987DF44FE17EF88EF1BF62C67060D25696BCD
94ADF08F04E349CEBDF9D3389D870D94CC05E393B3F4362A13A6A672EE5E8F5A
DFE7046AFE3EBAEA58FFEBA4A47BF61F92E2003756DA643CCF2C9DFCCAB62669
E3C2A18D690B64D907F50BCA155A85E47C3A6954C6FF7ACA36D8DFCE777B7929
5F5D5F787B9C247ABF13D6D7B4A8F06BA25CCB342F8A5071325CDA86AD71BA23
8A9695C7D1D50D0AAC267AB7CDBA7AAF46A264B7B081B7E79AD937FEE4969FD5
155A99E652461EFFB4BD010E5885631E2B2497D6B8C43CE77D7D47FE201DD46E
4482FFDCE150A1183C22C004A0AF0E1F42AA6804E038E1DFC8B0A3CE26B52038
44D2E7F759DA5C252489E5525963D68BC27C82247BEB18818C7D4CF0BC5CC97D
8C701034B8DF798DD4CE36C3F8B1FD40B2DA14EA75583852875031AF8C909EE0
04495FDCD04B05A5EFEBA56A8CAC1F57F1B8AB91FB25C81CD51EE69D6E0F52CC
A0E12CF7E3187D67DF71A599FFD895FAA7BF80E2E6B96592BE77AE96905BAF0F
F547355A36C443797DDA7C414AA606CF9153E03450B77D1BA4088D739DF55F07
111B9E11AF37F45B6EDE6D7AC126E05886A57C83886DA87761BE600DEECD1344
8A82BD652BE7ABFE6A0F50ED7C6F4EE12CDFD80CA7A5518692F267C51C3FE76C
567BB8DDBE09A2AF901F79AD02B435287CB8057B3D5EE6655071F67B00438728
C4C3EBD648BAF650993AFE5E2B29074A99ED0FB725D9B8CE8B0292B08A280214
C3AF252BEEAD30C88F72E322FAC3E9D78A1038F5DFC41F7BF1AE3744A0677094
51B77C2D630B67853FE5E975A395C06A4D4DA744040B272C2B88D8B7ED3A2C01
66F503C9DFD3C7DDAC865900D2A4F2CDF517F449851DB1963468D0266D7A3E58
9F6B2A1843E6444274F16A9930302DACD8D2BC4588765099A86BCCD8A31DF0E6
2853114DFF2D19F812F19AE6C2E419D7AC1BC024D1195074FD0C6717BFB389A4
4D5428E7BB2E4F9E9FDEDED7BDCBDD3460805AEA0B5F6460C2FDF19273CE5BA7
5D3AAE0DB94C6AFA8339646191C23B0149E7CBF136FC4C844E025A38935DF256
0A0A6466A45EE8B9B23B6A055856FB084F87C73BA28F1883E3B184CD813C72F9
233B78CA4E125ABD26F29B92CD9DF39D6FDC2A217E2B6B45D9B0A4D536790A5D
BC0903069565A442FA7466414D948AC432C6B75D8D0E1DBB217CA3DC38A52DEF
62E9D5AE9E753956C13819D93148C7683BE4F71B80BC066D8C19FC807FB1C086
B49215DCF56A91A42089F0D063B9981925691F7DDE3237403AC714F5CC3ACA88
DB2F1DD205578C00472FD70C8BA4F752E3923ACF3164D442A6B639902ED060D0
C5777BC20F9A3BDA60FA3BC986C38136FBD2E8F910E32EF36377C9CC187F4AFA
CCEC423DB925B378522B748BDF12D523804CABA83CB5A7ED69FAB9AAB75EE8FC
38D9866E3754C4E2F2B9AEFA804044D878DED0E114EA0E9682FCF38F6628E63D
FE1C1B5615E54FAE8684566EDC4B616F76EEFD6207E0386F06D3BFFA26425F24
303CC7C8A8D7021E7D09B202616988287838C3DBCE3179B4FB5C726E603A47F2
8248CB508F327D1291CF3F08F7C88298DC2D0F778D24304EFCF6E074182BF5B1
8E6551811FD6991971692108E289B61053D6DCBA2925B3903E8916EBD09D97A2
C6D08E89DE4C0CDF7185E1E00DF456B249F0BFC686E04FDAAD2772DC2C39DD53
9C23A41471267F53A87E5C2B8CBCDB66CE0B9844BC506428E6150B48D2FA6363
4FDB2CEDFBAE0B7DBCE4D83E29B2955F8966272CB865EDB360C8A8C19EC62A29
03066483E4083524A1E8D80FE3867BC1AA91753C26ACBE8489AB0E3330206212
93E07ED473DBF457EB8489E66FB4B8ED8A9EA8911CF9308CFE3E6D6F36810EE8
91CCB11BD548617B2C683C354452B9229E7C9E68828BBEC324420DF7C188CCE0
FBB514547553A7E9B38AC265783891F42DA472388569C8E7594F7E8810895A27
06E456902A8D9F65CA808F1FD475D011C4572F8A654BA01D67942226A663D179
95149FFF41A9F55AE84EEB9A6A39C017D7E4FD6EFEEE7FF3CE847CDB064A4954
9DCD273B810E0F259501BA4003A3EC1ABA6E13D24C0B57FF82D6DF077833B6A2
7EA54801BA81DB961C261689C0887FAD83771E55D3D137AFBB21779397E11972
6C6CA922F45AFA5C0526863A5AD8B9C0775CCBA17FFD37A44CED4710884DBC31
5C9D3F5441595B86CF7CA2EEE42AE87896E9E60EBF5F35C2B7FDBF9A9CDAE262
3F48396F0F741E9DDF1D4FEF75E68AFB020D06CC29B3A7B2ED819D1AABC12B91
CA2A65F1AFDDA2F3FB322E0268DBBA024663E49EFF076455338FE31A16B04EC1
797EAB0B49AFFB906A0690A1E8E2F5314773E1CCFFF43E6FB3875AC907F0C5D0
DCB9BCC127014D472463560CA0CB1C2CE614D94177C7A52A5B089316689C8112
CA57E35D716D956DBF9013B1E5B9626456B1433C8C15FA906458F957133B9E19
8D46DC3AC015F7602538C2AE3927C6DDBACF38E59220C2F5AF36B68DE9117C51
04CF7DF32B1AF55B87D1D8A5F4BCFEC66F63B32B6548DEDA3AAB06C5310E4757
78AFF947DA22809B360FE535506A554DDDE5A6F2411246653710ECE5CD3185BE
730520A766C47E1ED01890059882BE1432586864E1A86A7F586438C8DD35C00F
021A741ED47E0F16DB6070ED0C50038632CA4AC2975578A8372A080CC0447C79
CEABDF2BCD5E78564247B0F0025F556DA8FB62125227849EACFB724A4AE3EF57
90C07A5B27D2E59425F56BF8AD84C5F5310FEB1BC73D536339FC2E6A5BE2DAFD
97FC835E0D52F680F80ACA37DB498AACF152B9B44626CD89E3302C3EE1623EE0
F998FA78305960AAB9F483F731F5F67A8C963C23DB8E48FB804EF8B86FAFE7F9
4C09641915FA7E3930AC922682313408BC1607C76751CEEAFD660206A39CF394
40ABE2A313AB7D5FD6444E219DC5C26734D322BA268D330AC17959A390D6C8E7
3A155095BDD66516DAD5D65519A7FB871ECDA77061EFB21F359158B4470EF79B
362C35C06B85C9A9505C8361939C6AC013F2CFE8EEF46FD8CB4452AAB3EF1FA7
DC066557BADC2ADDDF7DDC2A0E1DD4A357E27A2073427EACF9B9035DA5272136
7DF37E26D96ED4B2ACD60596E039BCB15E259C72FEB3344E3EEE3D4F17DF4233
04C1416BCADE80BD483DD8C9AF979E1C7D50C4CF015870703F88B92C4FE46AB8
DE6717B55C460C805B391B84333097E116F4A51F631FAFAB34CFC925BEE8B72B
C9FD5F5A79D8F2295FBFAE649DC6AB47794AC7D73431FFE5BE992F2B5AC67049
B5208251C0E442385A9FACF25E3A98D7F5D4C2A1ABDC600AABE84769CA83350F
9B87F71CEAD3600E02FF9AC03C1B5C21C84F911511A0CF0111BAC7605EE31229
3C526A79D943D92E1CC3C38ABE82D560CFD4172F318030852A5FCC0534B8B3FE
D7365987C8B48A072907B26CDC2108130A33233E8E0BB5FDF14FB55098A10EA2
B51AD9EFB119F82B08D256D396D3263FBD9DBF172D43A90ACD1A31F3E89E8571
74BE98B9560E2CD661A2F93C69FEA3FF26B00772AE2C2C24B98D3D122EA2AA8A
44652CCDF4EF4F01CA7D62A976E23E8A86291F43BFAF38FD9C325E70F9C36CB5
A181DAD30156E98339E6A0498D3420B7BB3B4E651A9090D4A17604AE386273A8
3D4AE8CC18345E6E19DF06BA848F203F74B161D6A8882991CBA7385F308696A1
BEEB0130D938A764B98A2001A38489B1334025EA848CA44A116D64926D460D64
01159E77EA7ED9ECE7BA77635BE564A4ED89315BDFF54ACE6AA1A26591D13CD4
6D6425CA7933769B842192858D10998509396829263290A3A7CFEBBDA3EE6CDD
DF1E492AECDFF7941B53573F01F623CA0A5ECC9D05A3D0954F7AE8CE94AC3B2A
CD4E27519B2E16F033EB732AA024BBAF74626DB55DC74B1FDDB07FAE98B4AC5C
683CFD8744F361838D343B657EBF52DEEE7AEA7565C5BEEFE455DDDBC4DCCA7D
87D6D769C5ECCF14118A14A85A86865777C8E28F953160D5E82844AE54D541DF
550D5F1519E183E0C42BE88F0458CE8087F2CD4B1B49A8E9E3D127C4A4CB74A6
2E73BF4CC317781D03FF04BC36AC0E4AF99E2ACAD20F6F8029DE8A035DAB40DB
17D237850BCDD05931FF4B0FE2D0B79EC5A88FE0236271CCB075BD194AA25AFB
3FB93A5206F61A14602E4EB6F1C31C654527CE0C02D04314DF9AFD710D0EBB9E
F8721B97F5FB18E27507E1F800B5509A58A1A8296C72B7B73F99B6CFE42E9C2F
B63B3555475E562672645CD374BCDE937A9B05A157FB3E74C8297507253E957B
1A9DC421946734CEFA3D5EE357DAC7E9DE17A5BDDEF6B2D2A740BC58128FC514
61154664412BA1C05209EC992A77B7CA45AB7C0EEBF590A5B5652866008CDEF7
124A3003AE6A7CF9DF3C72750CBD281358CD2FF25B162B78CBB971DB3477F8D2
ECA3EE9CBC90323B2C236E375337EA0848CD7CB5781A2B0A42DE7E4D99DB2746
0B26796CEE129D23C76794B7CE21C13C7D4A998B752C8CF43A4821B736EBE246
D2A2BD7BA3351FBCD1B0A501EC1EAABE60D06DA2FE39BE1F0AD629769FDDC933
F9D02F9686EC8C2D7455C26AF4DD3F6860B2289E3A30E1C254AD17D731CB73B2
BF4DFE90CAEECE3ED0CD3FB4C8F4C7BE1C056AB4E9B95781A8968E3CC1010003
75DFBC4AB9F6B27C5A9AD88D94441A8ADF09EB275E5F0E5E6F3BFEA0FA8C308A
8593ABA0645ECA8FDC3F0E264B35D4B0DDB86B93CD8A047FC409E18196B501C3
B003622999C47BAC04FD1ABD8AD359C977766E9643EF3BD6385306B08EE3E13E
7DA5A06AE33D17A3D574C6390DB6E9429754B210F0C349C359559C7EAA2350BD
F61D4D8A92B1AF697BC620FA0351E67E0D9F41A95A47EE0BF210C2C48691901F
F905F65693DCB85BE412F097480F6A7266AE0A928729DA0F691CBFFF3B276EA7
322BCD2206D96E3DAFDFB992CA8F2955F0E8B882729DFF840569D12E4DA1775E
523AA734552AAB6F2F16B89B39F1A3FF0E07EA08D13E612F201716C67F327017
6C041760DA30374434808273062C1FFA2C47B3FB578807BC26537F542040FF77
66C995EF3E8B08B09FCD3EE89C30F157158A739606D2CEAA26694A4F1CEA6633
B54933141CB85C60AB262E2D4E824A3B85C2BEF810DD774F296AB37D0BAE7182
5648CD18556ACB124246A75474B232D712C2358908B5D9A76F82C626BFDE01A1
093B8FA6AA0B32F2CDEF737B28BC0448FF816DDB5812131DA0DD5979D77C3838
B978CC3F6778A4BFCE9A7087EFB19749285AE4C92B99A6649DA349A2E0889D72
6D4FC664522F06C8C4D86D30BA43ED4E42211217D01636A4E17E2A132D26F394
EC34EA12D84594AED9C6CDBBC0908860F39B240FA7D7B3003DB10322498691CF
A294C0FC7ACC0BAD1EED3E9D60AAE3F7429695892D1A21CEBF062C6129B33966
8B2EF6E932F9891DE6028B81C5E9B23278D35B7F0D83989BCBA25E20E9D503DE
144DC485F09A4EFA1268AC5E4B551C5B2F1D51E9B9B9C0FEE585204F869D0BE0
7287D7570A12940A47C1F51AC6134F03B415C30E147C49F89228855D093EE55F
172711F37776E97A99CC4B36E2F10713E36FB279FD3FA5A0EB9F3938F42E2BB9
254EB8F0C0F30391735019E02BFDA21D9813C6A22279B898EAF01AA892B14DC6
5912B9275167AB46EBC420836CC1A5F38A4EB47C039A7BCA62BC3FCE4199FC71
011DD6E5FFA0F3D7F04AC02AF91B9249B9F993AE346572329DA852115BEF8460
B94690E790003586F473F37EAB5AC2922F5F663EE2C3C0C336A8DB71650631AC
0A923A389AC911CB215EC2EC7D50CF8AEFD59EBFFA53A9F1FFB7E6215F17093E
3975F186FE23BB5FA5474C11408FABD223E1E6F62035B5A5C1AEFD8899F00FFB
E729C2D5FD551E80716CEA4E8281660286A802AAE8D5834F37F2EAC46297E57E
993B09251DD7789D3467417E393B7DEABD06676B96241B0E43ED1A1A9FC3B12E
0D34B2B0792B79AA648FE9450C3B209FB6D7D91F50C52A5DAB0BC81A8B698BD9
18946EFF691912D7348D48FE68CD876FC6F71F81165D0C3272DA1A992308D9E0
ED6D0A4DAD679AF495F62B78D462B463BD4A40931172290C615B3B3B6B47E45F
CEBB85E0A6AB6832067CA6D403C239530D07F199788AA4DD52553836851C5228
1072406F6D7323A334E7A7FCA588897C4FBA6D4F7DEB65525EFB74E539C988C3
A685A98752F7198E77E456A545F0D23A1BEF81EF58B02D289CF980A3F17BEC8A
6F83DD90C4A917EB0E5E2B444A608E2E9D2FF80620E16AC1D7775C0A10C1299B
BEE0E1AB24C50647E5CA1DA65CFF3B2C295F0644CA7826E1DC6FADEA93D66A20
DE852F20AD224D28DB900519EB1569837139C833F24B799F7EBE3FDC14235323
1D0BCD4991C861F38DF413A5A5588B73AEC3BBFDB885CE17BB3E97B4E6A79761
93EC8418C2BC4725CD61B5E30C07352F647C3FD50083878C13CFAC241DDCB082
E53703D182068727F9EB6FACEC25F6D901D7309ED7370867E34E267519E22D62
4FC7093448BD0D6B1C43D318A3E14C92032325C132AE0FF7ED707E1FA4A955FB
F5224BE0045CB14ECC321D0F333FE24EEFCC504F7C756451D7693C3E6CA87526
4912E1B6DB935BDE76FBFAFCA4ED473F1D2618812CFF25A6859C626A216603C1
361BE3E071FCFEC2D4BF2FEBDE07DBD56A1BFF8303901168FA06488BA6B76F36
95B0A90D7724E9ADB567C2ADC65CF3482CF47FD1D16F70AA19A97D0F9EFC611C
AEA5E1ACCDA7FB2DF05E9480936281484BC329F0B771775E73F7FD72FE3F45F0
50ADBD03932B38F37A8F0A66B2F739EA3AC8811C8F514E68C5643E4AFF485C81
88475A523D7FCCA5C8809BD49846C77795A38DC6406082000236A4D2628B5932
AB7916D44EC2210CB941B1455867E510E9D8A0B83CB645BCABDCDBFCD51A4E12
60CFFEF0CCA548F654037D01CD631FC4E1F97B4F65DA9AE79D99F13A726E93DC
BBB027B7D175FD17A704C4668F6F8428262959DACA9F8C687C923CFA053804C9
9B2005FA7E0F07D81E52A9A37AD5CEBA8EA63929093ED0DAB9F7C99C82A50E6C
6440387049A0C359218F5268C9A28F581783BB9D29E08772D7252FAFA6739687
22570150178893C418531769CB3D96F799BF1C6415820F96B6EFAB5344E82796
38A0DF66609F5EA332C1065274EC93027D264B84B52AA8AD82E13E2A41AED340
B240D1888CB89FBB748FD10B214773D466A44AA2AF44371CA8B9A4450DA76EDC
0167B4015A270B9983B89EFFA023A3DFFDE181B90C51D70557B0844362B0652A
6345C6EC83DFEFE099455232455943718297254186940D6305C96EE2B9E3E7C9
A622D25E0471AC31A8ED3AF8897BD19E322CFC3BD3860D8A0634081D9AF53A9D
84F4ED39D8127CBCAF9AD48E9CBD10A67A2CD0CF93D61C3CCE7CCB9DF47B6B1C
688CB28EECA115F18C57F641C93B00ACFD043729A0C108D036C4D8C43B697B3F
C84497174543B4BA2BEF48F0989867C5F0970BAAFB8CEA325B00E41D059B899A
59311700AD9F8AB96A95AE22AD9CD83FBA8E1F4540A6DA864C0C87F694EDF819
3176C83002472190B66D5045CC0276E093B212C2A89F8EC0099C967A2C1D4338
E15EF353C433DA0B5D4DF0B80D1C15FBCBE69BA09B783BF691F105887F18388D
108546FEA100BE4C04AA7909FB9A055C74385D2F93630B66C2BBB88EED878CCA
C5F1FE23964E309D5FE18D856B7C43DAC025DC5062710036870DF1FE5DA3FD18
D2601C565B1F8768FB56B3F228D91E40FAC40EBAB2A0CFF99B86D5642CFF3B9B
D743EB5DFD41F04CEFABE5BE93763CEEFF419C5187A0CFE4ACEB3423AC3B27EE
BD637B04EC03AC37C09366FAA65DDDC6A5430343463B531D2F491A545898E507
550019C5C4B6EDF5B6545E77DEB0B0DC788C887668F7ECFF206E140AEA0C9C97
B35B9CC2ACC3B38CF43503B25A27654DE195442D2ABBD22358D8E66E981F4A9E
CBA62FEC076DC29FEB61EAFAC4ABD7A379C20A9DB307D56E1AAE9409F5F0FC31
B9480E34936D65760E8B15E503FBC21D0CE1E330ED2E2209D0910F7C2129737C
3A0FB8DCAD5167FE471659AC6EE65743731A14839D2A4F46128AD978A6401090
37DF6FE1D32E7A5D7BBE3DDBC20C9758425BEDC6B3F699361E75966A97682740
B5F727AEE3E05541055F0D1725595F29D53E94212914700FEB13E9861253194D
A37C7F47803B32A636FB671E4E7D241D4F294404E51860FE91CF4FC253AE7B8D
5B4E117E9E28FC664C25D96BEF7B60CA40DCB687D45B33D478F6020395754B8F
02FE3DB0A7EA813577E29044D7060764248F4DE1715DC25B618A77864949F0EC
55B503F44A369266FFC5D30FE20E491A8F2F1FC4519EC6FFCB61A5D20858B0AA
C065647A998AF00E8419E5FA1A8B05A57DE529B0910D9E3715EA64DF44D12255
6AECFC34B8BC5DD4F867A7945865C9140F424BAEB0F3B9200ED95BB8000C77F4
782F50C7855A440B6533BE96A2BAD8B37902AC2DCA121DC72A942B8B44718D57
147CAAE19AF94F9CA22B17E891F67A7A4457C52A74FB4CBAE5E044ABEB57E29D
D5F656831F2040C65C29C326FC82C3D49668B37B7053E4A2CD1F748BBC8B9188
A079EFEFB00CB443C2709C0E50D8236B28F43060940C86EFA3CB0330CC4E0D3F
15C5E66DC9A07B1297FEA19240C99825CD86B16FB088B584078EDAFA930D7697
BC74F9B4C151AF967B08193183B9C29CDE4A613B115AB164FE32A94BCB658712
E5898CD7CA7A23AB5F440B88C8F9A04D4BA982E6C6FA18D8E157ED36F9D36DF8
61A416F816503FF06F6B28CB378A6E1E8D335FA6E20BB7D033153C408ED9FDB7
1A9387CAD4500B93309D8A81124D017BC94F5975472E89EDB8E9306CCDEE04F0
4ABE5BB07BBD1E112E4ABF68CB836B1BB2F39FE55FF42D26EF1C801E017883D9
A4031E7C3A0627C7D1421805A699DD4F9A087133BA7E08A71E24122F996CCE9C
D2B911AE74196D6B0ECF3E72DDA21803BC6D0776F34B883A845410DE0693B480
D105C1A4586233BCF31DD7465FB4134C5E90DEED41E9EF8867C462058A1C3E58
454B59D1A353AE7F3D6A6B044D51887ED8488A1FF6127475F631CE62BA8C081C
907A41CF491F953F0C4C323F83C64C28F5EBD519F2FF38C8C41FF2090285101C
19186895CB9F580DA115CB6A6455F8EDF59DFF461C8505880DECC006604DE98F
34CACD25B7FC4929C91EC094805581ED4BAE6F91E213CFB20F9E6DDFFF28FF48
234265B4882F8FA7AEDD31A444D5B898A38763E85833B642378593925CA385F8
BD8A1D5C974B07BBC00065A8F40C3D907CBC82DDF6CA2C02C43A802D2EF6277A
8087679A0D26D5C07BBB32CCE1150BBBF6E2912A9E856AF8E2C3BD084571DDF9
7EB2B44DA8B64D09037BBDA8AB542E519B6B4072A91688EC307DB8EF8CEDBECA
24354A9A25B5B2ED61370BA25A3D756F6B530A03CC26178688C7E778F6863CF3
011C50423DAE7712068A8CBB1F3EADB6CCB8A994A85C49F07B5636D5C2A155F5
004FD48011B50C129D219299B911B1870E691EA1FB1BAE5193657D2AF6A66F72
32DD12516408779C6172183AA07DD7F66243031D756F8A68ACFD1C15604E9B40
D4B9D4F886E75CA746390170E1CB4A27C661573B4D0F395C73717A2F3AEDF245
74D6361BC56BD90E5D14B07EE70D3E962EC6FED7957BFCD0F41EBCB40F3D3E62
282F8717BD99C5D3D59DDA1E904B662557188657E8CB10E1BAC2A090E428F2D9
BFF9B3BD3797C0003A73219A363E64503F7A794BD66D52A9AF1F4B42286814D0
51D959DDFC1B2F2A71C26F44720DE877374AEE1D04C57AFE0D495C078FEEE748
0EE3DA6954868164A767A3A52FCF272D38DDF4C0F9AF305C8C946421D546F8A8
C7635CA11103E9B451265379FACFB5F67A2AADA46EAB73025A0E68F43BA9394A
A8F822F1D1C41053B1CEDE8DDC02B77EFC2F38827E59FA56ABA0D5F992FA739A
DA2061E0BD853DE8045EBE4A35E0BEDDD18A0E91F1A8E16BB558193DCD2707A5
3523685B23A3B9D500DDAED9B98B611CC2844839203589576AA4CF38266E50B0
CA522A8AC0BD35F9E7CB7ECEEAA313443A0645773F7B51B49B59FCBDA689E4DD
9443F24AC2C522072857967C83F933C127584E94EABBFCEF366D13E1B95DBE5F
57934B4B21A1A2714C8BD2DE42F31A2EFBD00DBA9ACF904AA4D90031BD6DF0D8
47ABBACA6196A0A09F6570ECA98D80A0F76AC9E8689BE8FADEB5E4F4EDDB7BFA
0DED1676AA5BD6E34D8DA5738C620335B96A9B75791064E259717847836C581F
B7B95FBFC7411A39D84891843F8F9CED0B9B67919B0847EC08066595D68CAC70
8F2FCA4C4152BF744C07C5A134DDED4B4ABA78B18B4AD2088D3E47DDF683932D
4257F788375EBC5A5155DD60EA7DDED1F0338D841891E8F71E7DDC0EEDF4AA5B
C8283BCD56415B6A1EA67BC2602BB5AA6F1CC557C87424A05EAA4CAE0221E2C1
8D5FA3649328AA9E9F928B6D44F60C5EEA3B43F49666B35A700CE1B1361B1713
6B6D52A053B1A8A7FA06FD9350810A8D453E7540FA4D6D2EBAC3987DDB578BEB
17D3689BC20EB4C04D729F8EDB6C2DA5A6394857DDD96595A6663089D298A5DF
3CFDE199C4D5451C1EB62B0D8833A2C1947732CBDECCDCB42DF5C8F5F16BBB7B
E4D6B0E0F9C80DCFD70D59890C98BDFD66F4EC951C16816230B44E632B974D6B
D0CADB7A2737E7E917E62E4C056BA0296AFF5E0FA6CF66EA604562763A7C1D88
949D655EC04B46DFE8F7B2197C30756DB3079371C51EAB41F8D4462A998AC765
4B33D76E7F7486FDEA911411E3ABD9B13EC8049503A565CFE2F2E08DF8EF4B73
309CF113A83B5EDF18897CC4DBC78303BF7E7107BE1584141C45CF0E79EDF315
D9849141962D4BEDEB1018F654559F127FA8029BD8EDF7DA63C2ADAE9768E0D6
12DDE4AD2200377FD6957021F28B09D9C471921563F22A1221C17897FC728E43
3E0FB8E83C728E3893178EBCAE7FFEDAE747D579BB1434BFDB692DAA9C6E14EA
8CC5ECCDB6E8FC7675A72BEE666F696D774BB60BDD86DA9444D090BAE0DC8282
8CE015F7D1A8280909028AE806D9CAFFFCD2B6968AA726DC0A46ACB6564EE36D
6E0EAC2783D399A7D3B551D5083C4AE9A2B3DE1A576A15CA2231FDBDEBF46F2C
DA2665241D06EE01DD8E864FE1C655BF820D4E3F0AA4B83AD5042F3294E85B93
38177167F09ED0E53DD3B0EFA4F12061D06F2D9733827E551F7BD381689150EC
00BB43525F2A75AE1A310DDE76E67098A5E68469AE81A14C39F848D09D032CD1
E8FA31412746CDA68EB85BB58AB189474280A7E8F614A7B6698A1229A1085557
485C3A926A6AE886D2F8CE8E0175F20CBB2842A62135305EE35530EB212809E5
DD53D6EFB6FBC43B00294C29CD9BDF9C68EA0C0811BA7BD851D3B1D06E248A4A
B382E8DB3880C80A0C805C2D6A2E951436F3A78D9F64E40E2FF117852070F65E
D8C826E746EF6ED0E4E1227411EF4C4463CA5A2DDA0793E8F6FE541421B97EAD
3B3C9706D9ECFC1251DCCB587D2C48AA89062A5EBC88351F67987B039B8A32BA
D3DEDED0CA137DD9AF7B7E58912FE6B36D2B8E6E8FD49E98B60CD50A14CADA20
5D10C320428C92DFDE4B645E3D82C4F26E08E28058D99312F95C7E1305325865
3A369DDBAA18AADC220F119F68F621A378E35B23890F8A2408FC617FAAACC309
3B36D1BEA7B58EFA8668B610DCE9814A9F494CD315A8062A58DB86073F383533
01B367499BAC55DDB0C1E83EBA4C1C4E35882B6574FF47F636124CE12CE47130
304496E16498AB46CFA8F29FAD2AB3528E7F851C9F2D556E8C829B3F441270F6
D33537D6010D310D551F4668CA7FE7C85B1600E4583A117310203CCEEBC91C90
F69605689980E61996C78F81946F1C95355B2C521BC1996111018C59DA2F5774
8D2953CB6CA3478ED2F112EC2CD9FFFF1F230F62FF815F2ACFF16A292D3DE403
4388750801403721AEE3ADDFD2550DCCE73F2F56333AD2342DC7DD1E86B12839
5A48BCB4BB2F0FB5F3B2E75CD6145D1DAC60A72BAA83064B99B55D15B6497DB5
7E744657BC439A57DB6C3C8740A5BCA3FB9CB11BEB9D91B2D1BB841207E02B86
0FB429D4B3D1145A4F339A7169E2117902DB8016DE9DCA401A6CCC135DDA44BF
4C89D6142580337C721E9D87CC1D04E7C60D7A9D061861D56A440D98CABBB090
F34102A6C3392EE6EA41FCC4EB455146E2DAFDA6603BF00E881B91D2ECCFC66D
38F996A168669A52788C0257EDC91156FD6E27A5EDB0094D4F8E662C85D94659
EF71698703E329656C6FF521E7E1039362C91AC0EE0D4C01582A299D9610E521
9FBD54D3798BBFE04CC99958A258E34ACDDE6AEBE5E91A765603D902E5F758BF

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (1_introduction.dvi)
@start /Fa 206[71 15[71 32[55{}3 66.4176 /CMSY8 rf /Fb
167[120 88[{}1 83.022 /CMEX10 rf /Fc 194[55 4[35 35 35
35 35 1[35 35 35 48[{}9 66.4176 /CMR8 rf /Fd 149[25 2[45
45 44[51 51 1[0 3[61 91 7[91 91 18[71 71 19[71{}13 90.9091
/CMSY10 rf /Fe 141[32 3[43 4[24 105[{}3 66.4176 /CMMI8
rf /Ff 134[45 4[33 5[55 4[31 1[43 45 2[39 39 48 12[53
4[69 16[71 45 71 25 25 58[{}16 90.9091 /CMMI10 rf /Fg
139[48 48 48 2[48 48 48 2[48 48 1[48 1[48 1[48 1[48 3[48
1[48 42[48 1[48 46[{}16 90.9091 /CMTT10 rf /Fh 138[51
37 38 34 1[51 50 51 79 23 2[23 3[46 51 2[48 23[30 73[{}14
90.9091 /CMSSBX10 rf /Fi 136[76 55 1[41 1[43 2[52 58
1[29 2[29 58 1[32 48 58 17[78 3[82 22[52 52 3[52 52 52
48[{}19 90.9091 /CMBX10 rf /Fj 139[30 37 38 2[46 51 4[28
3[42 101[{}7 90.9091 /CMTI10 rf /Fk 133[40 48 48 66 48
51 35 36 36 48 51 45 51 76 25 48 28 25 51 45 28 40 51
40 51 45 25 2[25 1[25 1[68 1[93 2[66 51 67 1[62 71 68
83 57 71 1[33 68 71 59 1[69 66 64 68 3[71 1[25 25 45
45 45 45 45 45 45 45 45 45 1[25 30 25 71 1[35 35 25 71
23[76 1[51 53 11[{}72 90.9091 /CMR10 rf /Fl 139[40 42
37 2[55 56 86 25 2[25 56 55 1[51 3[52 13[61 3[79 5[33
6[73 73 19[37 45[{}18 99.6264 /CMSSBX10 rf /Fm 138[67
48 1[45 2[66 67 4[31 4[67 58 25[40 14[37 8[66 49[{}11
119.552 /CMSSBX10 rf /Fn 138[51 35 1[36 2[45 51 4[25
4[51 40 1[45 13[51 2[62 71 1[83 9[66 1[68 14[45 45 45
2[30 45[{}19 90.9091 /CMSL10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
/setpagedevice where
{ pop << /PageSize [612 792] >> setpagedevice }
{ /letter where { pop letter } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray 0 TeXcolorgray 960
-185 a Fn(COMS10001)32 b(-)f(P)m(andA2)f(1)p 1948 -185
28 4 v 34 w(in)m(tro)s(duction)g(-)h(Conor)p 0 TeXcolorgray
Black 0 TeXcolorgray 0 TeXcolorgray 20 76 a Fm(1:)58
b(Intro)t(duction)p 0 TeXcolorgray 0 TeXcolorgray 20
282 a Fl(Algo)m(rithms)p 0 TeXcolorgray 20 454 a Fk(This)22
b(course)h(is)g(ab)s(out)g(algorithms)g(and)g(data)g(structures;)i
(roughly)e(sp)s(eaking,)h(an)f(algorithm)h(is)f(a)g(clearly)20
567 y(de\014ned)30 b(list)h(of)g(manipulations)f(whic)m(h)h(can)g(b)s
(e)f(applied)g(to)i(data)f(to)g(ac)m(hiev)m(e)i(an)e(ob)5
b(jectiv)m(e)33 b(and)d(a)h(data)20 680 y(structure)26
b(is)h(a)h(w)m(a)m(y)f(to)h(store)g(information.)39 b(The)27
b(w)m(ord)f(algorithm)i(comes)g(from)e(the)h(name)g(of)g(the)g(great)20
793 y(nin)m(th)j(cen)m(tury)h(P)m(ersian)f(astronomer)h(and)f
(mathematician)i(al-Kh)m(warizmi.)111 905 y(W)-8 b(e'v)m(e)26
b(alw)m(a)m(ys)f(had)e(algorithms,)k(coun)m(ting)d(b)s(eads)f(for)h
(tallying,)j(the)c(Bab)m(ylonian)i(algorithm)g(for)f(solv-)20
1018 y(ing)i(quadaratic)g(equations,)i(the)d(Chinese)g(remainder)g
(theorem)h(for)f(solving)i(congruence)f(equations;)i(for)20
1131 y(m)m(uc)m(h)35 b(of)f(history)h(the)f(idea)h(of)g(an)f(algorithm)
i(has)e(b)s(een)g(a)h(part)f(of)h(applied)f(mathematics,)j(a)e(metho)s
(d)20 1244 y(for)28 b(w)m(orking)g(something)g(out.)40
b(No)m(w,)29 b(with)f(computers)f(the)h(study)f(of)h(algorithms)h(has)f
(b)s(ecome)g(a)g(sep)s(er-)20 1357 y(ate)38 b(discipline,)h(with)e
(abstract)h(questions)f(ab)s(out)g(computibilit)m(y)h(and)e(practical)j
(ones)e(ab)s(out)g(ho)m(w)g(to)20 1470 y(ev)-5 b(aluate)32
b(algorithms)f(and)f(c)m(hose)i(b)s(et)m(w)m(een)f(a)m(v)-5
b(ailable)32 b(algorithms)g(for)e(a)g(particular)h(application.)111
1583 y(Algorithms)h(are)g(the)f(part)g(of)h(a)f(programming)h(that)f
(don't)h(generally)g(dep)s(end)e(on)h(the)h(hardw)m(are)e(or)20
1696 y(programming)38 b(language.)64 b(This)37 b(isn't)h(to)h(sa)m(y)f
(that)h(some)f(programming)g(lanaguages)h(don't)f(express)20
1809 y(some)27 b(algorithms)g(for)f(naturally)h(or)f(more)h(easily)g
(and)f(that)h(some)g(compilers)f(aren't)h(b)s(etter)g(or)f(w)m(orse)h
(at)20 1922 y(optimizing)g(certain)f(algorithms)g(and)f(there)g(is)h
(lots)g(of)f(v)-5 b(ariabilit)m(y)d(,)29 b(for)c(example,)i(in)e(ho)m
(w)h(w)m(ell)g(recursion)20 2035 y(runs)32 b(from)g(language)j(to)e
(language,)j(compiler)d(to)h(compiler)g(and)e(c)m(hip)h(to)h(c)m(hip.)
49 b(Ho)m(w)m(ev)m(er,)36 b(the)d(aim)h(in)20 2147 y(examining)26
b(algorithms)h(is)f(to)g(do)g(so)g(in)f(a)h(platform)g(indep)s(enden)m
(t)e(w)m(a)m(y)-8 b(.)41 b(This)25 b(isn't)g(to)i(sa)m(y)f(w)m(e)g(w)m
(on't)h(use)20 2260 y(a)k(platform,)g(examples)g(will)g(b)s(e)f(giv)m
(en)i(in)e(C)g(and)g(y)m(ou)h(will)g(b)s(e)f(encouraged)h(to)h(try)e
(out)h(the)g(algorithms)20 2373 y(using)f(y)m(our)g(kno)m(wledge)i(of)e
(C)g(and)g(Hask)m(ell)i(programming.)p 0 TeXcolorgray
20 2617 a Fl(So)m(rting)37 b(-)f(Insertion)h(So)m(rt)p
0 TeXcolorgray 20 2788 a Fk(Discussions)31 b(of)g(algorithms)h(tend)e
(to)i(in)m(v)m(olv)m(e)h(lots)e(of)g(discussions)f(of)h(sorting.)43
b(This)30 b(is)h(partly)f(b)s(ecause)20 2901 y(sorting)k(is)g(a)h(big)f
(issue,)h(searc)m(h)f(and)g(sort)g(algorithms)h(are)f(imp)s(ortan)m(t)g
(in)g(the)g(analysis)h(of)f(data,)i(b)s(e)d(it)20 3014
y(scien)m(ti\014c)27 b(data)f(or)f(w)m(eb)g(addresses)g(and)f(data)i
(analysis)g(is)f(at)h(the)f(heart)h(of)f(con)m(temp)s(orary)h(tec)m
(hnological)20 3127 y(rev)m(olution.)42 b(The)30 b(other)g(part)h(is)f
(that)h(sorting)g(is)f(a)h(particularly)g(go)s(o)s(d)f(illustrativ)m(e)
i(example.)111 3240 y(Consider)d(sorting)h(a)h(pac)m(k)f(of)h(card,)f
(using)f(bridge)h(ordering,)g(clubs,)g(diamonds,)f(hearts,)h(spades,)g
(the)20 3353 y(goal)36 b(is)f(to)g(order)g(the)f(cards)h(so)g(the)g
(ace)g(of)g(clubs)f(is)h(at)g(the)g(b)s(ottom)g(and)f(the)h(king)g(of)g
(spades)f(at)h(the)20 3466 y(other.)40 b(T)-8 b(o)29
b(mak)m(e)h(it)e(more)h(straigh)m(t)h(forw)m(ard,)e(imagine)h(they)g
(are)g(n)m(um)m(b)s(ered)e(one,)i(for)f(the)h(ace)g(of)g(clubs,)20
3579 y(through)c(to)h(52)h(for)e(the)h(king)f(of)h(spades,)g(that)g
(mak)m(es)h(it)f(less)g(confusing)f(to)h(talk)g(ab)s(out)g(one)g(card)f
(ha)m(ving)20 3692 y(a)31 b(v)-5 b(alue)31 b(less)f(than)g(another.)111
3805 y(The)21 b(ob)m(vious)g(w)m(a)m(y)i(to)f(sort)f(is)g(probably)g
(the)g(algorithm)h(kno)m(wn)f(as)h Fj(insertion)j(sort)p
Fk(.)38 b(T)-8 b(ak)m(e)23 b(the)e(unsorted)20 3917 y(dec)m(k,)34
b(the)e(cards)g(will)h(b)s(e)f(added)f(one)i(b)m(y)f(one)g(to)h
(another)g(dec)m(k,)h(the)e(sorted)g(dec)m(k,)i(with,)f(for)f(the)g
(sak)m(e)20 4030 y(of)i(de\014niteness,)g(the)g(lo)m(w)m(est)h(card)e
(at)i(the)e(b)s(ottom,)i(the)f(highest)g(on)f(top)h(and)f(all)h(the)g
(others)g(in)f(order)20 4143 y(in)d(b)s(et)m(w)m(een.)41
b(First,)30 b(tak)m(e)i(the)e(\014rst)f(card)g(in)h(the)g(pac)m(k)g
(and)f(put)g(it)i(in)e(the)h(other)g(dec)m(k,)h(the)f(sorted)g(dec)m(k)
20 4256 y(no)m(w)38 b(has)g(exactly)h(one)f(card)g(in)g(it.)63
b(No)m(w)39 b(tak)m(e)h(the)e(second)g(card)f(in)h(the)g(unsorted)f
(dec)m(k)i(and)e(put)g(it)20 4369 y(ab)s(o)m(v)m(e)c(or)e(b)s(elo)m(w)g
(the)h(\014rst)e(according)j(to)f(whether)e(it)i(has)f(a)h(higher)f(or)
g(lo)m(w)m(er)i(v)-5 b(alue.)44 b(After)31 b(that,)i(k)m(eep)20
4482 y(going,)h(tak)m(e)f(a)f(card)g(from)g(the)g(unsorted)f(dec)m(k,)i
(searc)m(h)g(through)e(the)h(sorted)g(dec)m(k)h(from)e(the)h(top)g(un)m
(til)20 4595 y(the)i(next)h(card)f(has)g(a)g(smaller)h(v)-5
b(alue)34 b(than)g(it)h(and)f(put)f(it)i(in)e(ab)s(o)m(v)m(e)j(that)f
(card.)51 b(When)34 b(all)h(the)g(cards)20 4708 y(are)g(gone)g(from)f
(the)h(unsorted)e(dec)m(k,)k(the)d(algorithm)i(is)e(complete.)55
b(An)34 b(example)h(of)f(insertion)h(sort)f(is)20 4821
y(giv)m(en)d(in)g(T)-8 b(able)31 b(1.)p 0 TeXcolorgray
0 TeXcolorgray 1858 5665 a(1)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 960 -185 a Fn(COMS10001)32 b(-)f(P)m(andA2)f(1)p
1948 -185 28 4 v 34 w(in)m(tro)s(duction)g(-)h(Conor)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 115 64 a
Fk(1)p 209 98 4 113 v 246 w(4)100 b(2)g(0)g(1)g(3)115
177 y(2)p 209 210 V 100 w(4)246 b(2)100 b(0)g(1)g(3)115
290 y(3)p 209 323 V 100 w(4)h(2)245 b(0)100 b(1)g(3)115
402 y(4)p 209 436 V 100 w(2)h(4)245 b(0)100 b(1)g(3)115
515 y(5)p 209 549 V 100 w(2)h(4)f(0)245 b(1)100 b(3)115
628 y(6)p 209 662 V 100 w(2)h(0)f(4)245 b(1)100 b(3)115
741 y(7)p 209 775 V 100 w(0)h(2)f(4)245 b(1)100 b(3)115
854 y(8)p 209 888 V 100 w(0)h(2)f(4)g(1)245 b(3)115 967
y(9)p 209 1001 V 100 w(0)101 b(2)f(1)g(4)245 b(3)70 1080
y(10)p 209 1114 V 100 w(0)101 b(1)f(2)g(4)245 b(3)70
1193 y(11)p 209 1227 V 100 w(0)101 b(1)f(2)g(4)g(3)70
1306 y(12)p 209 1340 V 100 w(0)h(1)f(2)g(3)g(4)p 0 TeXcolorgray
0 TeXcolorgray 20 1510 a(T)-8 b(able)31 b(1:)p 0 TeXcolorgray
31 w(An)i(insertion)g(sort)g(example.)49 b(A)33 b(space)h(divides)f
(the)g(sorted)g(dec)m(k)h(from)e(the)h(unsorted)g(dec)m(k;)371
1623 y(in)i(practice)h(this)e(isn't)h(needed,)h(the)f(sorted)g(and)f
(unsorted)g(elemen)m(ts)i(can)f(b)s(e)f(stored)h(in)f(the)371
1736 y(same)28 b(arra)m(y)g(with)f(an)g(index)g(or)g(p)s(oin)m(ter)g
(used)g(to)h(remem)m(b)s(er)e(where)h(one)h(stops)f(and)g(the)g(other)
371 1849 y(starts.)41 b(Consider,)29 b(for)f(example,)j(steps)e
Fi(7)g Fk(to)h Fi(10)f Fk(where)g(the)g(v)-5 b(alue)30
b(1)f(is)g(mo)m(v)m(ed)h(to)g(the)f(sorted)371 1962 y(dec)m(k)36
b(and)f(then)g(compared)g(with)g(eac)m(h)i(of)f(the)f(sorted)h(v)-5
b(alues)35 b(un)m(til)h(it)g(reac)m(hes)g(the)g(0,)h(since)371
2074 y(the)28 b(0)g(is)g(a)h(lo)m(w)m(er)g(v)-5 b(alue)28
b(than)g(1)g(the)g(1)g(isn't)g(sw)m(app)s(ed)f(with)h(it)g(and)f(the)i
(algorithm)f(go)s(es)h(on)f(to)371 2187 y(mo)m(v)m(e)k(the)f(3)f(in)m
(to)i(the)e(sorted)h(dec)m(k.)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 20 2478 a Fh(Implementation)j(and)f(run)g(sp)s(eed)p
0 TeXcolorgray 20 2650 a Fk(A)j(C)g(function)f(for)h(sorting)h(is)f
(giv)m(en)h(in)e(T)-8 b(able)37 b(2;)j(this)35 b(is)i(a)f(function,)h
(to)g(see)g(it)f(in)g(action)h(do)m(wnload)20 2763 y
Fg(insert)p 314 2763 29 4 v 33 w(sort.c)p Fk(.)48 b(No)m(w,)36
b(the)d(question)h(is,)h(ho)m(w)f(go)s(o)s(d)f(an)g(algorithm)i(is)f
(this.)50 b(Of)33 b(course,)i(`ho)m(w)e(go)s(o)s(d')20
2876 y(could)d(mean)g(lots)h(of)f(di\013eren)m(t)h(things,)f(dep)s
(ending)f(on)h(what)f(constrain)m(ts)j(there)e(are)g(on)g(the)g(use)g
(of)g(the)20 2988 y(program,)h(it)h(could)f(mean)h(the)f(size)h(of)f
(the)h(program)e(itself,)j(or)e(the)g(amoun)m(t)h(of)f(memory)g(the)h
(program)20 3101 y(needs)e(for)g(data)h(storage,)h(but)e(most)h
(frequen)m(tly)-8 b(,)31 b(it)g(means)f(run)f(time.)111
3214 y(Lets)i(examine)h(the)g(run)d(time)j(for)f(the)g(function)g(in)g
(T)-8 b(able)32 b(2.)43 b(Let)32 b Ff(n)e Fk(b)s(e)h(the)g(n)m(um)m(b)s
(er)f(of)h(elemen)m(ts)i(in)20 3327 y(the)e(list.)42
b(The)30 b(amoun)m(t)h(of)g(time)g(eac)m(h)h(line)f(tak)m(es)h(to)f
(run)e(is)i(platform)g(dep)s(enden)m(t,)f(so)g(lets)i(sa)m(y)f(the)g
(run)20 3440 y(time)g(for)f(the)h Ff(i)p Fk(th)f(line)h(is)f
Ff(t)966 3454 y Fe(i)994 3440 y Fk(:)1180 3643 y Ff(t)1213
3657 y Fe(i)1266 3643 y Fk(=)25 b(time)31 b(it)g(tak)m(es)h(line)e
Ff(i)h Fk(to)g(run)e(once)p 0 TeXcolorgray 1044 w(\(1\))p
0 TeXcolorgray 20 3847 a(Lets)39 b(call)h(the)f(total)h(run)e(time)h
Ff(T)13 b Fk(\()p Ff(n)p Fk(\))38 b(since)h(it)h(dep)s(ends)c(on)j
Ff(n)p Fk(,)h(the)f(n)m(um)m(b)s(er)f(of)g(elemen)m(ts)i(that)g(need)20
3960 y(sorting)31 b(and)f(the)g(con)m(tribution)h(to)g
Ff(T)13 b Fk(\()p Ff(n)p Fk(\))31 b(of)f(the)h Ff(i)p
Fk(th)f(line)h Ff(T)2140 3974 y Fe(i)2168 3960 y Fk(,)915
4163 y Ff(T)968 4177 y Fe(i)1022 4163 y Fk(=)25 b(the)30
b(total)j(time)e(the)f(program)g(sp)s(ends)f(on)h(line)h
Ff(i)p 0 TeXcolorgray 779 w Fk(\(2\))p 0 TeXcolorgray
20 4367 a(No)m(w)39 b Ff(T)288 4381 y Fe(i)354 4367 y
Fd(6)p Fk(=)e Ff(t)495 4381 y Fe(i)561 4367 y Fk(in)h(general)g(b)s
(ecause)g(some)h(lines)f(run)e(more)i(than)g(once,)i(here,)g(for)e
(example,)j Ff(T)3483 4381 y Fc(4)3560 4367 y Fk(=)c
Ff(t)3701 4381 y Fc(4)20 4479 y Fk(since)d(the)g(fourth)f(line)h(only)f
(runs)f(once,)k(but)d Ff(T)1728 4493 y Fc(7)1798 4479
y Fk(=)d(\()p Ff(n)23 b Fd(\000)f Fk(1\))p Ff(t)2218
4493 y Fc(7)2258 4479 y Fk(,)34 b(once)h(for)e(eac)m(h)i(v)-5
b(alue)34 b(of)g Ff(i)p Fk(.)51 b Ff(T)3383 4493 y Fc(6)3456
4479 y Fk(is)33 b(a)h(bit)20 4592 y(more)i(complicated)h(in)e(an)g
(unin)m(teresting)h(w)m(a)m(y)g(since)g(the)g(end)f(condition)h
Ff(i)e(<)f(n)i Fk(is)g(c)m(hec)m(k)m(ed)j Ff(n)d Fk(times,)20
4705 y(the)30 b(initial)h(condition)f Ff(i)25 b Fk(=)g(1)30
b(only)g(happ)s(ens)e(once)i(and)f(the)h(incremen)m(t)g(happ)s(ens)e
Ff(n)18 b Fd(\000)g Fk(2)30 b(times,)h(but)e(lets)20
4818 y(appro)m(ximate)j(and)d(sa)m(y)i Ff(T)932 4832
y Fc(6)997 4818 y Fk(=)25 b Ff(nt)1181 4832 y Fc(6)1220
4818 y Fk(.)111 4931 y(Lines)j Fi(11)h Fk(and)f Fi(12)h
Fk(are)g(complicated)h(in)e(a)h(more)g(in)m(teresting)g(w)m(a)m(y)-8
b(,)31 b(w)m(e)e(don't)f(kno)m(w)h(ho)m(w)f(man)m(y)h(times)20
5044 y Fg(j)i Fk(needs)f(to)h(b)s(e)g(reduced)f(un)m(til)h(the)g(while)
g(condition)g(returns)f(false,)h(it)h(dep)s(ends)d(on)h(the)h(v)-5
b(alue)32 b(of)38 b Fg(a[i])20 5157 y Fk(and)h(the)g(v)-5
b(alues)40 b(of)g(the)f(elemen)m(ts)i(already)f(sorted.)68
b(Ob)m(viously)-8 b(,)42 b(if)d(the)h(list)g(is)f(already)h(sorted)g
(then)20 5270 y(the)c(while)g(condition)g(fails)g(eac)m(h)h(time)f(and)
g(these)g(lines)g(are)g(nev)m(er)g(run;)h(this)e(is)h(an)g(exceptional)
h(case)p 0 TeXcolorgray 0 TeXcolorgray 1858 5665 a(2)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 960 -185 a Fn(COMS10001)32 b(-)f(P)m(andA2)f(1)p
1948 -185 28 4 v 34 w(in)m(tro)s(duction)g(-)h(Conor)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray -108 1366
a Fk(1)88 b Fi(v)5 b(o)g(i)g(d)72 b Fk(s)13 b(o)g(r)g(t)24
b(\()19 b Fi(i)9 b(n)g(t)67 b Fk(a)23 b([)18 b(])35 b(,)27
b Fi(i)9 b(n)g(t)65 b Fk(n)11 b(\))-108 1479 y(2)88 b
Fd(f)-108 1592 y Fk(3)-108 1705 y(4)256 b Fi(i)9 b(n)g(t)73
b Fk(i)34 b(,)24 b(j)32 b(,)e(t)15 b(h)g(i)g(s)p 845
1705 V 60 w(a)30 b(;)-108 1818 y(5)-108 1931 y(6)256
b Fi(f)9 b(o)g(r)19 b Fk(\()25 b(i)20 b(=)6 b(1)g(;)15
b(i)d Ff(<)-7 b Fk(n)16 b(;)30 b(i)14 b(+)o(+)o(\))o
Fd(f)-108 2044 y Fk(7)425 b(t)15 b(h)g(i)g(s)p 573 2044
V 61 w(a)7 b(=)l(a)19 b([)30 b(i)k(])20 b(;)-108 2157
y(8)424 b(j)5 b(=)q(i)26 b Fd(\000)6 b Fk(1)g(;)-108
2270 y(9)-154 2382 y(10)417 b Fi(w)6 b(h)g(i)g(l)g(e)13
b Fk(\()19 b(j)8 b Ff(>)-9 b Fk(=)g(0)g(&)g(&)r(t)13
b(h)g(i)g(s)p 1218 2382 V 57 w(a)18 b Ff(<)l Fk(a)i([)28
b(j)g(])14 b(\))g Fd(f)-154 2495 y Fk(11)580 b(a)19 b([)28
b(j)15 b(+)q(1)q(])q(=)6 b(a)20 b([)28 b(j)33 b(])20
b(;)-154 2608 y(12)588 b(j)5 b(=)q(j)23 b Fd(\000)6 b
Fk(1)g(;)-154 2721 y(13)416 b Fd(g)-154 2834 y Fk(14)-154
2947 y(15)g(a)20 b([)28 b(j)14 b(+)q(1)q(])q(=)j(t)e(h)g(i)g(s)p
955 2947 V 60 w(a)30 b(;)-154 3060 y(16)252 b Fd(g)-154
3173 y Fk(17)89 b Fd(g)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 20 3419 a Fk(T)-8 b(able)31
b(2:)p 0 TeXcolorgray 31 w(A)g(function)g(for)g(sorting)g(an)g(arra)m
(y)-8 b(.)44 b(This)30 b(function)h(can)g(b)s(e)g(found)e(included)i
(in)f(the)i(program)371 3532 y Fg(insert)p 665 3532 29
4 v 33 w(sort.c)p Fk(.)51 b(It)34 b(tak)m(es)i(as)f(an)f(argumen)m(t)h
(an)f(arra)m(y)h(of)f(in)m(ts)h(called)h Fg(a[])d Fk(and)h
Fg(n)p Fk(,)h(the)g(size)371 3644 y(of)k(the)g(arra)m(y)g(and)f(sorts)g
(it)h(using)f(insert)h(sort.)65 b(The)38 b(arra)m(y)i(is)e(sorted)h
(from)f Fg(a[0])f Fk(and)h(the)371 3757 y(sorted)27 b(elemen)m(ts)i
(are)e(stored)g(in)g(the)g(same)h(arra)m(y)-8 b(,)29
b(with)d(i)i(marking)f(at)h(eac)m(h)g(iteration)g(the)g(last)371
3870 y(elemen)m(t)k(in)f(the)g(sorted)f(dec)m(k,)i(the)f(while)g(lo)s
(op)g(mo)m(v)m(es)h(the)e(elemen)m(t)j(that)e(w)m(as)g
Fg(a[i])f Fk(in)m(to)h(the)371 3983 y(correct)h(place.)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
1858 5665 a(3)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 4 4
TeXDict begin 4 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 960 -185 a Fn(COMS10001)32 b(-)f(P)m(andA2)f(1)p
1948 -185 28 4 v 34 w(in)m(tro)s(duction)g(-)h(Conor)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0.25 TeXcolorgray
20 48 a Fk(So)f(there)h(is)f(form)m(ula)h(for)f(summing)f(all)j(the)e
(n)m(um)m(b)s(ers)f(from)h(one)h(to)g Ff(n)p Fk(:)1597
202 y Fe(n)1558 227 y Fb(X)1561 409 y Fe(i)p Fc(=1)1693
308 y Ff(i)26 b Fk(=)1856 246 y Ff(n)p Fk(\()p Ff(n)20
b Fk(+)g(1\))p 1856 287 337 4 v 2001 370 a(2)p 0 TeXcolorgray
3624 308 a(\(5\))p 0.25 TeXcolorgray 20 580 a(This)27
b(can)h(b)s(e)g(pro)m(v)m(ed)g(b)m(y)g(induction.)39
b(If)28 b Ff(n)d Fk(=)g(1)j(it)h(holds)e(with)h(one)g(on)g(eac)m(h)h
(side)f(of)g(the)g(equation.)41 b(No)m(w)20 693 y(assume)30
b(it)h(holds)f(for)g Ff(n)20 b Fd(\000)g Fk(1)31 b(and)e(consider)1019
851 y Fe(n)981 876 y Fb(X)984 1059 y Fe(i)p Fc(=1)1116
957 y Ff(i)c Fk(=)g Ff(n)20 b Fk(+)1434 851 y Fe(n)p
Fa(\000)p Fc(1)1441 876 y Fb(X)1444 1059 y Fe(i)p Fc(=1)1582
957 y Ff(i)26 b Fk(=)f Ff(n)20 b Fk(+)1910 896 y(1)p
1910 936 46 4 v 1910 1020 a(2)1966 957 y Ff(n)p Fk(\()p
Ff(n)g Fd(\000)f Fk(1\))27 b(=)2433 896 y Ff(n)p Fk(\()p
Ff(n)20 b Fk(+)g(1\))p 2433 936 337 4 v 2579 1020 a(2)p
0 TeXcolorgray 3624 957 a(\(6\))p 0.25 TeXcolorgray 20
1230 a(pro)m(ving)31 b(the)f(form)m(ula)h(b)m(y)f(induction.)p
0 TeXcolorgray 0.25 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
619 1426 a(T)-8 b(able)31 b(3:)p 0 TeXcolorgray 31 w(Mathematical)j
(aside:)41 b(the)30 b(form)m(ula)h(for)f(adding)g(n)m(um)m(b)s(ers.)p
0.25 TeXcolorgray 0 TeXcolorgray 0.25 TeXcolorgray 0
TeXcolorgray 0.25 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
20 1715 a(ho)m(w)m(ev)m(er.)53 b(Con)m(v)m(ersely)-8
b(,)37 b(in)d(the)g(w)m(orst)h(case)g(the)f(sequence)h(starts)f(of)g
(in)g(rev)m(erse)h(order,)g(in)f(whic)m(h)f(case)20 1828
y(lines)e Fi(11)g Fk(and)e Fi(12)i Fk(run)e Ff(i)i Fk(times)g(for)f
(eac)m(h)h(v)-5 b(alue)31 b(of)g Ff(i)25 b Fk(=)g(1)31
b(to)g Ff(i)26 b Fk(=)f Ff(n)19 b Fd(\000)h Fk(1,)31
b(th)m(us)1297 2100 y Ff(T)1350 2114 y Fc(11)1450 2100
y Fk(=)1546 1994 y Fe(n)p Fa(\000)p Fc(1)1553 2019 y
Fb(X)1555 2202 y Fe(i)p Fc(=1)1694 2100 y Ff(it)1758
2114 y Fc(11)1858 2100 y Fk(=)1964 2039 y(1)p 1964 2079
46 4 v 1964 2162 a(2)2020 2100 y Ff(n)p Fk(\()p Ff(n)19
b Fd(\000)h Fk(1\))p Ff(t)2388 2114 y Fc(11)p 0 TeXcolorgray
3624 2100 a Fk(\(3\))p 0 TeXcolorgray 20 2370 a(The)27
b(form)m(ula)h(used)f(to)i(calculate)h(this)e(is)g(explained)g(in)f(T)
-8 b(able)29 b(3.)40 b(Line)28 b Fi(10)g Fk(is)g(a)g(bit)g(lik)m(e)h
(line)f Fi(6)p Fk(,)h(it)f(is)g(run)20 2483 y(one)j(extra)g(time)g(so)
1191 2648 y Ff(T)1244 2662 y Fc(10)1344 2648 y Fk(=)1440
2543 y Fe(n)p Fa(\000)p Fc(1)1447 2568 y Fb(X)1449 2750
y Fe(i)p Fc(=1)1573 2648 y Fk(\()p Ff(i)21 b Fk(+)f(1\))p
Ff(t)1864 2662 y Fc(10)1964 2648 y Fk(=)2070 2587 y(1)p
2070 2627 V 2070 2711 a(2)2126 2648 y(\()p Ff(n)g Fk(+)g(1\))p
Ff(nt)2495 2662 y Fc(10)p 0 TeXcolorgray 3624 2648 a
Fk(\(4\))p 0 TeXcolorgray 20 2882 a(All)30 b(these)g(precise)g(sums)f
(are)h(b)s(eing)f(calculated)i(this)f(time)g(for)f(illustrativ)m(e)j
(reasons,)e(in)f(fact,)i(the)e(p)s(oin)m(t)20 2995 y(w)m(e)i(will)g
(mak)m(e)h(is)e(that)i(the)e(only)h(thing)g(that)g(is)g(really)g(of)g
(in)m(terest)h(is)e(the)h(p)s(o)m(w)m(er)g(of)g(the)g(highest)f(p)s(o)m
(w)m(er)20 3108 y(of)h Ff(n)e Fk(and)h(detailed)i(calculations)g(lik)m
(e)g(this)e(w)m(on't)h(b)s(e)f(done)g(again.)111 3221
y(No)m(w)h(w)m(e)g(can)g(calculate)h Ff(T)13 b Fk(\()p
Ff(n)p Fk(\))31 b(for)f(the)g(w)m(orst)h(case.)921 3423
y Ff(T)13 b Fk(\()p Ff(n)p Fk(\))84 b(=)e Ff(t)1382 3437
y Fc(1)1442 3423 y Fk(+)20 b Ff(t)1566 3437 y Fc(4)1625
3423 y Fk(+)g Ff(nt)1804 3437 y Fc(6)1863 3423 y Fk(+)g(\()p
Ff(n)g Fd(\000)g Fk(1\)\()p Ff(t)2303 3437 y Fc(7)2364
3423 y Fk(+)g Ff(t)2488 3437 y Fc(8)2547 3423 y Fk(+)g
Ff(t)2671 3437 y Fc(15)2745 3423 y Fk(\))1349 3574 y(+)1430
3513 y(1)p 1430 3553 V 1430 3636 a(2)1485 3574 y(\()p
Ff(n)g Fk(+)g(1\))p Ff(nt)1854 3588 y Fc(10)1950 3574
y Fk(+)2050 3513 y(1)p 2050 3553 V 2050 3636 a(2)2106
3574 y Ff(n)p Fk(\()p Ff(n)f Fd(\000)h Fk(1\)\()p Ff(t)2509
3588 y Fc(11)2605 3574 y Fk(+)g Ff(t)2729 3588 y Fc(12)2804
3574 y Fk(\))p 0 TeXcolorgray 785 w(\(7\))p 0 TeXcolorgray
20 3797 a(Gathering)31 b(ev)m(erything)g(together)h(this)f(has)f(the)g
(form)1476 3999 y Ff(T)13 b Fk(\()p Ff(n)p Fk(\))25 b(=)g
Ff(an)1891 3961 y Fc(2)1950 3999 y Fk(+)20 b Ff(bn)g
Fk(+)g Ff(c)p 0 TeXcolorgray 1339 w Fk(\(8\))p 0 TeXcolorgray
20 4201 a(where,)38 b(for)e(example)h Ff(a)f Fk(=)f(\()p
Ff(t)1081 4215 y Fc(10)1181 4201 y Fk(+)24 b Ff(t)1309
4215 y Fc(11)1407 4201 y Fk(+)g Ff(t)1535 4215 y Fc(12)1610
4201 y Fk(\))p Ff(=)p Fk(2.)60 b(What)38 b(w)m(e)f(see)g(is)f(that)i
(the)e(co)s(e\016cien)m(ts,)k Ff(a)p Fk(,)f Ff(b)d Fk(and)g
Ff(c)20 4314 y Fk(are)30 b(complicated,)i(the)e(dep)s(end)e(on)i(the)g
(run)e(times)j(of)f(individual)f(lines)h(of)g(co)s(de,)g(the)g(balance)
h(b)s(et)m(w)m(een)20 4427 y(the)k Ff(n)236 4394 y Fc(2)309
4427 y Fk(and)f Ff(n)h Fk(terms)f(is)h(similarly)g(hard)f(to)h(ev)-5
b(aluate.)55 b(In)34 b(short,)i(the)f(most)g(in)m(teresting)h(and)e
(de\014nite)20 4540 y(platform)27 b(indep)s(enden)m(t)e(statemen)m(t)j
(w)m(e)f(can)g(mak)m(e)h(ab)s(out)e Ff(T)13 b Fk(\()p
Ff(n)p Fk(\))26 b(is)h(that)g(it)g(gro)m(ws)g(lik)m(e)h
Ff(n)3155 4507 y Fc(2)3220 4540 y Fk(as)f Ff(n)f Fk(b)s(ecomes)20
4652 y(large.)42 b(W)-8 b(e)31 b(sa)m(y)1611 4765 y Ff(T)13
b Fk(\()p Ff(n)p Fk(\))25 b Fd(2)g Ff(O)s Fk(\()p Ff(n)2075
4728 y Fc(2)2114 4765 y Fk(\))p 0 TeXcolorgray 1475 w(\(9\))p
0 TeXcolorgray 20 4931 a(The)h Ff(n)258 4898 y Fc(2)297
4931 y Fk(,)i(the)f(fastest)g(gro)m(wing)h(term)e(in)h(the)f
(expression)h(for)f Ff(T)2214 4945 y Fe(n)2288 4931 y
Fk(is)g(sometimes)i(called)g(the)f(leading)g(term.)20
5044 y(This)d(will)h(b)s(e)f(discussed)g(further,)h(but)f(\014rst)g(ha)
m(v)m(e)i(a)f(lo)s(ok)g(at)h(Fig.)g(1)f(where)f(the)h(run)e(time)j(of)f
(the)g(program)20 5157 y(is)31 b(plotted)g(against)h
Ff(n)d Fk(for)i Ff(n)25 b Fd(2)g Fk(\(1)p Ff(;)15 b Fk(1000\).)44
b(W)-8 b(e)32 b(see)f(that)g(the)f(curv)m(e)h(is)g(extremely)g(w)m(ell)
h(matc)m(hed)f(b)m(y)f Ff(n)3676 5124 y Fc(2)3715 5157
y Fk(,)20 5270 y(the)h(sub-leading)f(order)g(terms,)g(the)h
Ff(n)f Fk(term)g(and)g(the)h(constan)m(t,)g(aren't)g(imp)s(ortan)m(t.)p
0 TeXcolorgray 0 TeXcolorgray 1858 5665 a(4)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 5 5
TeXDict begin 5 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 960 -185 a Fn(COMS10001)32 b(-)f(P)m(andA2)f(1)p
1948 -185 28 4 v 34 w(in)m(tro)s(duction)g(-)h(Conor)p
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 424 2955
a Fk(0)308 2532 y(0.25)353 2109 y(0.5)308 1686 y(0.75)424
1262 y(1)519 3049 y(0)491 b(250)447 b(500)f(750)423 b(1000)93
2087 y
 gsave currentpoint currentpoint translate -270 neg rotate neg exch
neg exch translate
 93 2087 a -78 2109 a Fk(run)28 b(time)93 2087
y
 currentpoint grestore moveto
 93 2087 a 1662 3186 a Ff(n)20 3228 y @beginspecial
50 @llx 50 @lly 410 @urx 302 @ury 3600 @rwi @setspecial
%%BeginDocument: insert_sort_timing.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: insert_sort_timing.tex
%%Creator: gnuplot 4.4 patchlevel 3
%%CreationDate: Sun Oct  7 03:02:11 2012
%%DocumentFonts: 
%%BoundingBox: 50 50 410 302
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color false def
/Blacktext true def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
%
/vshift -73 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (insert_sort_timing.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.4 patchlevel 3)
  /Author (conor)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sun Oct  7 03:02:11 2012)
  /DOCINFO pdfmark
end
} ifelse
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 410 50 lineto 410 302 lineto 50 302 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
1210 708 M
63 0 V
5530 0 R
-63 0 V
1210 1724 M
63 0 V
5530 0 R
-63 0 V
1210 2740 M
63 0 V
5530 0 R
-63 0 V
1210 3755 M
63 0 V
5530 0 R
-63 0 V
1210 4771 M
63 0 V
5530 0 R
-63 0 V
1216 704 M
0 63 V
0 4008 R
0 -63 V
2611 704 M
0 63 V
0 4008 R
0 -63 V
4007 704 M
0 63 V
0 4008 R
0 -63 V
5402 704 M
0 63 V
0 4008 R
0 -63 V
6797 704 M
0 63 V
0 4008 R
0 -63 V
stroke
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
LTb
LT0
5948 4602 M
591 0 V
1221 708 M
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 41 V
6 -41 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 41 V
6 -41 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 41 V
6 -41 V
6 0 V
5 0 V
6 0 V
5 41 V
6 -41 V
6 0 V
5 0 V
6 0 V
5 41 V
6 -41 V
5 0 V
6 41 V
6 -41 V
5 0 V
6 0 V
5 41 V
6 -41 V
5 0 V
6 41 V
6 -41 V
5 0 V
6 41 V
5 -41 V
6 41 V
6 -41 V
5 0 V
6 41 V
5 -41 V
6 41 V
5 -41 V
6 0 V
6 41 V
5 0 V
6 -41 V
5 41 V
6 -41 V
6 41 V
5 -41 V
6 41 V
5 0 V
6 -41 V
5 41 V
6 0 V
6 -41 V
5 41 V
6 0 V
5 -41 V
6 41 V
6 0 V
5 -41 V
6 41 V
5 0 V
6 0 V
5 0 V
6 -41 V
6 41 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
stroke 1791 749 M
5 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 -41 V
6 81 V
6 -40 V
5 0 V
6 40 V
5 -40 V
6 0 V
6 0 V
5 40 V
6 -40 V
5 0 V
6 0 V
5 0 V
6 40 V
6 -40 V
5 0 V
6 40 V
5 0 V
6 -40 V
6 40 V
5 -40 V
6 40 V
5 0 V
6 -40 V
5 40 V
6 0 V
6 -40 V
5 40 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 41 V
5 -41 V
6 0 V
5 41 V
6 -41 V
5 0 V
6 41 V
6 -41 V
5 41 V
6 -41 V
5 0 V
6 41 V
5 0 V
6 -41 V
6 41 V
5 -41 V
6 41 V
5 -41 V
6 0 V
6 41 V
5 0 V
6 0 V
5 -41 V
6 41 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 -41 V
6 82 V
5 -41 V
6 0 V
5 41 V
6 -41 V
6 0 V
5 41 V
6 -41 V
5 0 V
6 41 V
6 -41 V
5 41 V
6 -41 V
5 41 V
6 0 V
5 0 V
6 -41 V
stroke 2371 830 M
6 41 V
5 0 V
6 0 V
5 0 V
6 -41 V
6 41 V
5 0 V
6 0 V
5 40 V
6 -40 V
5 0 V
6 0 V
6 0 V
5 40 V
6 -40 V
5 0 V
6 0 V
5 40 V
6 -40 V
6 40 V
5 -40 V
6 40 V
5 -40 V
6 40 V
6 0 V
5 -40 V
6 0 V
5 40 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 41 V
6 -41 V
5 0 V
6 41 V
5 -41 V
6 41 V
6 -41 V
5 41 V
6 0 V
5 -41 V
6 41 V
6 0 V
5 -41 V
6 41 V
5 0 V
6 0 V
5 40 V
6 -40 V
6 0 V
5 0 V
6 0 V
5 40 V
6 -40 V
6 0 V
5 40 V
6 -40 V
5 40 V
6 -40 V
5 0 V
6 40 V
6 0 V
5 -40 V
6 40 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 -40 V
6 40 V
5 0 V
6 0 V
5 41 V
6 0 V
6 -41 V
5 0 V
6 41 V
5 0 V
6 0 V
6 -41 V
5 41 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
stroke 2952 1033 M
5 0 V
6 41 V
5 0 V
6 -41 V
5 41 V
6 40 V
6 -40 V
5 -41 V
6 41 V
5 0 V
6 0 V
6 0 V
5 40 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 41 V
6 -41 V
6 41 V
5 -41 V
6 0 V
5 41 V
6 -41 V
5 41 V
6 -41 V
6 0 V
5 41 V
6 0 V
5 0 V
6 0 V
6 -41 V
5 41 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 41 V
5 -41 V
6 41 V
5 -41 V
6 41 V
6 0 V
5 -41 V
6 41 V
5 0 V
6 0 V
5 0 V
6 0 V
6 40 V
5 0 V
6 0 V
5 41 V
6 0 V
6 -41 V
5 -40 V
6 40 V
5 41 V
6 -41 V
5 41 V
6 -81 V
6 40 V
5 0 V
6 0 V
5 0 V
6 41 V
5 -41 V
6 0 V
6 41 V
5 -41 V
6 41 V
5 0 V
6 -41 V
6 81 V
5 -40 V
6 0 V
5 40 V
6 -40 V
5 0 V
6 0 V
6 0 V
5 40 V
6 -40 V
5 0 V
6 0 V
6 0 V
5 40 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
stroke 3532 1317 M
6 0 V
5 0 V
6 0 V
5 0 V
6 41 V
6 -41 V
5 41 V
6 -41 V
5 41 V
6 0 V
5 -41 V
6 41 V
6 0 V
5 41 V
6 -41 V
5 41 V
6 -41 V
6 0 V
5 41 V
6 -41 V
5 41 V
6 -41 V
5 0 V
6 41 V
6 0 V
5 81 V
6 0 V
5 -41 V
6 -40 V
5 0 V
6 40 V
6 -40 V
5 40 V
6 -40 V
5 40 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 41 V
6 -41 V
6 0 V
5 0 V
6 41 V
5 -41 V
6 0 V
6 41 V
5 0 V
6 -41 V
5 41 V
6 0 V
5 0 V
6 0 V
6 41 V
5 -41 V
6 41 V
5 -41 V
6 41 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 40 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 41 V
6 -41 V
5 41 V
6 0 V
5 -41 V
6 0 V
6 41 V
5 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 41 V
6 -41 V
5 41 V
6 0 V
5 0 V
6 -41 V
5 0 V
6 0 V
6 41 V
5 -41 V
6 41 V
5 -41 V
6 81 V
6 -40 V
stroke 4113 1643 M
5 0 V
6 40 V
5 -40 V
6 40 V
5 0 V
6 -40 V
6 40 V
5 0 V
6 -40 V
5 81 V
6 -41 V
6 41 V
5 0 V
6 0 V
5 -41 V
6 81 V
5 -40 V
6 0 V
6 40 V
5 0 V
6 -40 V
5 40 V
6 0 V
6 -40 V
5 81 V
6 -81 V
5 40 V
6 82 V
5 -82 V
6 0 V
6 41 V
5 81 V
6 -40 V
5 0 V
6 -41 V
6 0 V
5 -41 V
6 41 V
5 41 V
6 40 V
5 -40 V
6 0 V
6 -41 V
5 41 V
6 0 V
5 -41 V
6 81 V
5 82 V
6 -41 V
6 -41 V
5 0 V
6 -40 V
5 40 V
6 41 V
6 -41 V
5 0 V
6 0 V
5 41 V
6 -81 V
5 40 V
6 41 V
6 -41 V
5 41 V
6 0 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 41 V
5 -41 V
6 41 V
5 -41 V
6 81 V
6 -40 V
5 0 V
6 -41 V
5 41 V
6 40 V
5 0 V
6 0 V
6 0 V
5 0 V
6 163 V
5 -163 V
6 122 V
6 -81 V
5 0 V
6 0 V
5 0 V
6 -41 V
5 0 V
6 41 V
6 -41 V
5 41 V
6 0 V
5 40 V
6 -40 V
5 40 V
6 41 V
stroke 4693 2130 M
6 122 V
5 -81 V
6 -41 V
5 0 V
6 41 V
6 -82 V
5 41 V
6 41 V
5 -41 V
6 41 V
5 0 V
6 81 V
6 -81 V
5 243 V
6 -243 V
5 40 V
6 0 V
6 0 V
5 41 V
6 -81 V
5 40 V
6 -40 V
5 40 V
6 -40 V
6 40 V
5 -40 V
6 40 V
5 -40 V
6 0 V
6 40 V
5 0 V
6 41 V
5 -41 V
6 82 V
5 -41 V
6 41 V
6 0 V
5 81 V
6 -81 V
5 0 V
6 0 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
5 40 V
6 -40 V
6 0 V
5 0 V
6 0 V
5 0 V
6 40 V
5 0 V
6 244 V
6 -122 V
5 -122 V
6 0 V
5 41 V
6 -41 V
6 0 V
5 0 V
6 0 V
5 41 V
6 122 V
5 122 V
6 -122 V
6 122 V
5 -82 V
6 -40 V
5 40 V
6 -40 V
6 0 V
5 -82 V
6 41 V
5 0 V
6 0 V
5 0 V
6 41 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 40 V
5 -40 V
6 0 V
5 0 V
6 40 V
5 82 V
6 -82 V
6 0 V
5 82 V
6 162 V
5 -162 V
6 -41 V
6 -41 V
5 0 V
6 41 V
5 41 V
6 -41 V
5 0 V
6 81 V
6 82 V
stroke 5274 2740 M
5 -163 V
6 81 V
5 41 V
6 -81 V
5 0 V
6 40 V
6 41 V
5 41 V
6 40 V
5 0 V
6 -122 V
6 0 V
5 0 V
6 -40 V
5 81 V
6 -41 V
5 0 V
6 0 V
6 0 V
5 41 V
6 0 V
5 41 V
6 0 V
6 -41 V
5 0 V
6 41 V
5 0 V
6 40 V
5 -40 V
6 0 V
6 0 V
5 0 V
6 40 V
5 -40 V
6 81 V
6 -41 V
5 0 V
6 -40 V
5 81 V
6 -41 V
5 0 V
6 41 V
6 0 V
5 0 V
6 0 V
5 40 V
6 -40 V
6 40 V
5 -40 V
6 81 V
5 -41 V
6 41 V
5 -41 V
6 41 V
6 0 V
5 0 V
6 0 V
5 41 V
6 0 V
5 -41 V
6 41 V
6 40 V
5 122 V
6 -40 V
5 121 V
6 -81 V
6 0 V
5 41 V
6 -41 V
5 41 V
6 0 V
5 40 V
6 -40 V
6 81 V
5 -122 V
6 -81 V
5 81 V
6 0 V
6 0 V
5 -40 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 -41 V
5 41 V
6 40 V
5 122 V
6 -41 V
6 -40 V
5 40 V
6 -40 V
5 40 V
6 122 V
5 0 V
6 0 V
6 -81 V
5 -81 V
6 40 V
5 0 V
6 -40 V
6 81 V
5 -41 V
stroke 5854 3186 M
6 0 V
5 41 V
6 -41 V
5 82 V
6 -41 V
6 -41 V
5 163 V
6 -122 V
5 0 V
6 81 V
5 0 V
6 0 V
6 -81 V
5 41 V
6 0 V
5 40 V
6 -40 V
6 81 V
5 -41 V
6 41 V
5 0 V
6 41 V
5 -41 V
6 41 V
6 81 V
5 0 V
6 -41 V
5 -122 V
6 82 V
6 -41 V
5 0 V
6 162 V
5 41 V
6 -122 V
5 81 V
6 41 V
6 0 V
5 -81 V
6 -41 V
5 0 V
6 41 V
6 -41 V
5 0 V
6 41 V
5 -41 V
6 81 V
5 -40 V
6 81 V
6 -41 V
5 0 V
6 41 V
5 0 V
6 -41 V
6 41 V
5 0 V
6 0 V
5 0 V
6 -41 V
5 41 V
6 0 V
6 0 V
5 -41 V
6 0 V
5 41 V
6 41 V
5 40 V
6 -81 V
6 41 V
5 81 V
6 81 V
5 -122 V
6 -40 V
6 0 V
5 0 V
6 40 V
5 41 V
6 -41 V
5 82 V
6 81 V
6 40 V
5 -121 V
6 -41 V
5 162 V
6 -81 V
6 -81 V
5 41 V
6 162 V
5 -122 V
6 0 V
5 122 V
6 -81 V
6 0 V
5 0 V
6 0 V
5 0 V
6 0 V
6 -41 V
5 41 V
6 40 V
5 41 V
6 -81 V
5 81 V
6 -81 V
6 40 V
stroke 6435 3836 M
5 -40 V
6 81 V
5 122 V
6 -163 V
6 0 V
5 41 V
6 0 V
5 0 V
6 -41 V
5 0 V
6 41 V
6 -41 V
5 82 V
6 122 V
5 -41 V
6 0 V
5 41 V
6 162 V
6 -162 V
5 -82 V
6 0 V
5 41 V
6 163 V
6 -82 V
5 -81 V
6 0 V
5 203 V
6 41 V
5 -163 V
6 -40 V
6 0 V
5 0 V
6 40 V
5 -40 V
6 40 V
6 163 V
5 -41 V
6 -81 V
5 122 V
6 81 V
5 -122 V
6 0 V
6 -40 V
5 162 V
6 122 V
5 -163 V
6 -162 V
6 81 V
5 -40 V
6 40 V
5 0 V
6 0 V
5 0 V
6 41 V
6 -41 V
5 0 V
6 -40 V
5 0 V
6 121 V
6 122 V
5 41 V
6 -163 V
5 41 V
6 -81 V
stroke
LT1
LTb
LT1
5948 4382 M
591 0 V
1210 708 M
56 0 V
57 1 V
56 2 V
57 3 V
56 3 V
57 4 V
56 5 V
57 5 V
56 6 V
57 7 V
56 8 V
57 8 V
56 9 V
57 10 V
56 10 V
57 12 V
56 12 V
57 12 V
56 14 V
57 14 V
56 15 V
57 16 V
56 16 V
57 17 V
56 18 V
57 19 V
56 19 V
57 20 V
56 21 V
57 22 V
56 22 V
57 23 V
56 24 V
57 24 V
56 25 V
57 26 V
56 27 V
57 27 V
56 28 V
57 29 V
56 30 V
57 30 V
56 31 V
57 32 V
56 32 V
57 34 V
56 34 V
57 34 V
56 36 V
57 36 V
56 37 V
57 38 V
56 38 V
57 39 V
56 40 V
57 41 V
56 41 V
57 42 V
56 43 V
57 43 V
56 44 V
57 45 V
56 46 V
57 47 V
56 47 V
57 48 V
56 48 V
57 50 V
56 50 V
57 51 V
56 51 V
57 53 V
56 53 V
57 53 V
56 55 V
57 55 V
56 56 V
57 57 V
56 57 V
57 58 V
56 59 V
57 60 V
56 60 V
57 61 V
56 62 V
57 63 V
56 63 V
57 64 V
56 65 V
57 65 V
56 66 V
57 67 V
56 68 V
57 68 V
56 70 V
57 70 V
56 70 V
57 71 V
56 73 V
stroke
LTb
1210 4775 N
0 -4071 V
5593 0 V
0 4071 V
-5593 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer

%%EndDocument
 @endspecial 2267 1333 a Fk(data)2357 1425 y(\014t)p
0 TeXcolorgray 0 TeXcolorgray 20 3537 a(Figure)j(1:)p
0 TeXcolorgray 31 w(Run)25 b(time)i(for)f(sort.)40 b(The)26
b(program)g(w)m(as)h(run)e(500)j(times)e(for)h(eac)m(h)g(v)-5
b(alue)27 b(of)g Ff(n)e Fk(and)h(the)h Ff(y)s Fk(-axis)408
3649 y(giv)m(es)i(the)f(total)h(run)d(time)i(in)g(seconds)f(on)g(m)m(y)
h(laptop,)h(while)e(I)h(w)m(as)g(also)g(doing)g(other)g(things)408
3762 y(lik)m(e)j(t)m(yping)g(this)f(do)s(cumen)m(t)f(and)h(pla)m(ying)g
(m)m(usic)h(videos)f(on)g(y)m(outub)s(e.)40 b(The)29
b(co)s(de)i(for)e(doing)408 3875 y(the)g(timing)f(test)i(is)e
Fg(insert)p 1407 3875 29 4 v 33 w(sort)p 1632 3875 V
33 w(timing.c)p Fk(.)38 b(The)28 b Ff(n)2346 3842 y Fc(2)2413
3875 y Fk(b)s(eha)m(vior)h(is)f(clearly)i(visible)f(and)e(the)408
3988 y(curv)m(e)37 b(0)p Ff(:)p Fk(88\()p Ff(n=)p Fk(1000\))1167
3955 y Fc(2)1247 3988 y Fk(is)f(plotted)h(to)s(o,)i(this)d(w)m(as)h
(\014tted)g(b)m(y)f(ey)m(e)h(but)f(is)h(so)f(go)s(o)s(d)h(a)f(\014t)h
(it)f(is)408 4101 y(hard)29 b(to)i(see)g(it)g(b)s(ehind)e(the)h(run)f
(time)i(data.)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 1858 5665 a(5)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 6 6
TeXDict begin 6 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 960 -185 a Fn(COMS10001)32 b(-)f(P)m(andA2)f(1)p
1948 -185 28 4 v 34 w(in)m(tro)s(duction)g(-)h(Conor)p
0 TeXcolorgray 0 TeXcolorgray 111 76 a Fk(So,)h(to)h(summarise,)e(w)m
(e)h(ha)m(v)m(e)h(lo)s(ok)m(ed)g(at)f(a)g(sort)g(algorithm,)h(insert)f
(sort)g(and)f(found)f(an)i(estimate)h(of)20 189 y(ho)m(w)27
b(the)h(run)e(times)h(gro)m(ws)h(with)f Ff(n)g Fk(for)g(the)g(w)m(orst)
h(case.)41 b(This)26 b(is)i(the)f(most)h(common)f(w)m(a)m(y)h(of)g
(analysing)20 302 y(algorithms.)42 b(This)29 b(will)i(all)g(b)s(e)f
(formalised)h(in)f(the)h(next)f(section.)42 b(Y)-8 b(ou)31
b(migh)m(t)g(exp)s(ect)g(that)g(calculating)20 415 y(the)g(a)m(v)m
(erage,)i(rather)d(than)g(w)m(orst,)h(run)e(time)i(w)m(ould)f(b)s(e)g
(more)h(in)m(teresting.)111 528 y(Ho)m(w)m(ev)m(er,)j(that's)d(usually)
g(more)h(di\016cult,)f(it)h(is)f(often)g(hard)g(to)g(think)g(ab)s(out)g
(exactly)i(what)e(a)m(v)m(erage)20 641 y(means)39 b(and)f(it)h(alw)m(a)
m(ys)h(in)m(v)m(olv)m(es)h(making)e(some)g(assumption)f(ab)s(out)h(the)
f(distribution)g(of)h(the)g(initial)20 753 y(data.)66
b(F)-8 b(urthermore,)40 b(it)f(usually)f(turns)f(out)i(that)g(the)g(a)m
(v)m(erage)i(case)e(usually)f(has)g(the)h(same)g(sort)f(of)20
866 y(b)s(eha)m(vior)28 b(as)g(the)g(w)m(orst)g(case)g(b)s(eha)m(vior.)
40 b(F)-8 b(or)29 b(example,)g(for)f(insert)f(sort,)i(y)m(ou)f(migh)m
(t)g(replace)h Ff(i)f Fk(with)f Ff(i=)p Fk(2)20 979 y(in)k(the)g(sums)f
(to)h(get)h(the)g(a)m(v)m(erage)h(b)s(eha)m(vior,)f(but)e(that)h(will)h
(still)g(lead)f(to)h Ff(n)2732 946 y Fc(2)2771 979 y
Fk(.)42 b(W)-8 b(e)32 b(will)g(lo)s(ok)f(at)h(a)f(case,)20
1092 y(quic)m(k)c(sort,)h(where)e(the)h(w)m(orst)g(b)s(eha)m(vior)f(is)
h(v)m(ery)g(un)m(usual,)f(so)h(a)g(measure)g(of)f(the)h(`general)h
(case')g(is)e(more)20 1205 y(useful.)111 1318 y(One)45
b(thing)g(to)i(realise)f(is)g(that)g(the)f(leading)i(order)e(b)s(eha)m
(vior)g(dominates,)50 b(that)c(in)f(c)m(ho)s(osing)i(an)20
1431 y(algorithm,)d(if)c Ff(n)f Fk(is)h(large,)j(and)d(these)g(issues)g
(really)g(only)h(matter)f(is)g Ff(n)g Fk(is)g(large,)j(the)d(leading)h
(order)20 1544 y(b)s(eha)m(vior,)34 b Ff(O)s Fk(\()p
Ff(n)582 1511 y Fc(2)621 1544 y Fk(\))g(or)f Ff(O)s Fk(\()p
Ff(n)p Fk(\))g(or)g(whatev)m(er,)i(is)e(what's)g(imp)s(ortan)m(t,)i
(not)e(the)g(precise)h(co)s(e\016cien)m(ts.)51 b(Once)20
1657 y(the)32 b(algorithm)g(is)f(c)m(hosen,)h(if)g(sp)s(eed)e(is)h(v)m
(ery)h(imp)s(ortan)m(t,)g(then)f(the)g(co)s(de)h(can)g(b)s(e)e
(optimised)i(to)g(reduce)20 1770 y(the)39 b(co)s(e\016cien)m(t)i(of)f
(the)f(leading)h(term.)67 b(Ho)m(w)m(ev)m(er,)44 b(it)c(is)f(w)m(orth)g
(noting)h(that)f(it)h(is)f(the)h(leading)f(term)20 1883
y(that)d(dominated)g(so)g(an)m(y)f(optimizations)j(should)c(b)s(e)h
(directed)h(at)g(it's)h(co)s(e\016cien)m(ts,)h(an)m(y)e(tric)m(k)m(ery)
h(y)m(ou)20 1995 y(do)28 b(to)g(sp)s(eed)f(up)g(co)s(de)h(is)g(unlik)m
(ely)g(to)h(ha)m(v)m(e)g(a)f(sp)s(eed)f(up)f(bigger)j(than)e(the)h
(extra)h(factor)g(of)f Ff(n)f Fk(or)h(log)17 b Ff(n)27
b Fk(or)20 2108 y(whatev)m(er)32 b(separating)g(the)f(leading)h(and)f
(sub-leading)g(terms.)43 b(In)31 b(other)g(w)m(ords,)g(in)g(the)h
(example)f(giv)m(en)20 2221 y(here,)f(it)h(is)f(only)h(w)m(orth)f(w)m
(orrying)g(ab)s(out)g(reducing)g Ff(t)1925 2235 y Fc(10)1999
2221 y Fk(,)g Ff(t)2087 2235 y Fc(11)2192 2221 y Fk(and)g
Ff(t)2402 2235 y Fc(12)2476 2221 y Fk(.)41 b(This)29
b(is)h(sometimes)i(summed)d(up)20 2334 y(with)g(the)h(slogan:)41
b(`nev)m(er)30 b(optimize)h(outside)f(the)f(inner)g(lo)s(op'.)41
b(In)29 b(short,)g(for)h(most)g(of)f(y)m(our)h(co)s(de,)g(k)m(eep)20
2447 y(it)35 b(readable)f(and)f(easy)i(to)g(up)s(date,)f(but)f(for)h
(the)g(inner)f(lo)s(op,)i(if)f(sp)s(eed)f(is)h(imp)s(ortan)m(t,)i
(squeeze)e(out)h(all)20 2560 y(the)c(optimizations)h(y)m(ou)f(can.)p
0 TeXcolorgray 20 2798 a Fl(Big)37 b(Oh)g(notation)p
0 TeXcolorgray 20 2970 a Fk(The)32 b(`Big)h(Oh')e(notation)j(has)e
(already)g(b)s(een)g(used)f(to)i(describ)s(e)e(the)i(b)s(eha)m(vior)f
(of)g(the)g(running)f(time)h(of)20 3083 y(insert)e(sort,)h(w)m(e)g
(said)1611 3196 y Ff(T)13 b Fk(\()p Ff(n)p Fk(\))25 b
Fd(2)g Ff(O)s Fk(\()p Ff(n)2075 3158 y Fc(2)2114 3196
y Fk(\))p 0 TeXcolorgray 1430 w(\(10\))p 0 TeXcolorgray
20 3346 a(Here)c(w)m(e)g(w)m(an)m(t)h(to)f(formalize)h(this)f
(notation.)38 b(Basically)23 b Ff(O)s Fk(\()p Ff(n)2146
3313 y Fc(2)2185 3346 y Fk(\))e(is)g(a)g(set)g(of)g(function,)i(it)e
(is)f(all)i(the)f(function)20 3459 y(whic)m(h,)36 b(for)e(large)i(v)-5
b(alues)35 b(of)f Ff(n)g Fk(go)i(to)f(in\014nit)m(y)g(lik)m(e)g
Ff(n)1936 3426 y Fc(2)2010 3459 y Fk(at)g(the)g(fastest.)54
b(By)35 b(sa)m(ying)h Ff(T)13 b Fk(\()p Ff(n)p Fk(\))32
b Fd(2)g Ff(O)s Fk(\()p Ff(n)3528 3426 y Fc(2)3567 3459
y Fk(\))j(w)m(e)20 3572 y(are)c(sa)m(ying)g(that)g Ff(T)13
b Fk(\()p Ff(n)p Fk(\))30 b(is)h(one)g(of)f(these)h(functions,)f(its)h
(large)g Ff(n)f Fk(b)s(eha)m(vior)h(is,)f(at)h(w)m(orst,)g(lik)m(e)h
Ff(n)3406 3539 y Fc(2)3445 3572 y Fk(.)111 3685 y(Sp)s(eci\014cally)-8
b(,)31 b(the)g(de\014nition)f(of)h Ff(O)s Fk(\()p Ff(g)s
Fk(\()p Ff(n)p Fk(\),)g(called)h(`big)f(oh')f(of)h Ff(g)s
Fk(\()p Ff(n)p Fk(\),)g(is)368 3856 y Ff(O)s Fk(\()p
Ff(g)s Fk(\()p Ff(n)p Fk(\)\))c(=)e Fd(f)p Ff(f)10 b
Fk(\()p Ff(n)p Fk(\))p Fd(j9)p Ff(n)1160 3870 y Fc(0)1224
3856 y Ff(>)25 b Fk(0)h Fd(2)f Fi(N)30 b Fk(and)f Ff(c)d(>)f
Fk(0)h Fd(2)f Fi(R)30 b Fk(with)g Fd(j)p Ff(f)10 b Fk(\()p
Ff(n)p Fk(\))p Fd(j)26 b(\024)f Ff(c)p Fd(j)p Ff(g)s
Fk(\()p Ff(n)p Fk(\))p Fd(j)15 b(8)p Ff(n)26 b Fd(\025)f
Ff(n)3308 3870 y Fc(0)3347 3856 y Fd(g)p 0 TeXcolorgray
187 w Fk(\(11\))p 0 TeXcolorgray 20 4028 a(This)41 b(de\014nition)h(is)
g(quite)g(dense,)j(but)c(w)m(e)i(can)f(break)g(it)g(do)m(wn:)64
b(it)42 b(sa)m(ys)h(that)f Ff(O)s Fk(\()p Ff(g)s Fk(\()p
Ff(n)p Fk(\)\))h(is)f(a)h(set)f(of)20 4141 y(functions,)31
b(the)h(curly)f(brac)m(k)m(ets)i(mean)e(`set'.)44 b Ff(f)10
b Fk(\()p Ff(n)p Fk(\))31 b(is)h(in)f(the)g(set)h(if)f(it)h(has)f(a)h
(particular)f(prop)s(ert)m(y:)42 b(the)20 4254 y(`)p
Fd(j)p Fk(')31 b(can)g(b)s(e)f(read)g(as)h(`suc)m(h)f(that')h(or)g
(`with)f(the)h(prop)s(ert)m(y)e(that')j(and)d(so)i(this)f(is)h(the)f
(set)h(of)g Ff(f)10 b Fk(\()p Ff(n)p Fk(\)'s)30 b(where)20
4367 y Ff(f)10 b Fk(\()p Ff(n)p Fk(\))33 b(has)h(the)g(prop)s(ert)m(y)f
(on)h(the)g(righ)m(t)g(of)g(the)g Fd(j)p Fk(.)52 b(No)m(w,)35
b(`)p Fd(9)p Fk(')f(means)g(`there)g(exists')h(and)e(`)p
Fd(8)p Fk(')h(means)f(`for)20 4479 y(all',)42 b(so)d(the)g(de\014ning)e
(prop)s(ert)m(y)h(sa)m(ys)i(it)f(is)f(p)s(ossible)h(to)g(\014nd)e(a)i
(p)s(ositiv)m(e)h(natural)e(n)m(um)m(b)s(er)g Ff(n)3433
4493 y Fc(0)3510 4479 y Fk(and)g(a)20 4592 y(p)s(ositiv)m(e)33
b(real)f(n)m(um)m(b)s(er)e Ff(c)i Fk(so)g(that)g(if)g(y)m(ou)g(c)m(ho)s
(ose)h(a)f(v)-5 b(alue)32 b(of)g Ff(n)f Fk(at)h(least)h(as)f(big)g(as)g
Ff(n)3062 4606 y Fc(0)3132 4592 y Fk(then)g Ff(f)10 b
Fk(\()p Ff(n)p Fk(\))31 b(is)h(no)20 4705 y(bigger)c(than)e
Ff(cg)s Fk(\()p Ff(n)p Fk(\),)j Fi(N)e Fk(and)f Fi(R)h
Fk(stand)g(for)g(the)g(natural)g(and)f(real)h(n)m(um)m(b)s(ers.)38
b(Notice)29 b(the)e(absolute)h(v)-5 b(alue)20 4818 y(signs,)36
b(this)f(is)h(ab)s(out)e Fd(j)p Ff(f)10 b Fk(\()p Ff(n)p
Fk(\))p Fd(j)35 b Fk(and)g Fd(j)p Ff(g)s Fk(\()p Ff(n)p
Fk(\))p Fd(j)p Fk(,)j(in)c(fact,)k(here)d(w)m(e)g(are)h(in)m(terested)g
(in)f(run)e(times,)k(so)f(w)m(e)f(will)20 4931 y(deal)c(with)g
(functions)f(that)h(are)g(non-negativ)m(e,)i(or)e(are)g(non-negativ)m
(e)h(pro)m(vided)f Ff(n)f Fk(is)g(larger)i(than)e(some)20
5044 y(threshold,)g(for)g(example,)i(log)1083 5066 y
Fc(2)1138 5044 y Ff(n)d Fk(will)i(b)s(e)f(imp)s(ortan)m(t,)h(log)2090
5066 y Fc(2)2145 5044 y Ff(n)f Fk(is)g(p)s(ositiv)m(e)h(pro)m(vided)f
Ff(n)25 b(>)g Fk(1.)111 5157 y(In)35 b(short,)h Ff(f)10
b Fk(\()p Ff(n)p Fk(\))35 b(can)h(do)f(all)i(sorts)e(of)h(crazy)g
(stu\013)f(for)h(small)g(v)-5 b(alues)35 b(of)h Ff(n)f
Fk(but,)h(if)g(y)m(ou)f(tak)m(e)i Ff(n)e Fk(large)20
5270 y(enough,)c(its)g(b)s(eha)m(vior)g(is)f(b)s(ounded)f(b)m(y)h(the)h
(b)s(eha)m(vior)g(of)g Ff(g)s Fk(\()p Ff(n)p Fk(\).)42
b(No)m(w)31 b(it)g(do)s(esn't)g(sa)m(y)g(it)g(is)g(b)s(ounded)e(b)m(y)p
0 TeXcolorgray 0 TeXcolorgray 1858 5665 a(6)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 7 7
TeXDict begin 7 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 960 -185 a Fn(COMS10001)32 b(-)f(P)m(andA2)f(1)p
1948 -185 28 4 v 34 w(in)m(tro)s(duction)g(-)h(Conor)p
0 TeXcolorgray 0 TeXcolorgray 20 76 a Ff(g)s Fk(\()p
Ff(n)p Fk(\),)40 b(it)d(is)g(a)g(statemen)m(t)h(ab)s(out)f(the)g(b)s
(eha)m(vior,)h(that's)g(the)f(role)g(of)g(the)g Ff(c)p
Fk(.)60 b(If)36 b(y)m(ou)i(kno)m(w)e(the)h(formal)20
189 y(de\014nition)28 b(of)g(limits)h(y)m(ou)f(can)g(see)h(that)g(the)f
(de\014nition)g(of)g Ff(O)s Fk(\()p Ff(g)s Fk(\()p Ff(n)p
Fk(\)\))h(has)f(this)g(wrapp)s(ed)e(up)h(in)h(it,)h(if)f(sa)m(ys)1139
441 y Ff(f)10 b Fk(\()p Ff(n)p Fk(\))24 b Fd(2)h Ff(O)s
Fk(\()p Ff(g)s Fk(\()p Ff(n)p Fk(\)\))52 b Fd(\()-15
b(\))79 b Fk(lim)2011 491 y Fe(n)p Fa(!1)2220 379 y Ff(f)10
b Fk(\()p Ff(n)p Fk(\))p 2220 420 180 4 v 2224 503 a
Ff(g)s Fk(\()p Ff(n)p Fk(\))2435 441 y Ff(<)25 b Fd(1)p
0 TeXcolorgray 957 w Fk(\(12\))p 0 TeXcolorgray 111 689
a(Here)31 b(are)g(some)f(examples,)i(sa)m(y)1493 802
y Ff(T)13 b Fk(\()p Ff(n)p Fk(\))26 b(=)f(5)p Ff(n)1906
764 y Fc(2)1965 802 y Fk(+)20 b Ff(n)g Fk(+)g(6)p 0 TeXcolorgray
1312 w(\(13\))p 0 TeXcolorgray 20 969 a(then)1611 1081
y Ff(T)13 b Fk(\()p Ff(n)p Fk(\))25 b Fd(2)g Ff(O)s Fk(\()p
Ff(n)2075 1044 y Fc(2)2114 1081 y Fk(\))p 0 TeXcolorgray
1430 w(\(14\))p 0 TeXcolorgray 20 1248 a(b)m(y)-8 b(,)31
b(for)f(example,)h(taking)h Ff(c)25 b Fk(=)g(5)c(+)f(1)h(+)e(6)26
b(=)f(12)31 b(then)1496 1453 y(12)p Ff(n)1641 1415 y
Fc(2)1707 1453 y Fd(\025)25 b Fk(5)p Ff(n)1903 1415 y
Fc(2)1962 1453 y Fk(+)20 b Ff(n)g Fk(+)g(6)p 0 TeXcolorgray
1315 w(\(15\))p 0 TeXcolorgray 20 1657 a(pro)m(vided)30
b Ff(n)25 b Fd(\025)g Fk(1)31 b(so)f Ff(n)812 1671 y
Fc(0)876 1657 y Fk(=)25 b(1)31 b(here.)41 b(This)29 b(could)i(also)g(b)
s(e)f(succinctly)h(demonstrated)g(using)e(the)i(limit)792
1911 y(lim)763 1961 y Fe(n)p Fa(!1)972 1850 y Fk(5)p
Ff(n)1072 1817 y Fc(2)1132 1850 y Fk(+)20 b Ff(n)g Fk(+)g(6)p
972 1890 462 4 v 1156 1974 a Ff(n)1211 1947 y Fc(2)1469
1911 y Fk(=)54 b(lim)1565 1961 y Fe(n)p Fa(!1)1764 1911
y Fk(5)21 b(+)49 b(lim)1921 1961 y Fe(n)p Fa(!1)2134
1850 y Fk(1)p 2130 1890 55 4 v 2130 1974 a Ff(n)2215
1911 y Fk(+)f(lim)2306 1961 y Fe(n)p Fa(!1)2539 1850
y Fk(6)p 2515 1890 95 4 v 2515 1974 a Ff(n)2570 1947
y Fc(2)2644 1911 y Fk(=)25 b(5)h Ff(<)e Fd(1)p 0 TeXcolorgray
582 w Fk(\(16\))p 0 TeXcolorgray 111 2135 a(Ho)m(w)m(ev)m(er,)1631
2248 y Ff(T)13 b Fk(\()p Ff(n)p Fk(\))25 b Fd(62)g Ff(O)s
Fk(\()p Ff(n)p Fk(\))p 0 TeXcolorgray 1449 w(\(17\))p
0 TeXcolorgray 20 2415 a(Sa)m(y)31 b(w)m(e)g(c)m(hosen)g(some)f(v)-5
b(alue)31 b Ff(c)g Fk(then)1542 2528 y(5)p Ff(n)1642
2491 y Fc(2)1702 2528 y Fk(+)19 b Ff(n)h Fk(+)g(6)26
b Ff(>)f(cn)p 0 TeXcolorgray 1360 w Fk(\(18\))p 0 TeXcolorgray
20 2695 a(for)38 b(large)h(enough)e Ff(n)p Fk(,)j(to)f(c)m(hec)m(k)g
(this)f(divide)g(b)s(oth)f(sides)g(b)m(y)h Ff(n)g Fk(so)g(w)m(e)g(need)
g(to)g(sho)m(w)g(that)h Ff(n)e Fk(can)h(b)s(e)20 2808
y(c)m(hosen)31 b(so)g(that)1579 2921 y(5)p Ff(n)20 b
Fk(+)g(1)h(+)1964 2859 y Ff(c)p 1957 2900 55 4 v 1957
2983 a(n)2046 2921 y(>)k(c)p 0 TeXcolorgray 1398 w Fk(\(19\))p
0 TeXcolorgray 20 3108 a(Since)1470 3221 y(5)p Ff(n)c
Fk(+)e(1)i(+)1856 3159 y Ff(c)p 1848 3199 V 1848 3283
a(n)1938 3221 y(>)k Fk(5)p Ff(n)20 b Fk(+)g(1)p 0 TeXcolorgray
1289 w(\(20\))p 0 TeXcolorgray 20 3413 a(then,)30 b(if)h
Ff(n)25 b(>)g(c=)p Fk(5)1226 3545 y(5)p Ff(n)20 b Fk(+)g(1)h(+)1611
3484 y Ff(c)p 1604 3524 V 1604 3607 a(n)1694 3545 y(>)j
Fk(5)1847 3484 y Ff(c)p 1844 3524 46 4 v 1844 3607 a
Fk(5)1921 3545 y(+)19 b(1)26 b(=)f Ff(c)c Fk(+)f(1)25
b Ff(>)g(c)p 0 TeXcolorgray 1045 w Fk(\(21\))p 0 TeXcolorgray
20 3738 a(so,)31 b(no)f(matter)h(what)g(v)-5 b(alue)31
b(of)f Ff(c)h Fk(is)f(c)m(hosen,)h(making)g Ff(n)25 b(>)g
Fk(5)p Ff(=n)31 b Fk(implies)1542 3942 y(5)p Ff(n)1642
3905 y Fc(2)1702 3942 y Fk(+)19 b Ff(n)h Fk(+)g(6)26
b Ff(>)f(cn)p 0 TeXcolorgray 1360 w Fk(\(22\))p 0 TeXcolorgray
20 4146 a(so)31 b(5)p Ff(n)232 4113 y Fc(2)291 4146 y
Fk(+)20 b Ff(n)g Fk(+)g(6)26 b Fd(62)f Ff(O)s Fk(\()p
Ff(n)p Fk(\).)40 b(Again,)32 b(the)e(limit)h(do)s(es)f(the)h(same)g
(job)882 4406 y(lim)854 4456 y Fe(n)p Fa(!1)1063 4344
y Fk(5)p Ff(n)1163 4311 y Fc(2)1222 4344 y Fk(+)20 b
Ff(n)g Fk(+)g(6)p 1063 4385 462 4 v 1266 4468 a Ff(n)1560
4406 y Fk(=)53 b(lim)1655 4456 y Fe(n)p Fa(!1)1855 4406
y Fk(5)p Ff(n)20 b Fk(+)49 b(lim)2066 4456 y Fe(n)p Fa(!1)2265
4406 y Fk(1)20 b(+)49 b(lim)2421 4456 y Fe(n)p Fa(!1)2635
4344 y Fk(6)p 2630 4385 55 4 v 2630 4468 a Ff(n)2720
4406 y Fk(=)25 b Fd(1)p 0 TeXcolorgray 672 w Fk(\(23\))p
0 TeXcolorgray 111 4631 a(In)30 b(practice,)i(if)1065
4744 y Ff(T)13 b Fk(\()p Ff(n)p Fk(\))26 b(=)f Ff(a)1426
4758 y Fe(r)1464 4744 y Ff(n)1519 4706 y Fe(r)1576 4744
y Fk(+)20 b Ff(a)1715 4758 y Fe(r)r Fa(\000)p Fc(1)1844
4744 y Ff(n)1899 4706 y Fe(r)r Fa(\000)p Fc(1)2046 4744
y Fk(+)g Ff(:)15 b(:)g(:)22 b Fk(+)e Ff(a)2403 4758 y
Fc(1)2442 4744 y Ff(n)g Fk(+)g Ff(a)2656 4758 y Fc(0)p
0 TeXcolorgray 3579 4744 a Fk(\(24\))p 0 TeXcolorgray
20 4911 a(then)30 b Ff(T)13 b Fk(\()p Ff(n)p Fk(\))25
b Fd(2)g Ff(O)s Fk(\()p Ff(n)691 4878 y Fe(r)729 4911
y Fk(\).)41 b(W)-8 b(e)32 b(will)e(recap)h(this)f(and)g(lo)s(ok)h(at)g
(other)g(functions)f(in)g(the)g(next)h(c)m(hapter.)p
0 TeXcolorgray 0 TeXcolorgray 1858 5665 a(7)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
